###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        09/Sep/2015  17:12:33
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\util\common\form-and-join.c
#    Command line =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\util\common\form-and-join.c -D
#        NULL_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D
#        PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/ZigbeeRoute/ZigbeeRoute_endpoint_config.h\""
#        -D "BOARD_HEADER=\"app\builder\ZigbeeRoute\ZigbeeRoute_board.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute_tokens.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "ZA_GENERATED_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute.h\"" -D
#        "__SOURCEFILE__=\"form-and-join.c\"" -lC
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\lst\
#        --diag_suppress Pa050 -o
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\obj\ --debug
#        --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\util\common\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\framework\include\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\util\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\stack\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\lst\form-and-join.lst
#    Object file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\obj\form-and-join.o
#
###############################################################################

E:\Zigbee\EmberZNet5.6.0-GA\app\util\common\form-and-join.c
      1          // *****************************************************************************
      2          // * form-and-join.c
      3          // * 
      4          // * Utilities for forming and joining networks.
      5          // * See form-and-join.h for a description of the exported interface.
      6          // *
      7          // * Copyright 2008 by Ember Corporation. All rights reserved.              
      8          // **************************************************************************80*
      9          
     10          #include PLATFORM_HEADER     // Micro and compiler specific typedefs and macros
     11          
     12          #define __FORM_AND_JOIN_C__
     13          
     14          #ifdef EZSP_HOST
     15            // Includes needed for ember related functions for the EZSP host
     16            #include "stack/include/error.h"
     17            #include "stack/include/ember-types.h"
     18            #include "app/util/ezsp/ezsp-protocol.h"
     19            #include "app/util/ezsp/ezsp.h"
     20            #include "app/util/ezsp/ezsp-utils.h"
     21            #include "app/util/ezsp/serial-interface.h"
     22          #else
     23            // Includes needed for ember related functions for the EM250
     24            #include "stack/include/ember-types.h"
     25          #endif // EZSP_HOST
     26          #include "stack/include/error.h"
     27          #include "hal/hal.h" 
     28          #include "app/util/serial/serial.h"
     29          #include "form-and-join.h"
     30          #include "form-and-join-adapter.h"
     31          
     32          // We can't include ember.h or ezsp.h from this file since it is used
     33          // for both host and node-size libraries.  However the emberStartScan()
     34          // API is identical in both.
     35          extern EmberStatus emberStartScan(int8u scanType, 
     36                                            int32u channelMask, 
     37                                            int8u duraiton);
     38          
     39          enum {
     40            FORM_AND_JOIN_NOT_SCANNING,
     41            FORM_AND_JOIN_NEXT_NETWORK,
     42            FORM_AND_JOIN_ENERGY_SCAN,      
     43            FORM_AND_JOIN_PAN_ID_SCAN,      
     44            FORM_AND_JOIN_JOINABLE_SCAN,    
     45            FORM_AND_JOIN_DUAL_CHANNEL_SCAN 
     46          };
     47          

   \                                 In section .bss, align 4
     48          static int8u formAndJoinScanType = FORM_AND_JOIN_NOT_SCANNING;
   \                     formAndJoinScanType:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 1
   \   00000003                      DS8 1
   \   00000004                      DS8 4
   \   00000008                      DS8 4
   \   0000000C                      DS8 8
     49          
     50          static int8u *dataContents;
     51          #define panIdCandidates ((int16u *) dataContents)
     52          #define channelEnergies (dataContents)
     53          
     54          static int8u extendedPanIdCache[8];
     55          static int32u channelMaskCache;
     56          static int8u channelCache;
     57          static boolean ignoreExtendedPanId;
     58          static int8u networkCount;  // The number of NetworkInfo records.
     59          
     60          // The dual channel code is only present on the EM250 and EM260.

   \                                 In section .data, align 1
     61          boolean emberEnableDualChannelScan = TRUE;
   \                     emberEnableDualChannelScan:
   \   00000000   0x01               DC8 1
     62          
     63          // The minimum significant difference between energy scan results.
     64          // Results that differ by less than this are treated as identical.
     65          #define ENERGY_SCAN_FUZZ 15
     66          
     67          #define NUM_PAN_ID_CANDIDATES 16  // Must fit into one packet buffer on the node
     68          
     69          #define INVALID_PAN_ID 0xFFFF
     70          
     71          // ZigBee specifies that active scans have a duration of 3 (138 msec).
     72          // See documentation for emberStartScan in include/network-formation.h
     73          // for more info on duration values.
     74          #define ACTIVE_SCAN_DURATION 3
     75          
     76          //------------------------------------------------------------------------------
     77          // Macros for enabling or disabling debug print messages.
     78           #define SCAN_DEBUG_PRINT_ENABLE
     79          
     80          #ifdef SCAN_DEBUG_PRINT_ENABLE
     81             // define this if printing messages -- note serial port used is 1
     82             #define SCAN_DEBUG_MSG(x,y) emberSerialPrintf(1,x,y); emberSerialWaitSend(1)
     83             #define SCAN_DEBUG(x) emberSerialPrintf(1,x); emberSerialWaitSend(1)
     84          
     85             #define SCAN_DEBUG_XPAN_PRINT(xpan)  \
     86                do {                                     \
     87                       emberSerialPrintf(1, "%x%x%x%x%x%x%x%x", \
     88                          xpan[0], xpan[1], xpan[2], xpan[3], \
     89                          xpan[4], xpan[5], xpan[6], xpan[7]); \
     90                       emberSerialWaitSend(1);  \
     91                   } while (FALSE)
     92          
     93          #elif defined(EMBER_SCRIPTED_TEST) 
     94            void debug(const char* format, ...);
     95            boolean isTestFrameworkDebugOn(void);
     96            #define SCAN_DEBUG_MSG(x,y) debug(x,y)
     97            #define SCAN_DEBUG(x) debug(x )
     98            #define SCAN_DEBUG_XPAN_PRINT(xpan) \
     99                do {                                     \
    100                       debug("%x%x%x%x%x%x%x%x", \
    101                          xpan[0], xpan[1], xpan[2], xpan[3], \
    102                          xpan[4], xpan[5], xpan[6], xpan[7]); \
    103                   } while (FALSE)
    104          
    105          #else
    106             // define this to turn off printing messages
    107             #define SCAN_DEBUG_MSG(x, ...) 
    108             #define SCAN_DEBUG(x) 
    109             #define SCAN_DEBUG_XPAN_PRINT(x) 
    110          #endif
    111          
    112          //------------------------------------------------------------------------------
    113          // Forward declarations for the benefit of the compiler.
    114          
    115          static void saveNetwork(EmberZigbeeNetwork *network, int8u lqi, int8s rssi);
    116          static boolean setup(int8u scanType);
    117          static EmberStatus startScan(EmberNetworkScanType type, int32u mask, int8u duration);
    118          static void startPanIdScan(void);
    119          static boolean isArrayZero(int8u* array, int8u size);
    120          
    121          //------------------------------------------------------------------------------
    122          // Finding unused PAN ids.
    123          

   \                                 In section .text, align 2, keep-with-next
    124          EmberStatus emberScanForUnusedPanId(int32u channelMask, int8u duration)
    125          {
   \                     emberScanForUnusedPanId: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    126            EmberStatus status = EMBER_ERR_FATAL;
   \   00000006   0x2601             MOVS     R6,#+1
    127            if (setup(FORM_AND_JOIN_ENERGY_SCAN)) {
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x.... 0x....      BL       setup
   \   0000000E   0xB160             CBZ.N    R0,??emberScanForUnusedPanId_0
    128              MEMSET(channelEnergies, 0xFF, EMBER_NUM_802_15_4_CHANNELS);
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable24_1
   \   00000014   0x6840             LDR      R0,[R0, #+4]
   \   00000016   0x2210             MOVS     R2,#+16
   \   00000018   0x21FF             MOVS     R1,#+255
   \   0000001A   0x.... 0x....      BL       halCommonMemSet
    129              status = startScan(EMBER_ENERGY_SCAN, channelMask, duration);
   \   0000001E   0x462A             MOV      R2,R5
   \   00000020   0x4621             MOV      R1,R4
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      BL       startScan
   \   00000028   0x4606             MOV      R6,R0
    130            }
    131            return status;
   \                     ??emberScanForUnusedPanId_0: (+1)
   \   0000002A   0x4630             MOV      R0,R6
   \   0000002C   0xBD70             POP      {R4-R6,PC}       ;; return
    132          }
    133          
    134          // Pick a channel from among those with the lowest energy and then look for
    135          // a PAN ID not in use on that channel.
    136          // 
    137          // The energy scans are not particularly accurate, especially as we don't run
    138          // them for very long, so we add in some slop to the measurements and then pick
    139          // a random channel from the least noisy ones.  This avoids having several
    140          // coordinators pick the same slightly quieter channel.
    141          

   \                                 In section .text, align 2, keep-with-next
    142          static void energyScanComplete(void)
    143          {
   \                     energyScanComplete: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    144            int8u cutoff = 0xFF;
    145            int8u candidateCount = 0;
    146            int8u channelIndex;
    147            int8u i;
    148          
    149            for (i = 0; i < EMBER_NUM_802_15_4_CHANNELS; i++) {
   \   00000002   0x.... 0x....      LDR.W    R5,??DataTable24_1
   \   00000006   0x6869             LDR      R1,[R5, #+4]
   \   00000008   0x24FF             MOVS     R4,#+255
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0x2000             MOVS     R0,#+0
    150              if (channelEnergies[i] < cutoff - ENERGY_SCAN_FUZZ) {
   \                     ??energyScanComplete_0: (+1)
   \   0000000E   0x5C42             LDRB     R2,[R0, R1]
   \   00000010   0xF1A4 0x030F      SUB      R3,R4,#+15
   \   00000014   0x429A             CMP      R2,R3
   \   00000016   0xBFBC             ITT      LT 
    151                cutoff = channelEnergies[i] + ENERGY_SCAN_FUZZ;
   \   00000018   0xF102 0x040F      ADDLT    R4,R2,#+15
   \   0000001C   0xB2E4             UXTBLT   R4,R4
    152              }
    153            }
   \   0000001E   0x1C40             ADDS     R0,R0,#+1
   \   00000020   0x2810             CMP      R0,#+16
   \   00000022   0xDBF4             BLT.N    ??energyScanComplete_0
    154          
    155            // There must be at least one channel,
    156            // so there will be at least one candidate.
    157            for (i = 0; i < EMBER_NUM_802_15_4_CHANNELS; i++) {
   \   00000024   0x2000             MOVS     R0,#+0
    158              if (channelEnergies[i] < cutoff) {
   \                     ??energyScanComplete_1: (+1)
   \   00000026   0x5C42             LDRB     R2,[R0, R1]
   \   00000028   0x42A2             CMP      R2,R4
   \   0000002A   0xBFBC             ITT      LT 
    159                candidateCount += 1;
   \   0000002C   0x1C76             ADDLT    R6,R6,#+1
   \   0000002E   0xB2F6             UXTBLT   R6,R6
    160              }
    161            }
   \   00000030   0x1C40             ADDS     R0,R0,#+1
   \   00000032   0x2810             CMP      R0,#+16
   \   00000034   0xDBF7             BLT.N    ??energyScanComplete_1
    162          
    163            // If for some reason we never got any energy scan results
    164            // then our candidateCount will be 0.  We want to avoid that case and
    165            // bail out (since we will do a divide by 0 below)
    166            if (candidateCount == 0) {
   \   00000036   0x0030             MOVS     R0,R6
   \   00000038   0xD103             BNE.N    ??energyScanComplete_2
    167              emberFormAndJoinCleanup(EMBER_ERR_FATAL);
   \   0000003A   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0x....             B.N      emberFormAndJoinCleanup
    168              return;
    169            }
    170          
    171            channelIndex = halCommonGetRandom() % candidateCount;
   \                     ??energyScanComplete_2: (+1)
   \   00000042   0x.... 0x....      BL       halCommonGetRandom
   \   00000046   0xFB90 0xF1F6      SDIV     R1,R0,R6
   \   0000004A   0xFB06 0x0111      MLS      R1,R6,R1,R0
   \   0000004E   0xB2C9             UXTB     R1,R1
    172          
    173            for (i = 0; i < EMBER_NUM_802_15_4_CHANNELS; i++) {
   \   00000050   0x2000             MOVS     R0,#+0
    174              if (channelEnergies[i] < cutoff) {
   \                     ??energyScanComplete_3: (+1)
   \   00000052   0x686A             LDR      R2,[R5, #+4]
   \   00000054   0x5C82             LDRB     R2,[R0, R2]
   \   00000056   0x42A2             CMP      R2,R4
   \   00000058   0xDA06             BGE.N    ??energyScanComplete_4
    175                if (channelIndex == 0) {
   \   0000005A   0x000A             MOVS     R2,R1
   \   0000005C   0xD102             BNE.N    ??energyScanComplete_5
    176                  channelCache = EMBER_MIN_802_15_4_CHANNEL_NUMBER + i;
   \   0000005E   0x300B             ADDS     R0,R0,#+11
   \   00000060   0x7068             STRB     R0,[R5, #+1]
    177                  break;
   \   00000062   0xE005             B.N      ??energyScanComplete_6
    178                }
    179                channelIndex -= 1;
   \                     ??energyScanComplete_5: (+1)
   \   00000064   0x1E49             SUBS     R1,R1,#+1
   \   00000066   0xB2C9             UXTB     R1,R1
    180              }
    181            }
   \                     ??energyScanComplete_4: (+1)
   \   00000068   0x1C40             ADDS     R0,R0,#+1
   \   0000006A   0xB2C0             UXTB     R0,R0
   \   0000006C   0x2810             CMP      R0,#+16
   \   0000006E   0xDBF0             BLT.N    ??energyScanComplete_3
    182          
    183            startPanIdScan();
   \                     ??energyScanComplete_6: (+1)
   \   00000070   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   00000074                      REQUIRE startPanIdScan
   \   00000074                      ;; // Fall through to label startPanIdScan
    184          }
    185          
    186          // PAN IDs can be 0..0xFFFE.  We pick some trial candidates and then do a scan
    187          // to find one that is not in use.
    188          

   \                                 In section .text, align 2, keep-with-next
    189          static void startPanIdScan(void)
    190          {
   \                     startPanIdScan: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    191            int8u i;
    192          
    193            for (i = 0; i < NUM_PAN_ID_CANDIDATES;) {
   \   00000002   0x2400             MOVS     R4,#+0
    194              int16u panId = halCommonGetRandom() & 0xFFFF;
   \                     ??startPanIdScan_0: (+1)
   \   00000004   0x.... 0x....      BL       halCommonGetRandom
    195              if (panId != 0xFFFF) {
   \   00000008   0xF64F 0x72FF      MOVW     R2,#+65535
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable24_1
   \   00000010   0x4290             CMP      R0,R2
   \   00000012   0xD003             BEQ.N    ??startPanIdScan_1
    196          //      SCAN_DEBUG_MSG("panIdCandidate: 0x%2X\n", panId);
    197                panIdCandidates[i] = panId;
   \   00000014   0x684A             LDR      R2,[R1, #+4]
   \   00000016   0xF822 0x0014      STRH     R0,[R2, R4, LSL #+1]
    198                i++;
   \   0000001A   0x1C64             ADDS     R4,R4,#+1
    199              }
    200            }
   \                     ??startPanIdScan_1: (+1)
   \   0000001C   0x2C10             CMP      R4,#+16
   \   0000001E   0xDBF1             BLT.N    ??startPanIdScan_0
    201          
    202            formAndJoinScanType = FORM_AND_JOIN_PAN_ID_SCAN;
   \   00000020   0x2003             MOVS     R0,#+3
   \   00000022   0x7008             STRB     R0,[R1, #+0]
    203            startScan(EMBER_ACTIVE_SCAN, BIT32(channelCache), ACTIVE_SCAN_DURATION);
   \   00000024   0x7849             LDRB     R1,[R1, #+1]
   \   00000026   0xE8BD 0x4010      POP      {R4,LR}
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x2203             MOVS     R2,#+3
   \   0000002E   0xFA00 0xF101      LSL      R1,R0,R1
   \   00000032   0x....             B.N      startScan
    204          }
    205          
    206          // Form a network using one of the unused PAN IDs.  If we got unlucky we
    207          // pick some more and try again.
    208          
    209          static void panIdScanComplete(void)
    210          {
    211            int8u i;
    212          
    213            for (i = 0; i < NUM_PAN_ID_CANDIDATES; i++) {
    214              EmberStatus status = EMBER_SUCCESS;
    215              if (panIdCandidates[i] != 0xFFFF) {
    216                emberUnusedPanIdFoundHandler(panIdCandidates[i], channelCache);
    217                emberFormAndJoinCleanup(status);
    218                return;
    219              }
    220            }
    221          
    222            // XXX: Do we care this could keep happening forever?
    223            // In practice there couldn't be as many PAN IDs heard that
    224            // conflict with ALL our randomly selected set of candidate PANs.
    225            // But in theory we could get the same random set of numbers
    226            // (more likely due to a bug) and we could hear the same set of
    227            // PAN IDs that conflict with our random set.
    228          
    229            startPanIdScan();     // Start over with new candidates.
    230          }
    231          
    232          //------------------------------------------------------------------------------
    233          // Finding joinable networks
    234          

   \                                 In section .text, align 2, keep-with-next
    235          EmberStatus emberScanForJoinableNetwork(int32u channelMask, int8u* extendedPanId)
    236          {
   \                     emberScanForJoinableNetwork: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    237            if (! setup(FORM_AND_JOIN_NEXT_NETWORK)) {
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       setup
   \   0000000C   0xB908             CBNZ.N   R0,??emberScanForJoinableNetwork_0
    238              return EMBER_INVALID_CALL;
   \   0000000E   0x2070             MOVS     R0,#+112
   \   00000010   0xBD32             POP      {R1,R4,R5,PC}
    239            }
    240            // Init the channel to 10, gets incremented in call to next joinable network.
    241            channelCache = EMBER_MIN_802_15_4_CHANNEL_NUMBER - 1;
   \                     ??emberScanForJoinableNetwork_0: (+1)
   \   00000012   0x....             LDR.N    R0,??DataTable24_1
   \   00000014   0x210A             MOVS     R1,#+10
   \   00000016   0x7041             STRB     R1,[R0, #+1]
    242            channelMaskCache = channelMask;
   \   00000018   0x6084             STR      R4,[R0, #+8]
    243            if (extendedPanId == NULL
    244                || isArrayZero(extendedPanId, EXTENDED_PAN_ID_SIZE)) {
   \   0000001A   0xB135             CBZ.N    R5,??emberScanForJoinableNetwork_1
   \   0000001C   0x2100             MOVS     R1,#+0
   \                     ??emberScanForJoinableNetwork_2: (+1)
   \   0000001E   0x5D4A             LDRB     R2,[R1, R5]
   \   00000020   0xB942             CBNZ.N   R2,??emberScanForJoinableNetwork_3
   \   00000022   0x1C49             ADDS     R1,R1,#+1
   \   00000024   0xB2C9             UXTB     R1,R1
   \   00000026   0x2908             CMP      R1,#+8
   \   00000028   0xD3F9             BCC.N    ??emberScanForJoinableNetwork_2
    245              ignoreExtendedPanId = TRUE;
   \                     ??emberScanForJoinableNetwork_1: (+1)
   \   0000002A   0x2101             MOVS     R1,#+1
   \   0000002C   0x7081             STRB     R1,[R0, #+2]
    246            } else {
    247              ignoreExtendedPanId = FALSE;
    248              MEMMOVE(extendedPanIdCache, extendedPanId, EXTENDED_PAN_ID_SIZE);
    249            }
    250          
    251            return emberScanForNextJoinableNetwork();
   \                     ??emberScanForJoinableNetwork_4: (+1)
   \   0000002E   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \   00000032   0x....             B.N      emberScanForNextJoinableNetwork
   \                     ??emberScanForJoinableNetwork_3: (+1)
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x7081             STRB     R1,[R0, #+2]
   \   00000038   0x2208             MOVS     R2,#+8
   \   0000003A   0x4629             MOV      R1,R5
   \   0000003C   0x300C             ADDS     R0,R0,#+12
   \   0000003E   0x.... 0x....      BL       halCommonMemMove
   \   00000042   0xE7F4             B.N      ??emberScanForJoinableNetwork_4
    252          }
    253          

   \                                 In section .text, align 2, keep-with-next
    254          EmberStatus emberScanForNextJoinableNetwork(void)
    255          {
   \                     emberScanForNextJoinableNetwork: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    256            if (formAndJoinScanType != FORM_AND_JOIN_NEXT_NETWORK) {
   \   00000002   0x....             LDR.N    R4,??DataTable24_1
   \   00000004   0x7820             LDRB     R0,[R4, #+0]
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xD007             BEQ.N    ??emberScanForNextJoinableNetwork_0
    257              emberScanErrorHandler(EMBER_INVALID_CALL);
   \   0000000A   0x2070             MOVS     R0,#+112
   \   0000000C   0x.... 0x....      BL       emberScanErrorHandler
    258              return EMBER_INVALID_CALL;
   \   00000010   0x2070             MOVS     R0,#+112
   \   00000012   0xBD10             POP      {R4,PC}
    259            }
    260          
    261            // Check for cached networks first.
    262            while (networkCount) {
    263              NetworkInfo *finger = formAndJoinGetNetworkPointer(--networkCount);
    264              if (finger->network.panId != 0xFFFF) {
    265                emberJoinableNetworkFoundHandler(&(finger->network), finger->lqi, finger->rssi);
    266                formAndJoinSetBufferLength(networkCount);
    267                formAndJoinSetCleanupTimeout();
    268                return EMBER_SUCCESS;
    269              }
    270              formAndJoinSetBufferLength(networkCount);
   \                     ??emberScanForNextJoinableNetwork_1: (+1)
   \   00000014   0x78E0             LDRB     R0,[R4, #+3]
   \   00000016   0x.... 0x....      BL       formAndJoinSetBufferLength
   \                     ??emberScanForNextJoinableNetwork_0: (+1)
   \   0000001A   0x78E0             LDRB     R0,[R4, #+3]
   \   0000001C   0xB1A0             CBZ.N    R0,??emberScanForNextJoinableNetwork_2
   \   0000001E   0x1E40             SUBS     R0,R0,#+1
   \   00000020   0x70E0             STRB     R0,[R4, #+3]
   \   00000022   0xB2C0             UXTB     R0,R0
   \   00000024   0x.... 0x....      BL       formAndJoinGetNetworkPointer
   \   00000028   0x8801             LDRH     R1,[R0, #+0]
   \   0000002A   0xF64F 0x72FF      MOVW     R2,#+65535
   \   0000002E   0x4291             CMP      R1,R2
   \   00000030   0xD0F0             BEQ.N    ??emberScanForNextJoinableNetwork_1
   \   00000032   0xF990 0x200F      LDRSB    R2,[R0, #+15]
   \   00000036   0x7B81             LDRB     R1,[R0, #+14]
   \   00000038   0x.... 0x....      BL       emberJoinableNetworkFoundHandler
   \   0000003C   0x78E0             LDRB     R0,[R4, #+3]
   \   0000003E   0x.... 0x....      BL       formAndJoinSetBufferLength
   \   00000042   0x.... 0x....      BL       formAndJoinSetCleanupTimeout
   \   00000046   0xE014             B.N      ??emberScanForNextJoinableNetwork_3
    271            }
    272          
    273            // Find the next channel in the mask and start scanning.
    274            channelCache += 1;
   \                     ??emberScanForNextJoinableNetwork_2: (+1)
   \   00000048   0x7860             LDRB     R0,[R4, #+1]
    275            for (; channelCache <= EMBER_MAX_802_15_4_CHANNEL_NUMBER; channelCache++) {
   \                     ??emberScanForNextJoinableNetwork_4: (+1)
   \   0000004A   0x1C40             ADDS     R0,R0,#+1
   \   0000004C   0x7060             STRB     R0,[R4, #+1]
   \   0000004E   0x7860             LDRB     R0,[R4, #+1]
   \   00000050   0x281B             CMP      R0,#+27
   \   00000052   0xDA0B             BGE.N    ??emberScanForNextJoinableNetwork_5
    276              int32u bitMask = BIT32(channelCache);
   \   00000054   0x2101             MOVS     R1,#+1
    277              if (bitMask & channelMaskCache) {
   \   00000056   0x68A2             LDR      R2,[R4, #+8]
   \   00000058   0x4081             LSLS     R1,R1,R0
   \   0000005A   0x4211             TST      R1,R2
   \   0000005C   0xD0F5             BEQ.N    ??emberScanForNextJoinableNetwork_4
    278                formAndJoinScanType = FORM_AND_JOIN_JOINABLE_SCAN;
   \   0000005E   0x2004             MOVS     R0,#+4
   \   00000060   0x7020             STRB     R0,[R4, #+0]
    279                return startScan(EMBER_ACTIVE_SCAN, bitMask, ACTIVE_SCAN_DURATION);
   \   00000062   0x2203             MOVS     R2,#+3
   \   00000064   0xE8BD 0x4010      POP      {R4,LR}
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0x....             B.N      startScan
    280              }
    281            }
    282          
    283            // Notify the app we're completely out of networks.
    284            emberFormAndJoinCleanup(EMBER_NO_BEACONS);
   \                     ??emberScanForNextJoinableNetwork_5: (+1)
   \   0000006C   0x20AB             MOVS     R0,#+171
   \   0000006E   0x.... 0x....      BL       emberFormAndJoinCleanup
    285            return EMBER_SUCCESS;
   \                     ??emberScanForNextJoinableNetwork_3: (+1)
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0xBD10             POP      {R4,PC}          ;; return
    286          }
    287          
    288          //------------------------------------------------------------------------------
    289          // Callbacks
    290          

   \                                 In section .text, align 2, keep-with-next
    291          void emberAfScanCompleteCallback(int8u channel, EmberStatus status)
   \                     emberAfScanCompleteCallback: (+1)
   \   00000000   0xBF00             Nop      
    292          {
    293            emberFormAndJoinScanCompleteHandler(channel, status);
   \   00000002                      REQUIRE emberFormAndJoinScanCompleteHandler
   \   00000002                      ;; // Fall through to label emberFormAndJoinScanCompleteHandler
    294          }
    295          

   \                                 In section .text, align 2, keep-with-next
    296          boolean emberFormAndJoinScanCompleteHandler(int8u channel, EmberStatus status)
    297          {
   \                     emberFormAndJoinScanCompleteHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x460C             MOV      R4,R1
    298            if (! emberFormAndJoinIsScanning()) {
   \   00000004   0x.... 0x....      BL       emberFormAndJoinIsScanning
   \   00000008   0xB128             CBZ.N    R0,??emberFormAndJoinScanCompleteHandler_0
    299              return FALSE;
    300            }
    301          
    302            if (FORM_AND_JOIN_ENERGY_SCAN != formAndJoinScanType) {
   \   0000000A   0x....             LDR.N    R1,??DataTable24_1
   \   0000000C   0x7808             LDRB     R0,[R1, #+0]
   \   0000000E   0x2802             CMP      R0,#+2
   \   00000010   0xBF18             IT       NE 
    303              // This scan is an Active Scan.
    304              // Active Scans potentially report transmit failures through this callback.
    305              if (EMBER_SUCCESS != status) {
   \   00000012   0x2C00             CMPNE    R4,#+0
   \   00000014   0xD001             BEQ.N    ??emberFormAndJoinScanCompleteHandler_1
    306                // The Active Scan is still in progress.  This callback is informing us
    307                // about a failure to transmit the beacon request on this channel.
    308                // If necessary we could save this failing channel number and start
    309                // another Active Scan on this channel later (after this current scan is
    310                // complete).
    311                return FALSE;
   \                     ??emberFormAndJoinScanCompleteHandler_0: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xBD10             POP      {R4,PC}
    312              }
    313            }
    314          
    315            switch (formAndJoinScanType) {
   \                     ??emberFormAndJoinScanCompleteHandler_1: (+1)
   \   0000001A   0x2802             CMP      R0,#+2
   \   0000001C   0xD006             BEQ.N    ??emberFormAndJoinScanCompleteHandler_2
   \   0000001E   0xD322             BCC.N    ??emberFormAndJoinScanCompleteHandler_3
   \   00000020   0x2804             CMP      R0,#+4
   \   00000022   0xD01C             BEQ.N    ??emberFormAndJoinScanCompleteHandler_4
   \   00000024   0xD305             BCC.N    ??emberFormAndJoinScanCompleteHandler_5
   \   00000026   0x2805             CMP      R0,#+5
   \   00000028   0xD019             BEQ.N    ??emberFormAndJoinScanCompleteHandler_4
   \   0000002A   0xE01C             B.N      ??emberFormAndJoinScanCompleteHandler_3
    316          
    317            case FORM_AND_JOIN_ENERGY_SCAN:    
    318              energyScanComplete();    
   \                     ??emberFormAndJoinScanCompleteHandler_2: (+1)
   \   0000002C   0x.... 0x....      BL       energyScanComplete
    319              break;
   \   00000030   0xE019             B.N      ??emberFormAndJoinScanCompleteHandler_3
    320          
    321            case FORM_AND_JOIN_PAN_ID_SCAN:
    322              panIdScanComplete();
   \                     ??emberFormAndJoinScanCompleteHandler_5: (+1)
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0xF64F 0x73FF      MOVW     R3,#+65535
   \                     ??emberFormAndJoinScanCompleteHandler_6: (+1)
   \   00000038   0x6848             LDR      R0,[R1, #+4]
   \   0000003A   0xF830 0x0012      LDRH     R0,[R0, R2, LSL #+1]
   \   0000003E   0x4298             CMP      R0,R3
   \   00000040   0xD106             BNE.N    ??emberFormAndJoinScanCompleteHandler_7
   \   00000042   0x1C52             ADDS     R2,R2,#+1
   \   00000044   0xB2D2             UXTB     R2,R2
   \   00000046   0x2A10             CMP      R2,#+16
   \   00000048   0xDBF6             BLT.N    ??emberFormAndJoinScanCompleteHandler_6
   \   0000004A   0x.... 0x....      BL       startPanIdScan
   \   0000004E   0xE00A             B.N      ??emberFormAndJoinScanCompleteHandler_3
   \                     ??emberFormAndJoinScanCompleteHandler_7: (+1)
   \   00000050   0x7849             LDRB     R1,[R1, #+1]
   \   00000052   0x.... 0x....      BL       emberUnusedPanIdFoundHandler
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x.... 0x....      BL       emberFormAndJoinCleanup
   \   0000005C   0xE003             B.N      ??emberFormAndJoinScanCompleteHandler_3
    323              break;
    324          
    325            case FORM_AND_JOIN_JOINABLE_SCAN: 
    326              #if defined(XAP2B) || defined(EZSP_HOST) || defined(EMBER_TEST)
    327              if (emberEnableDualChannelScan 
    328                  && (channelCache < 15 || channelCache > 22)
    329                  && networkCount) {
    330                int8u dualChannel = (channelCache + (channelCache < 15 ? 12 : -12));
    331                formAndJoinScanType = FORM_AND_JOIN_DUAL_CHANNEL_SCAN;
    332                startScan(EMBER_ACTIVE_SCAN, BIT32(dualChannel), ACTIVE_SCAN_DURATION);
    333                break;
    334              }
    335              #endif
    336              // If no dual scan, fall through to save a little flash.
    337          
    338            case FORM_AND_JOIN_DUAL_CHANNEL_SCAN:   
    339              formAndJoinScanType = FORM_AND_JOIN_NEXT_NETWORK;
   \                     ??emberFormAndJoinScanCompleteHandler_4: (+1)
   \   0000005E   0x2001             MOVS     R0,#+1
   \   00000060   0x7008             STRB     R0,[R1, #+0]
    340              emberScanForNextJoinableNetwork(); 
   \   00000062   0x.... 0x....      BL       emberScanForNextJoinableNetwork
    341              break;
    342            }
    343            return TRUE;
   \                     ??emberFormAndJoinScanCompleteHandler_3: (+1)
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0xBD10             POP      {R4,PC}          ;; return
    344          }
    345          

   \                                 In section .text, align 2, keep-with-next
    346          void emberAfNetworkFoundCallback(EmberZigbeeNetwork *networkFound,
   \                     emberAfNetworkFoundCallback: (+1)
   \   00000000   0xBF00             Nop      
    347                                           int8u lqi,
    348                                           int8s rssi)
    349          {
    350            emberFormAndJoinNetworkFoundHandler(networkFound, lqi, rssi);
   \   00000002                      REQUIRE emberFormAndJoinNetworkFoundHandler
   \   00000002                      ;; // Fall through to label emberFormAndJoinNetworkFoundHandler
    351          }
    352          
    353          // We are either looking for PAN IDs or for joinable networks.  In the first
    354          // case we just check the found PAN ID against our list of candidates. 
    355          

   \                                 In section .text, align 2, keep-with-next
    356          boolean emberFormAndJoinNetworkFoundHandler(EmberZigbeeNetwork *networkFound,
    357                                                      int8u lqi,
    358                                                      int8s rssi)
    359          {
   \                     emberFormAndJoinNetworkFoundHandler: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0xB088             SUB      SP,SP,#+32
   \   00000008   0x4690             MOV      R8,R2
   \   0000000A   0x460E             MOV      R6,R1
    360            int8u i;
    361            
    362            SCAN_DEBUG_MSG("SCAN: nwk found ch %d, ", networkFound->channel);
   \   0000000C   0x78A2             LDRB     R2,[R4, #+2]
   \   0000000E   0x.... 0x....      ADR.W    R1,`?<Constant "SCAN: nwk found ch %d, ">`
   \   00000012   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_21: (+1)
   \   00000016   0x.... 0x....      BL       ?Subroutine0
    363            SCAN_DEBUG_MSG("panID 0x%2x, xpan: ", networkFound->panId);
   \                     ??CrossCallReturnLabel_12: (+1)
   \   0000001A   0x8822             LDRH     R2,[R4, #+0]
   \   0000001C   0x.... 0x....      ADR.W    R1,`?<Constant "panID 0x%2x, xpan: ">`
   \   00000020   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_20: (+1)
   \   00000024   0x.... 0x....      BL       ?Subroutine0
    364            SCAN_DEBUG_XPAN_PRINT(networkFound->extendedPanId);
   \                     ??CrossCallReturnLabel_11: (+1)
   \   00000028   0x7AE0             LDRB     R0,[R4, #+11]
   \   0000002A   0x.... 0x....      ADR.W    R1,`?<Constant "%x%x%x%x%x%x%x%x">`
   \   0000002E   0x9005             STR      R0,[SP, #+20]
   \   00000030   0x7AA0             LDRB     R0,[R4, #+10]
   \   00000032   0x9004             STR      R0,[SP, #+16]
   \   00000034   0x7A60             LDRB     R0,[R4, #+9]
   \   00000036   0x9003             STR      R0,[SP, #+12]
   \   00000038   0x7A20             LDRB     R0,[R4, #+8]
   \   0000003A   0x9002             STR      R0,[SP, #+8]
   \   0000003C   0x79E0             LDRB     R0,[R4, #+7]
   \   0000003E   0x9001             STR      R0,[SP, #+4]
   \   00000040   0x79A0             LDRB     R0,[R4, #+6]
   \   00000042   0x9000             STR      R0,[SP, #+0]
   \   00000044   0x7963             LDRB     R3,[R4, #+5]
   \   00000046   0x7922             LDRB     R2,[R4, #+4]
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      BL       emberSerialPrintf
   \   0000004E   0x.... 0x....      BL       ?Subroutine0
    365            SCAN_DEBUG_MSG(", lqi %d", lqi);
   \                     ??CrossCallReturnLabel_10: (+1)
   \   00000052   0x4632             MOV      R2,R6
   \   00000054   0x.... 0x....      ADR.W    R1,`?<Constant ", lqi %d">`
   \   00000058   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_19: (+1)
   \   0000005C   0x.... 0x....      BL       ?Subroutine0
    366            SCAN_DEBUG_MSG(", rssi %d", rssi);
   \                     ??CrossCallReturnLabel_9: (+1)
   \   00000060   0x4642             MOV      R2,R8
   \   00000062   0x.... 0x....      ADR.W    R1,`?<Constant ", rssi %d">`
   \   00000066   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_18: (+1)
   \   0000006A   0x.... 0x....      BL       ?Subroutine0
    367            SCAN_DEBUG_MSG(", profile: %d", networkFound->stackProfile);
   \                     ??CrossCallReturnLabel_8: (+1)
   \   0000006E   0x7B22             LDRB     R2,[R4, #+12]
   \   00000070   0x.... 0x....      ADR.W    R1,`?<Constant ", profile: %d">`
   \   00000074   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_17: (+1)
   \   00000078   0x.... 0x....      BL       ?Subroutine0
    368            SCAN_DEBUG_MSG(", pjoin: %d", networkFound->allowingJoin);
   \                     ??CrossCallReturnLabel_7: (+1)
   \   0000007C   0x78E2             LDRB     R2,[R4, #+3]
   \   0000007E   0x.... 0x....      ADR.W    R1,`?<Constant ", pjoin: %d">`
   \   00000082   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_16: (+1)
   \   00000086   0x.... 0x....      BL       ?Subroutine0
    369            
    370            
    371            SCAN_DEBUG("\n");
   \                     ??CrossCallReturnLabel_6: (+1)
   \   0000008A   0x....             ADR.N    R1,??DataTable24  ;; "\n"
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x.... 0x....      BL       emberSerialPrintf
   \   00000092   0x.... 0x....      BL       ?Subroutine0
    372            
    373            switch (formAndJoinScanType) {
   \                     ??CrossCallReturnLabel_5: (+1)
   \   00000096   0x....             LDR.N    R5,??DataTable24_1
   \   00000098   0x7828             LDRB     R0,[R5, #+0]
   \   0000009A   0x2803             CMP      R0,#+3
   \   0000009C   0xD002             BEQ.N    ??emberFormAndJoinNetworkFoundHandler_0
   \   0000009E   0x2804             CMP      R0,#+4
   \   000000A0   0xD00F             BEQ.N    ??emberFormAndJoinNetworkFoundHandler_1
   \   000000A2   0xE04D             B.N      ??CrossCallReturnLabel_4
    374          
    375            case FORM_AND_JOIN_PAN_ID_SCAN:
    376              for (i = 0; i < NUM_PAN_ID_CANDIDATES; i++)
   \                     ??emberFormAndJoinNetworkFoundHandler_0: (+1)
   \   000000A4   0x2000             MOVS     R0,#+0
    377                if (panIdCandidates[i] == networkFound->panId)
   \                     ??emberFormAndJoinNetworkFoundHandler_2: (+1)
   \   000000A6   0x6869             LDR      R1,[R5, #+4]
   \   000000A8   0x8823             LDRH     R3,[R4, #+0]
   \   000000AA   0xF831 0x2010      LDRH     R2,[R1, R0, LSL #+1]
   \   000000AE   0x429A             CMP      R2,R3
   \   000000B0   0xBF04             ITT      EQ 
    378                  panIdCandidates[i] = 0xFFFF;
   \   000000B2   0xF64F 0x72FF      MOVWEQ   R2,#+65535
   \   000000B6   0xF821 0x2010      STRHEQ   R2,[R1, R0, LSL #+1]
   \   000000BA   0x1C40             ADDS     R0,R0,#+1
   \   000000BC   0x2810             CMP      R0,#+16
   \   000000BE   0xDBF2             BLT.N    ??emberFormAndJoinNetworkFoundHandler_2
   \   000000C0   0xE03E             B.N      ??CrossCallReturnLabel_4
    379              break;
    380              
    381            case FORM_AND_JOIN_JOINABLE_SCAN:
    382          
    383              // check for a beacon with permit join on...
    384              if (networkFound->allowingJoin
    385                  // ...the same stack profile as this application...
    386                  && networkFound->stackProfile == formAndJoinStackProfile()
    387                  && (// ...and ignore the Extended PAN ID, or...
    388                      ignoreExtendedPanId
    389                      // ...a matching Extended PAN ID
    390                      || (MEMCOMPARE(extendedPanIdCache,
    391                                     networkFound->extendedPanId,
    392                                     EXTENDED_PAN_ID_SIZE) == 0))) {
   \                     ??emberFormAndJoinNetworkFoundHandler_1: (+1)
   \   000000C2   0x78E0             LDRB     R0,[R4, #+3]
   \   000000C4   0x2800             CMP      R0,#+0
   \   000000C6   0xD034             BEQ.N    ??emberFormAndJoinNetworkFoundHandler_3
   \   000000C8   0x.... 0x....      BL       formAndJoinStackProfile
   \   000000CC   0x7B21             LDRB     R1,[R4, #+12]
   \   000000CE   0x4281             CMP      R1,R0
   \   000000D0   0xD12F             BNE.N    ??emberFormAndJoinNetworkFoundHandler_3
   \   000000D2   0x78A8             LDRB     R0,[R5, #+2]
   \   000000D4   0xB930             CBNZ.N   R0,??emberFormAndJoinNetworkFoundHandler_4
   \   000000D6   0x2208             MOVS     R2,#+8
   \   000000D8   0x1D21             ADDS     R1,R4,#+4
   \   000000DA   0xF105 0x000C      ADD      R0,R5,#+12
   \   000000DE   0x.... 0x....      BL       halCommonMemCompare
   \   000000E2   0xBB30             CBNZ.N   R0,??emberFormAndJoinNetworkFoundHandler_3
    393                saveNetwork(networkFound, lqi, rssi);
   \                     ??emberFormAndJoinNetworkFoundHandler_4: (+1)
   \   000000E4   0x2700             MOVS     R7,#+0
   \   000000E6   0xE009             B.N      ??emberFormAndJoinNetworkFoundHandler_5
   \                     ??emberFormAndJoinNetworkFoundHandler_6: (+1)
   \   000000E8   0x4638             MOV      R0,R7
   \   000000EA   0x.... 0x....      BL       formAndJoinGetNetworkPointer
   \   000000EE   0x2208             MOVS     R2,#+8
   \   000000F0   0x1D21             ADDS     R1,R4,#+4
   \   000000F2   0x1D00             ADDS     R0,R0,#+4
   \   000000F4   0x.... 0x....      BL       halCommonMemCompare
   \   000000F8   0xB1C0             CBZ.N    R0,??emberFormAndJoinNetworkFoundHandler_7
   \   000000FA   0x1C7F             ADDS     R7,R7,#+1
   \                     ??emberFormAndJoinNetworkFoundHandler_5: (+1)
   \   000000FC   0x78E8             LDRB     R0,[R5, #+3]
   \   000000FE   0xB2FF             UXTB     R7,R7
   \   00000100   0x4287             CMP      R7,R0
   \   00000102   0xD3F1             BCC.N    ??emberFormAndJoinNetworkFoundHandler_6
   \   00000104   0x1C40             ADDS     R0,R0,#+1
   \   00000106   0xB2C0             UXTB     R0,R0
   \   00000108   0x.... 0x....      BL       formAndJoinSetBufferLength
   \   0000010C   0xB970             CBNZ.N   R0,??emberFormAndJoinNetworkFoundHandler_7
   \   0000010E   0x78E8             LDRB     R0,[R5, #+3]
   \   00000110   0x.... 0x....      BL       formAndJoinGetNetworkPointer
   \   00000114   0x4607             MOV      R7,R0
   \   00000116   0x78E8             LDRB     R0,[R5, #+3]
   \   00000118   0x1C40             ADDS     R0,R0,#+1
   \   0000011A   0x70E8             STRB     R0,[R5, #+3]
   \   0000011C   0x220E             MOVS     R2,#+14
   \   0000011E   0x4621             MOV      R1,R4
   \   00000120   0x4638             MOV      R0,R7
   \   00000122   0x.... 0x....      BL       halCommonMemMove
   \   00000126   0x73BE             STRB     R6,[R7, #+14]
   \   00000128   0xF887 0x800F      STRB     R8,[R7, #+15]
    394                SCAN_DEBUG(": MATCH\r\n"); 
   \                     ??emberFormAndJoinNetworkFoundHandler_7: (+1)
   \   0000012C   0x.... 0x....      ADR.W    R1,`?<Constant ": MATCH\\r\\n">`
   \   00000130   0xE001             B.N      ??emberFormAndJoinNetworkFoundHandler_8
    395              } else {
    396                SCAN_DEBUG(": NO match\r\n"); 
   \                     ??emberFormAndJoinNetworkFoundHandler_3: (+1)
   \   00000132   0x.... 0x....      ADR.W    R1,`?<Constant ": NO match\\r\\n">`
   \                     ??emberFormAndJoinNetworkFoundHandler_8: (+1)
   \   00000136   0x2001             MOVS     R0,#+1
   \   00000138   0x.... 0x....      BL       emberSerialPrintf
   \   0000013C   0x.... 0x....      BL       ?Subroutine0
    397              }
    398              break;
    399          
    400          #if defined(XAP2B) || defined(EZSP_HOST) || defined(EMBER_TEST)
    401            case FORM_AND_JOIN_DUAL_CHANNEL_SCAN: {
    402              NetworkInfo *finger;
    403              for (i = 0; i < networkCount; i++) {
    404                finger = formAndJoinGetNetworkPointer(i);
    405                if (MEMCOMPARE(finger->network.extendedPanId,
    406                               networkFound->extendedPanId,
    407                               EXTENDED_PAN_ID_SIZE) == 0) {
    408                  if (lqi > finger->lqi) {
    409                    finger->network.panId = 0xFFFF;  // Invalid network;
    410                  }
    411                }
    412              }
    413              break;
    414            }
    415          #endif
    416            }
    417            return emberFormAndJoinIsScanning();
   \                     ??CrossCallReturnLabel_4: (+1)
   \   00000140   0xB008             ADD      SP,SP,#+32
   \   00000142   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000146   0x....             B.N      emberFormAndJoinIsScanning
    418          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberSerialPrintf

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberSerialWaitSend
    419          

   \                                 In section .text, align 2, keep-with-next
    420          void emberAfEnergyScanResultCallback(int8u channel, int8s maxRssiValue)
   \                     emberAfEnergyScanResultCallback: (+1)
   \   00000000   0xBF00             Nop      
    421          {
    422            emberFormAndJoinEnergyScanResultHandler(channel, maxRssiValue);
   \   00000002                      REQUIRE emberFormAndJoinEnergyScanResultHandler
   \   00000002                      ;; // Fall through to label emberFormAndJoinEnergyScanResultHandler
    423          }
    424          
    425          // Just remember the result.
    426          

   \                                 In section .text, align 2, keep-with-next
    427          boolean emberFormAndJoinEnergyScanResultHandler(int8u channel, int8s maxRssiValue)
    428          {
   \                     emberFormAndJoinEnergyScanResultHandler: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
    429            if (emberFormAndJoinIsScanning()) {
   \   00000006   0x.... 0x....      BL       emberFormAndJoinIsScanning
   \   0000000A   0xB198             CBZ.N    R0,??emberFormAndJoinEnergyScanResultHandler_0
    430              
    431              SCAN_DEBUG_MSG("SCAN: found energy 0x%d dBm on ", maxRssiValue);
   \   0000000C   0x462A             MOV      R2,R5
   \   0000000E   0x.... 0x....      ADR.W    R1,`?<Constant "SCAN: found energy 0x...">`
   \   00000012   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_15: (+1)
   \   00000016   0x.... 0x....      BL       ?Subroutine0
    432              SCAN_DEBUG_MSG("channel 0x%x\r\n", channel);
   \                     ??CrossCallReturnLabel_3: (+1)
   \   0000001A   0x4622             MOV      R2,R4
   \   0000001C   0x.... 0x....      ADR.W    R1,`?<Constant "channel 0x%x\\r\\n">`
   \   00000020   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_14: (+1)
   \   00000024   0x.... 0x....      BL       ?Subroutine0
    433              channelEnergies[channel - EMBER_MIN_802_15_4_CHANNEL_NUMBER] = maxRssiValue;
   \                     ??CrossCallReturnLabel_2: (+1)
   \   00000028   0x....             LDR.N    R0,??DataTable24_1
   \   0000002A   0x6840             LDR      R0,[R0, #+4]
   \   0000002C   0x1820             ADDS     R0,R4,R0
   \   0000002E   0xF800 0x5C0B      STRB     R5,[R0, #-11]
    434              
    435              return TRUE;
   \   00000032   0x2001             MOVS     R0,#+1
    436            }
    437            return FALSE;
   \                     ??emberFormAndJoinEnergyScanResultHandler_0: (+1)
   \   00000034   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    438          }
    439          
    440          //------------------------------------------------------------------------------
    441          // Helper functions
    442          
    443          static void saveNetwork(EmberZigbeeNetwork *network, int8u lqi, int8s rssi)
    444          {
    445            int8u i;
    446            NetworkInfo *finger;
    447          
    448            // See if we already have that network.
    449            for (i = 0; i < networkCount; i++) {
    450              finger = formAndJoinGetNetworkPointer(i);
    451              if (MEMCOMPARE(finger->network.extendedPanId,
    452                             network->extendedPanId,
    453                             EXTENDED_PAN_ID_SIZE) == 0) {
    454                return;
    455              }
    456            }
    457          
    458            if (formAndJoinSetBufferLength(networkCount + 1) != EMBER_SUCCESS) {
    459              return;
    460            }
    461            finger = formAndJoinGetNetworkPointer(networkCount);
    462            networkCount += 1;
    463            MEMMOVE(finger, network, sizeof(EmberZigbeeNetwork));
    464            finger->lqi = lqi;
    465            finger->rssi = rssi;
    466          }
    467          

   \                                 In section .text, align 2, keep-with-next
    468          boolean emberFormAndJoinIsScanning(void)
    469          {
    470            return (formAndJoinScanType > FORM_AND_JOIN_NEXT_NETWORK);
   \                     emberFormAndJoinIsScanning: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable24_1
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2802             CMP      R0,#+2
   \   00000006   0xDB01             BLT.N    ??emberFormAndJoinIsScanning_0
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x4770             BX       LR
   \                     ??emberFormAndJoinIsScanning_0: (+1)
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x4770             BX       LR               ;; return
    471          }
    472          

   \                                 In section .text, align 2, keep-with-next
    473          boolean emberFormAndJoinCanContinueJoinableNetworkScan(void)
    474          {
    475            return (formAndJoinScanType == FORM_AND_JOIN_NEXT_NETWORK);
   \                     emberFormAndJoinCanContinueJoinableNetworkScan: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable24_1
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2801             CMP      R0,#+1
   \   00000006   0xBF18             IT       NE 
   \   00000008   0x2000             MOVNE    R0,#+0
   \   0000000A   0x4770             BX       LR               ;; return
    476          }
    477          

   \                                 In section .text, align 2, keep-with-next
    478          static boolean setup(int8u scanType)
    479          {
   \                     setup: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
    480            if (emberFormAndJoinIsScanning()) {
   \   00000004   0x.... 0x....      BL       emberFormAndJoinIsScanning
   \   00000008   0xB118             CBZ.N    R0,??setup_0
    481              emberScanErrorHandler(EMBER_MAC_SCANNING);
   \   0000000A   0x203D             MOVS     R0,#+61
   \   0000000C   0x.... 0x....      BL       emberScanErrorHandler
    482              return FALSE;
   \   00000010   0xE00F             B.N      ??setup_1
    483            }
    484            
    485            // Case 12903: Need to reset the cleanup timeout when initiating a new scan
    486            // since a previous scan process may have concluded before the cleanup event
    487            // timer ran out, and we don't want it triggering in the middle of our new
    488            // scan and cleaning out legitimate data.  
    489            // This is a special cause because emberFormAndJoinCleanup is occurring 
    490            // directly rather than as a result of the cleanup event firing, so the 
    491            // cleanup event timer isn't being deactivated like it would from the event
    492            // handler.  Since our only interface to manipulate the cleanup event 
    493            // timer is to restart it (rather than deactivate it), we do that here.
    494            formAndJoinSetCleanupTimeout();
   \                     ??setup_0: (+1)
   \   00000012   0x.... 0x....      BL       formAndJoinSetCleanupTimeout
    495            emberFormAndJoinCleanup(EMBER_SUCCESS);  // In case we were in NEXT_NETWORK mode.
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      BL       emberFormAndJoinCleanup
    496            networkCount = 0;
   \   0000001C   0x....             LDR.N    R5,??DataTable24_1
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x70E8             STRB     R0,[R5, #+3]
    497            formAndJoinScanType = scanType;
   \   00000022   0x702C             STRB     R4,[R5, #+0]
    498            dataContents = formAndJoinAllocateBuffer();
   \   00000024   0x.... 0x....      BL       formAndJoinAllocateBuffer
   \   00000028   0x6068             STR      R0,[R5, #+4]
    499            if (dataContents == NULL) {
   \   0000002A   0xB920             CBNZ.N   R0,??setup_2
    500              emberFormAndJoinCleanup(EMBER_NO_BUFFERS);
   \   0000002C   0x2018             MOVS     R0,#+24
   \   0000002E   0x.... 0x....      BL       emberFormAndJoinCleanup
    501              return FALSE;
   \                     ??setup_1: (+1)
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0xBD32             POP      {R1,R4,R5,PC}
    502            }
    503            return TRUE;
   \                     ??setup_2: (+1)
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    504          }
    505          

   \                                 In section .text, align 2, keep-with-next
    506          void emberFormAndJoinCleanup(EmberStatus status)
    507          {
   \                     emberFormAndJoinCleanup: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
    508            formAndJoinScanType = FORM_AND_JOIN_NOT_SCANNING;
   \   00000004   0x....             LDR.N    R1,??DataTable24_1
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x7008             STRB     R0,[R1, #+0]
    509            SCAN_DEBUG("formAndJoinReleaseBuffer()\n");
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0x.... 0x....      ADR.W    R1,`?<Constant "formAndJoinReleaseBuf...">`
   \   00000010   0x.... 0x....      BL       emberSerialPrintf
   \   00000014   0x.... 0x....      BL       ?Subroutine0
    510            formAndJoinReleaseBuffer();
   \                     ??CrossCallReturnLabel_1: (+1)
   \   00000018   0x.... 0x....      BL       formAndJoinReleaseBuffer
    511            if (status != EMBER_SUCCESS) {
   \   0000001C   0xB124             CBZ.N    R4,??emberFormAndJoinCleanup_0
    512              emberScanErrorHandler(status);
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0xE8BD 0x4010      POP      {R4,LR}
   \   00000024   0x.... 0x....      B.W      emberScanErrorHandler
    513            }
    514          }
   \                     ??emberFormAndJoinCleanup_0: (+1)
   \   00000028   0xBD10             POP      {R4,PC}          ;; return
    515          

   \                                 In section .text, align 2, keep-with-next
    516          static EmberStatus startScan(EmberNetworkScanType type, int32u mask, int8u duration)
    517          {
   \                     startScan: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    518            EmberStatus status = emberStartScan(type, mask, duration);
   \   00000002   0x.... 0x....      BL       emberStartScan
   \   00000006   0x4604             MOV      R4,R0
    519            SCAN_DEBUG_MSG("SCAN: start scan, status 0x%x\r\n", status);
   \   00000008   0x4622             MOV      R2,R4
   \   0000000A   0x.... 0x....      ADR.W    R1,`?<Constant "SCAN: start scan, sta...">`
   \   0000000E   0x.... 0x....      BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_13: (+1)
   \   00000012   0x.... 0x....      BL       ?Subroutine0
    520            if (status != EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_0: (+1)
   \   00000016   0xB114             CBZ.N    R4,??startScan_0
    521              emberFormAndJoinCleanup(status);
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0x.... 0x....      BL       emberFormAndJoinCleanup
    522            }
    523            return status;
   \                     ??startScan_0: (+1)
   \   0000001E   0x4620             MOV      R0,R4
   \   00000020   0xBD10             POP      {R4,PC}          ;; return
    524          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0x0A 0x00          DC8      "\n",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_1:
   \   00000000   0x........         DC32     formAndJoinScanType

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "SCAN: nwk found ch %d, ">`:
   \   00000000   0x53 0x43          DC8 "SCAN: nwk found ch %d, "
   \              0x41 0x4E    
   \              0x3A 0x20    
   \              0x6E 0x77    
   \              0x6B 0x20    
   \              0x66 0x6F    
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x63 0x68    
   \              0x20 0x25    
   \              0x64 0x2C    
   \              0x20 0x00    

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "\\n">`:
   \   00000000   0x0A 0x00          DC8 "\012"

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "panID 0x%2x, xpan: ">`:
   \   00000000   0x70 0x61          DC8 "panID 0x%2x, xpan: "
   \              0x6E 0x49    
   \              0x44 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x2C    
   \              0x20 0x78    
   \              0x70 0x61    
   \              0x6E 0x3A    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%x%x%x%x%x%x%x%x">`:
   \   00000000   0x25 0x78          DC8 "%x%x%x%x%x%x%x%x"
   \              0x25 0x78    
   \              0x25 0x78    
   \              0x25 0x78    
   \              0x25 0x78    
   \              0x25 0x78    
   \              0x25 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ", lqi %d">`:
   \   00000000   0x2C 0x20          DC8 ", lqi %d"
   \              0x6C 0x71    
   \              0x69 0x20    
   \              0x25 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ", rssi %d">`:
   \   00000000   0x2C 0x20          DC8 ", rssi %d"
   \              0x72 0x73    
   \              0x73 0x69    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ", profile: %d">`:
   \   00000000   0x2C 0x20          DC8 ", profile: %d"
   \              0x70 0x72    
   \              0x6F 0x66    
   \              0x69 0x6C    
   \              0x65 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ", pjoin: %d">`:
   \   00000000   0x2C 0x20          DC8 ", pjoin: %d"
   \              0x70 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ": MATCH\\r\\n">`:
   \   00000000   0x3A 0x20          DC8 ": MATCH\015\012"
   \              0x4D 0x41    
   \              0x54 0x43    
   \              0x48 0x0D    
   \              0x0A 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ": NO match\\r\\n">`:
   \   00000000   0x3A 0x20          DC8 ": NO match\015\012"
   \              0x4E 0x4F    
   \              0x20 0x6D    
   \              0x61 0x74    
   \              0x63 0x68    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "SCAN: found energy 0x...">`:
   \   00000000   0x53 0x43          DC8 "SCAN: found energy 0x%d dBm on "
   \              0x41 0x4E    
   \              0x3A 0x20    
   \              0x66 0x6F    
   \              0x75 0x6E    
   \              0x64 0x20    
   \              0x65 0x6E    
   \              0x65 0x72    
   \              0x67 0x79    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x64 0x20    
   \              0x64 0x42    
   \              0x6D 0x20    
   \              0x6F 0x6E    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "channel 0x%x\\r\\n">`:
   \   00000000   0x63 0x68          DC8 "channel 0x%x\015\012"
   \              0x61 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x0D 0x0A    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "formAndJoinReleaseBuf...">`:
   \   00000000   0x66 0x6F          DC8 "formAndJoinReleaseBuffer()\012"
   \              0x72 0x6D    
   \              0x41 0x6E    
   \              0x64 0x4A    
   \              0x6F 0x69    
   \              0x6E 0x52    
   \              0x65 0x6C    
   \              0x65 0x61    
   \              0x73 0x65    
   \              0x42 0x75    
   \              0x66 0x66    
   \              0x65 0x72    
   \              0x28 0x29    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "SCAN: start scan, sta...">`:
   \   00000000   0x53 0x43          DC8 "SCAN: start scan, status 0x%x\015\012"
   \              0x41 0x4E    
   \              0x3A 0x20    
   \              0x73 0x74    
   \              0x61 0x72    
   \              0x74 0x20    
   \              0x73 0x63    
   \              0x61 0x6E    
   \              0x2C 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x0D    
   \              0x0A 0x00    
    525          
    526          boolean isArrayZero(int8u* array, int8u size)
    527          {
    528            int8u i;
    529            for (i=0; i<size; i++) {
    530              if (array[i] != 0) {
    531                return FALSE;
    532              }
    533            }
    534            return TRUE;
    535          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   emberAfEnergyScanResultCallback
         0   -> emberFormAndJoinEnergyScanResultHandler
       0   emberAfNetworkFoundCallback
         0   -> emberFormAndJoinNetworkFoundHandler
       0   emberAfScanCompleteCallback
         0   -> emberFormAndJoinScanCompleteHandler
       0   emberFormAndJoinCanContinueJoinableNetworkScan
       8   emberFormAndJoinCleanup
         0   -> emberScanErrorHandler
         8   -> emberSerialPrintf
         8   -> emberSerialWaitSend
         8   -> formAndJoinReleaseBuffer
      16   emberFormAndJoinEnergyScanResultHandler
        16   -> emberFormAndJoinIsScanning
        16   -> emberSerialPrintf
        16   -> emberSerialWaitSend
       0   emberFormAndJoinIsScanning
      56   emberFormAndJoinNetworkFoundHandler
         0   -> emberFormAndJoinIsScanning
        56   -> emberSerialPrintf
        56   -> emberSerialWaitSend
        56   -> formAndJoinGetNetworkPointer
        56   -> formAndJoinSetBufferLength
        56   -> formAndJoinStackProfile
        56   -> halCommonMemCompare
        56   -> halCommonMemMove
       8   emberFormAndJoinScanCompleteHandler
         8   -> emberFormAndJoinCleanup
         8   -> emberFormAndJoinIsScanning
         8   -> emberScanForNextJoinableNetwork
         8   -> emberUnusedPanIdFoundHandler
         8   -> energyScanComplete
         8   -> startPanIdScan
      16   emberScanForJoinableNetwork
         0   -> emberScanForNextJoinableNetwork
        16   -> halCommonMemMove
        16   -> setup
       8   emberScanForNextJoinableNetwork
         8   -> emberFormAndJoinCleanup
         8   -> emberJoinableNetworkFoundHandler
         8   -> emberScanErrorHandler
         8   -> formAndJoinGetNetworkPointer
         8   -> formAndJoinSetBufferLength
         8   -> formAndJoinSetCleanupTimeout
         0   -> startScan
      16   emberScanForUnusedPanId
        16   -> halCommonMemSet
        16   -> setup
        16   -> startScan
      16   energyScanComplete
         0   -> emberFormAndJoinCleanup
        16   -> halCommonGetRandom
         0   -> startPanIdScan
      16   setup
        16   -> emberFormAndJoinCleanup
        16   -> emberFormAndJoinIsScanning
        16   -> emberScanErrorHandler
        16   -> formAndJoinAllocateBuffer
        16   -> formAndJoinSetCleanupTimeout
       8   startPanIdScan
         8   -> halCommonGetRandom
         0   -> startScan
       8   startScan
         8   -> emberFormAndJoinCleanup
         8   -> emberSerialPrintf
         8   -> emberSerialWaitSend
         8   -> emberStartScan


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "%x%x%x%x%x%x%x%x">
      12  ?<Constant ", lqi %d">
      12  ?<Constant ", pjoin: %d">
      16  ?<Constant ", profile: %d">
      12  ?<Constant ", rssi %d">
      12  ?<Constant ": MATCH\r\n">
      16  ?<Constant ": NO match\r\n">
      32  ?<Constant "SCAN: found energy 0x...">
      24  ?<Constant "SCAN: nwk found ch %d, ">
      32  ?<Constant "SCAN: start scan, sta...">
       2  ?<Constant "\n">
      16  ?<Constant "channel 0x%x\r\n">
      28  ?<Constant "formAndJoinReleaseBuf...">
      20  ?<Constant "panID 0x%2x, xpan: ">
       4  ??DataTable24
       4  ??DataTable24_1
       6  ?Subroutine0
       6  ?Subroutine1
       2  emberAfEnergyScanResultCallback
       2  emberAfNetworkFoundCallback
       2  emberAfScanCompleteCallback
       1  emberEnableDualChannelScan
      12  emberFormAndJoinCanContinueJoinableNetworkScan
      42  emberFormAndJoinCleanup
      54  emberFormAndJoinEnergyScanResultHandler
      16  emberFormAndJoinIsScanning
     328  emberFormAndJoinNetworkFoundHandler
     106  emberFormAndJoinScanCompleteHandler
      68  emberScanForJoinableNetwork
     118  emberScanForNextJoinableNetwork
      46  emberScanForUnusedPanId
     116  energyScanComplete
      20  formAndJoinScanType
          channelCache
          ignoreExtendedPanId
          networkCount
          dataContents
          channelMaskCache
          extendedPanIdCache
      58  setup
      52  startPanIdScan
      34  startScan

 
    20 bytes in section .bss
     1 byte  in section .data
     2 bytes in section .rodata
 1 328 bytes in section .text
 
 1 328 bytes of CODE  memory
     2 bytes of CONST memory
    21 bytes of DATA  memory

Errors: none
Warnings: none
