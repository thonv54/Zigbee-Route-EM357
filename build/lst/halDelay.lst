###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        09/Sep/2015  17:12:36
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\halDelay.c
#    Command line =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\halDelay.c -D
#        NULL_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D
#        PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/ZigbeeRoute/ZigbeeRoute_endpoint_config.h\""
#        -D "BOARD_HEADER=\"app\builder\ZigbeeRoute\ZigbeeRoute_board.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute_tokens.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "ZA_GENERATED_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute.h\"" -D
#        "__SOURCEFILE__=\"halDelay.c\"" -lC
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\lst\
#        --diag_suppress Pa050 -o
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\obj\ --debug
#        --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\framework\include\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\util\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\stack\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\lst\halDelay.lst
#    Object file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\obj\halDelay.o
#
###############################################################################

E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\halDelay.c
      1          
      2          //-----------------------------Khai bao thu vien---------------------//
      3          
      4          
      5          #include "app/framework/include/af.h"
      6          #include "halDelay.h"
      7          
      8          //-----------------------------Khai bao bien-------------------------//
      9          
     10          
     11          
     12          

   \                                 In section .text, align 2, keep-with-next
     13          int16u CommonGetDurationTime(int16u CommonBeforeTimer){
   \                     CommonGetDurationTime: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x4604             MOV      R4,R0
     14          	int16u DurationTime;
     15          	int16u CurrentTime;
     16          	CurrentTime = (int16u)halCommonGetInt32uMillisecondTick();
   \   00000004   0x.... 0x....      BL       halCommonGetInt32uMillisecondTick
   \   00000008   0xB280             UXTH     R0,R0
     17          
     18          	if( CurrentTime >= CommonBeforeTimer){
   \   0000000A   0x42A0             CMP      R0,R4
   \   0000000C   0xBFAF             ITEEE    GE 
     19          		DurationTime = CurrentTime - CommonBeforeTimer;
   \   0000000E   0x1B00             SUBGE    R0,R0,R4
     20          	}
     21          	else{
     22          		DurationTime = 0xFFFF - CommonBeforeTimer + CurrentTime;
   \   00000010   0xF64F 0x71FF      MOVWLT   R1,#+65535
   \   00000014   0x1B09             SUBLT    R1,R1,R4
   \   00000016   0x1840             ADDLT    R0,R0,R1
     23          	}
     24          	return DurationTime;
   \   00000018   0xB280             UXTH     R0,R0
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
     25          }
     26          

   \                                 In section .text, align 2, keep-with-next
     27          void __delay_ms(int32u n){
   \                     __delay_ms: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
     28          	int32u StartDelayTimer;
     29          	StartDelayTimer = halCommonGetInt32uMillisecondTick();
   \   00000004   0x.... 0x....      BL       halCommonGetInt32uMillisecondTick
   \   00000008   0x4605             MOV      R5,R0
   \   0000000A   0xE001             B.N      ??__delay_ms_0
     30          	while(CommonGetDurationTime(StartDelayTimer) < n){
     31          		halResetWatchdog();
   \                     ??__delay_ms_1: (+1)
   \   0000000C   0x.... 0x....      BL       halInternalResetWatchDog
     32          	}
   \                     ??__delay_ms_0: (+1)
   \   00000010   0xB2A8             UXTH     R0,R5
   \   00000012   0x.... 0x....      BL       CommonGetDurationTime
   \   00000016   0x42A0             CMP      R0,R4
   \   00000018   0xD3F8             BCC.N    ??__delay_ms_1
     33          }
   \   0000001A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     34          
     35          
     36          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CommonGetDurationTime
         8   -> halCommonGetInt32uMillisecondTick
      16   __delay_ms
        16   -> CommonGetDurationTime
        16   -> halCommonGetInt32uMillisecondTick
        16   -> halInternalResetWatchDog


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      28  CommonGetDurationTime
      28  __delay_ms

 
 56 bytes in section .text
 
 56 bytes of CODE memory

Errors: none
Warnings: none
