###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        09/Sep/2015  17:13:30
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\util\zigbee-framework\zigbee-device-common.c
#    Command line =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\util\zigbee-framework\zigbee-device-common.c
#        -D NULL_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D
#        PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/ZigbeeRoute/ZigbeeRoute_endpoint_config.h\""
#        -D "BOARD_HEADER=\"app\builder\ZigbeeRoute\ZigbeeRoute_board.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute_tokens.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "ZA_GENERATED_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute.h\"" -D
#        "__SOURCEFILE__=\"zigbee-device-common.c\"" -lC
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\lst\
#        --diag_suppress Pa050 -o
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\obj\ --debug
#        --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\util\zigbee-framework\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\framework\include\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\util\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\stack\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\lst\zigbee-device-common.lst
#    Object file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\obj\zigbee-device-common.o
#
###############################################################################

E:\Zigbee\EmberZNet5.6.0-GA\app\util\zigbee-framework\zigbee-device-common.c
      1          // File: zigbee-device-common.c
      2          //
      3          // Description: ZigBee Device Object (ZDO) functions available on all platforms.
      4          //
      5          //
      6          // Copyright 2007 by Ember Corporation.  All rights reserved.               *80*
      7          
      8          #include PLATFORM_HEADER
      9          #include "stack/include/ember-types.h"
     10          #include "stack/include/error.h"
     11          #include "hal/hal.h"
     12          #include "zigbee-device-common.h"
     13          

   \                                 In section .bss, align 1
     14          static int8u zigDevRequestSequence = 0;
   \                     zigDevRequestSequence:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
     15          int8u zigDevRequestRadius = 255;
   \                     zigDevRequestRadius:
   \   00000000   0xFF               DC8 255
     16          
     17          // Application generated ZDO messages use sequence numbers 0-127, and the stack
     18          // uses sequence numbers 128-255.  This simplifies life by eliminating the need
     19          // for coordination between the two entities, and allows both to send ZDO
     20          // messages with non-conflicting sequence numbers.
     21          #define APPLICATION_ZDO_SEQUENCE_MASK (0x7F)
     22          

   \                                 In section .text, align 2, keep-with-next
     23          int8u emberGetLastAppZigDevRequestSequence(void)
     24          {
     25            return (zigDevRequestSequence & APPLICATION_ZDO_SEQUENCE_MASK);
   \                     emberGetLastAppZigDevRequestSequence: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0xF000 0x007F      AND      R0,R0,#0x7F
   \   00000008   0x4770             BX       LR               ;; return
     26          }
     27          

   \                                 In section .text, align 2, keep-with-next
     28          int8u emberNextZigDevRequestSequence(void)
     29          {
     30            return ((++zigDevRequestSequence) & APPLICATION_ZDO_SEQUENCE_MASK);
   \                     emberNextZigDevRequestSequence: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable1
   \   00000002   0x7801             LDRB     R1,[R0, #+0]
   \   00000004   0x1C49             ADDS     R1,R1,#+1
   \   00000006   0x7001             STRB     R1,[R0, #+0]
   \   00000008   0xF001 0x007F      AND      R0,R1,#0x7F
   \   0000000C   0x4770             BX       LR               ;; return
     31          }
     32          

   \                                 In section .text, align 2, keep-with-next
     33          EmberStatus emberSendZigDevRequestTarget(EmberNodeId target,
     34                                                   int16u clusterId,
     35                                                   EmberApsOption options)
     36          {
   \                     emberSendZigDevRequestTarget: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     37            int8u contents[ZDO_MESSAGE_OVERHEAD + 2];
     38            int8u *payload = contents + ZDO_MESSAGE_OVERHEAD;
     39            payload[0] = LOW_BYTE(target);
     40            payload[1] = HIGH_BYTE(target);
   \   00000004   0x0A03             LSRS     R3,R0,#+8
   \   00000006   0xF88D 0x3006      STRB     R3,[SP, #+6]
   \   0000000A   0xF88D 0x0005      STRB     R0,[SP, #+5]
     41            return emberSendZigDevRequest(target,
     42                                          clusterId,
     43                                          options,
     44                                          contents,
     45                                          sizeof(contents));
   \   0000000E   0x2303             MOVS     R3,#+3
   \   00000010   0x9300             STR      R3,[SP, #+0]
   \   00000012   0x....             B.N      ?Subroutine0
     46          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xAB01             ADD      R3,SP,#+4
   \   00000002   0x.... 0x....      BL       emberSendZigDevRequest
   \   00000006   0xBD0E             POP      {R1-R3,PC}       ;; return
     47          

   \                                 In section .text, align 2, keep-with-next
     48          EmberStatus emberSimpleDescriptorRequest(EmberNodeId target,
     49                                                   int8u targetEndpoint,
     50                                                   EmberApsOption options)
     51          {
   \                     emberSimpleDescriptorRequest: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
     52            int8u contents[ZDO_MESSAGE_OVERHEAD + 3];
     53            int8u *payload = contents + ZDO_MESSAGE_OVERHEAD;
     54            payload[0] = LOW_BYTE(target);
     55            payload[1] = HIGH_BYTE(target);
   \   00000004   0x0A03             LSRS     R3,R0,#+8
     56            payload[2] = targetEndpoint;
   \   00000006   0xF88D 0x1007      STRB     R1,[SP, #+7]
   \   0000000A   0xF88D 0x3006      STRB     R3,[SP, #+6]
     57            return emberSendZigDevRequest(target,
     58                                          SIMPLE_DESCRIPTOR_REQUEST,
     59                                          options,
     60                                          contents,
     61                                          sizeof(contents));
   \   0000000E   0x2104             MOVS     R1,#+4
   \   00000010   0xF88D 0x0005      STRB     R0,[SP, #+5]
   \   00000014   0x9100             STR      R1,[SP, #+0]
   \   00000016                      REQUIRE ?Subroutine0
   \   00000016                      ;; // Fall through to label ?Subroutine0
     62          }
     63          

   \                                 In section .text, align 2, keep-with-next
     64          EmberStatus emberSendZigDevBindRequest(EmberNodeId target,
     65                                                 int16u bindClusterId,
     66                                                 EmberEUI64 source,
     67                                                 int8u sourceEndpoint,
     68                                                 int16u clusterId,
     69                                                 int8u type,
     70                                                 EmberEUI64 destination,
     71                                                 EmberMulticastId groupAddress,
     72                                                 int8u destinationEndpoint,
     73                                                 EmberApsOption options)
     74          {
   \                     emberSendZigDevBindRequest: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x460D             MOV      R5,R1
   \   00000004   0xB088             SUB      SP,SP,#+32
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x4611             MOV      R1,R2
   \   0000000A   0x.... 0x....      BL       ?Subroutine2
     75            int8u contents[ZDO_MESSAGE_OVERHEAD + 21];
     76            int8u *payload = contents + ZDO_MESSAGE_OVERHEAD;
     77            int8u length;
     78            MEMMOVE(payload, source, 8);
     79            payload[8] = sourceEndpoint;
   \                     ??CrossCallReturnLabel_1: (+1)
   \   0000000E   0x980C             LDR      R0,[SP, #+48]
     80            payload[9] = LOW_BYTE(clusterId);
   \   00000010   0xF88D 0x000E      STRB     R0,[SP, #+14]
   \   00000014   0xF88D 0x600D      STRB     R6,[SP, #+13]
     81            payload[10] = HIGH_BYTE(clusterId);
   \   00000018   0x0A00             LSRS     R0,R0,#+8
   \   0000001A   0xF88D 0x000F      STRB     R0,[SP, #+15]
   \   0000001E   0x980D             LDR      R0,[SP, #+52]
     82            payload[11] = type;
   \   00000020   0xF88D 0x0010      STRB     R0,[SP, #+16]
     83            switch (type) {
   \   00000024   0x2801             CMP      R0,#+1
   \   00000026   0xD014             BEQ.N    ??emberSendZigDevBindRequest_0
   \   00000028   0x2803             CMP      R0,#+3
   \   0000002A   0xD11A             BNE.N    ??emberSendZigDevBindRequest_1
     84            case UNICAST_BINDING:
     85              MEMMOVE(payload + 12, destination, 8);
   \   0000002C   0x990E             LDR      R1,[SP, #+56]
   \   0000002E   0x2208             MOVS     R2,#+8
   \   00000030   0xF10D 0x0011      ADD      R0,SP,#+17
   \   00000034   0x.... 0x....      BL       halCommonMemMove
     86              payload[20] = destinationEndpoint;
   \   00000038   0x9810             LDR      R0,[SP, #+64]
   \   0000003A   0xF88D 0x0019      STRB     R0,[SP, #+25]
     87              length = ZDO_MESSAGE_OVERHEAD + 21;
   \   0000003E   0x2016             MOVS     R0,#+22
     88              break;
     89            case MULTICAST_BINDING:
     90              payload[12] = LOW_BYTE(groupAddress);
     91              payload[13] = HIGH_BYTE(groupAddress);
     92              length = ZDO_MESSAGE_OVERHEAD + 14;
     93              break;
     94            default:
     95              return EMBER_ERR_FATAL;
     96            }
     97            return emberSendZigDevRequest(target,
     98                                          bindClusterId,
     99                                          options,
    100                                          contents,
    101                                          length);
   \                     ??emberSendZigDevBindRequest_2: (+1)
   \   00000040   0x9000             STR      R0,[SP, #+0]
   \   00000042   0xAB01             ADD      R3,SP,#+4
   \   00000044   0x9A11             LDR      R2,[SP, #+68]
   \   00000046   0x4629             MOV      R1,R5
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0x.... 0x....      BL       emberSendZigDevRequest
   \                     ??emberSendZigDevBindRequest_3: (+1)
   \   0000004E   0xB008             ADD      SP,SP,#+32
   \   00000050   0xBD70             POP      {R4-R6,PC}       ;; return
   \                     ??emberSendZigDevBindRequest_0: (+1)
   \   00000052   0x980F             LDR      R0,[SP, #+60]
   \   00000054   0xF88D 0x0011      STRB     R0,[SP, #+17]
   \   00000058   0x0A00             LSRS     R0,R0,#+8
   \   0000005A   0xF88D 0x0012      STRB     R0,[SP, #+18]
   \   0000005E   0x200F             MOVS     R0,#+15
   \   00000060   0xE7EE             B.N      ??emberSendZigDevBindRequest_2
   \                     ??emberSendZigDevBindRequest_1: (+1)
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xE7F3             B.N      ??emberSendZigDevBindRequest_3
    102          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x461E             MOV      R6,R3
   \   00000002   0x2208             MOVS     R2,#+8
   \   00000004   0xF10D 0x0005      ADD      R0,SP,#+5
   \   00000008   0x.... 0x....      B.W      halCommonMemMove
    103          
    104          #define emberLqiTableRequest(target, startIndex, options) \
    105            (emberTableRequest(LQI_TABLE_REQUEST, (target), (startIndex), (options)))
    106          #define emberRoutingTableRequest(target, startIndex, options) \
    107            (emberTableRequest(ROUTING_TABLE_REQUEST, (target), (startIndex), (options)))
    108          #define emberBindingTableRequest(target, startIndex, options) \
    109            (emberTableRequest(BINDING_TABLE_REQUEST, (target), (startIndex), (options)))
    110          

   \                                 In section .text, align 2, keep-with-next
    111          EmberStatus emberTableRequest(int16u clusterId,
    112                                        EmberNodeId target,
    113                                        int8u startIndex,
    114                                        EmberApsOption options)
    115          {
   \                     emberTableRequest: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
    116            int8u contents[ZDO_MESSAGE_OVERHEAD + 1];
    117            contents[ZDO_MESSAGE_OVERHEAD] = startIndex;
   \   00000002   0xF88D 0x2005      STRB     R2,[SP, #+5]
   \   00000006   0x4604             MOV      R4,R0
    118            return emberSendZigDevRequest(target,
    119                                          clusterId,
    120                                          options,
    121                                          contents,
    122                                          sizeof(contents));
   \   00000008   0x2202             MOVS     R2,#+2
   \   0000000A   0x4608             MOV      R0,R1
   \   0000000C   0x9200             STR      R2,[SP, #+0]
   \   0000000E   0x4619             MOV      R1,R3
   \   00000010   0x460A             MOV      R2,R1
   \   00000012   0xAB01             ADD      R3,SP,#+4
   \   00000014   0x4621             MOV      R1,R4
   \   00000016   0x....             B.N      ?Subroutine1
    123          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x.... 0x....      BL       emberSendZigDevRequest
   \   00000004   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    124          

   \                                 In section .text, align 2, keep-with-next
    125          EmberStatus emberLeaveRequest(EmberNodeId target,
    126                                        EmberEUI64 deviceAddress,
    127                                        int8u leaveRequestFlags,
    128                                        EmberApsOption options)
    129          {
   \                     emberLeaveRequest: (+1)
   \   00000000   0xB57F             PUSH     {R0-R6,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x4615             MOV      R5,R2
   \   00000006   0x.... 0x....      BL       ?Subroutine2
    130            int8u contents[ZDO_MESSAGE_OVERHEAD + 9];
    131            MEMMOVE(contents + ZDO_MESSAGE_OVERHEAD, deviceAddress, 8);
    132            contents[ZDO_MESSAGE_OVERHEAD + 8] = leaveRequestFlags;
    133            return emberSendZigDevRequest(target,
    134                                          LEAVE_REQUEST,
    135                                          options,
    136                                          contents,
    137                                          sizeof(contents));
   \                     ??CrossCallReturnLabel_0: (+1)
   \   0000000A   0x200A             MOVS     R0,#+10
   \   0000000C   0x9000             STR      R0,[SP, #+0]
   \   0000000E   0xF88D 0x500D      STRB     R5,[SP, #+13]
   \   00000012   0xAB01             ADD      R3,SP,#+4
   \   00000014   0x4632             MOV      R2,R6
   \   00000016   0x2134             MOVS     R1,#+52
   \   00000018   0x4620             MOV      R0,R4
   \   0000001A   0x.... 0x....      BL       emberSendZigDevRequest
   \   0000001E   0xB004             ADD      SP,SP,#+16
   \   00000020   0xBD70             POP      {R4-R6,PC}       ;; return
    138          }
    139          

   \                                 In section .text, align 2, keep-with-next
    140          EmberStatus emberPermitJoiningRequest(EmberNodeId target,
    141                                                int8u duration,
    142                                                int8u authentication,
    143                                                EmberApsOption options)
    144          {
   \                     emberPermitJoiningRequest: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
    145            int8u contents[ZDO_MESSAGE_OVERHEAD + 2];
    146            contents[ZDO_MESSAGE_OVERHEAD] = duration;
   \   00000002   0xF88D 0x1005      STRB     R1,[SP, #+5]
    147            contents[ZDO_MESSAGE_OVERHEAD + 1] = authentication;
   \   00000006   0xF88D 0x2006      STRB     R2,[SP, #+6]
    148            return emberSendZigDevRequest(target,
    149                                          PERMIT_JOINING_REQUEST,
    150                                          options,
    151                                          contents,
    152                                          sizeof(contents));
   \   0000000A   0x2103             MOVS     R1,#+3
   \   0000000C   0x9100             STR      R1,[SP, #+0]
   \   0000000E   0x461C             MOV      R4,R3
   \   00000010   0xAB01             ADD      R3,SP,#+4
   \   00000012   0x4622             MOV      R2,R4
   \   00000014   0x2136             MOVS     R1,#+54
   \   00000016                      REQUIRE ?Subroutine1
   \   00000016                      ;; // Fall through to label ?Subroutine1
    153          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     zigDevRequestSequence

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   emberGetLastAppZigDevRequestSequence
      32   emberLeaveRequest
        32   -> emberSendZigDevRequest
        32   -> halCommonMemMove
       0   emberNextZigDevRequestSequence
      16   emberPermitJoiningRequest
        16   -> emberSendZigDevRequest
      48   emberSendZigDevBindRequest
        48   -> emberSendZigDevRequest
        48   -> halCommonMemMove
      16   emberSendZigDevRequestTarget
        16   -> emberSendZigDevRequest
      16   emberSimpleDescriptorRequest
        16   -> emberSendZigDevRequest
      16   emberTableRequest
        16   -> emberSendZigDevRequest


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       8  ?Subroutine0
       6  ?Subroutine1
      12  ?Subroutine2
      10  emberGetLastAppZigDevRequestSequence
      34  emberLeaveRequest
      14  emberNextZigDevRequestSequence
      22  emberPermitJoiningRequest
     102  emberSendZigDevBindRequest
      20  emberSendZigDevRequestTarget
      22  emberSimpleDescriptorRequest
      24  emberTableRequest
       1  zigDevRequestRadius
       1  zigDevRequestSequence

 
   1 byte  in section .bss
   1 byte  in section .data
 278 bytes in section .text
 
 278 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: none
