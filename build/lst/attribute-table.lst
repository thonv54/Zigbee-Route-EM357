###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        10/Sep/2015  09:00:09
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\framework\util\attribute-table.c
#    Command line =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\framework\util\attribute-table.c -D
#        NULL_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D
#        PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/ZigbeeRoute/ZigbeeRoute_endpoint_config.h\""
#        -D "BOARD_HEADER=\"app\builder\ZigbeeRoute\ZigbeeRoute_board.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute_tokens.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "ZA_GENERATED_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute.h\"" -D
#        "__SOURCEFILE__=\"attribute-table.c\"" -lC
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\lst\
#        --diag_suppress Pa050 -o
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\obj\ --debug
#        --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\framework\util\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\framework\include\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\util\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\stack\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\lst\attribute-table.lst
#    Object file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\obj\attribute-table.o
#
###############################################################################

E:\Zigbee\EmberZNet5.6.0-GA\app\framework\util\attribute-table.c
      1          // *******************************************************************
      2          // * attribute-table.c
      3          // *
      4          // * This file contains the code to manipulate the Smart Energy attribute
      5          // * table.  This handles external calls to read/write the table, as
      6          // * well as internal ones.
      7          // *
      8          // * Copyright 2008 by Ember Corporation. All rights reserved.              *80*
      9          // *******************************************************************
     10          
     11          // this file contains all the common includes for clusters in the zcl-util
     12          #include "common.h"
     13          
     14          #include "attribute-storage.h"
     15          
     16          // for pulling in defines dealing with EITHER server or client
     17          #include "af-main.h"
     18          
     19          #include "enums.h"
     20          
     21          //------------------------------------------------------------------------------
     22          
     23          
     24          //------------------------------------------------------------------------------
     25          // External Declarations
     26          
     27          //------------------------------------------------------------------------------
     28          // Forward Declarations
     29          
     30          //------------------------------------------------------------------------------
     31          // Globals
     32          
     33          

   \                                 In section .text, align 2, keep-with-next
     34          EmberAfStatus emberAfWriteAttributeExternal(int8u endpoint,
     35                                                      EmberAfClusterId cluster,
     36                                                      EmberAfAttributeId attributeID,
     37                                                      int8u mask,
     38                                                      int16u manufacturerCode,
     39                                                      int8u* dataPtr,
     40                                                      EmberAfAttributeType dataType)
     41          {
   \                     emberAfWriteAttributeExternal: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
   \   00000006   0x9F0F             LDR      R7,[SP, #+60]
   \   00000008   0x9D10             LDR      R5,[SP, #+64]
   \   0000000A   0x9C0E             LDR      R4,[SP, #+56]
     42            EmberAfAttributeWritePermission extWritePermission
     43              = emberAfAllowNetworkWriteAttributeCallback(endpoint, 
     44                                                          cluster,
     45                                                          attributeID,
     46                                                          mask,
     47                                                          manufacturerCode,
     48                                                          dataPtr,
     49                                                          dataType);
   \   0000000C   0x9502             STR      R5,[SP, #+8]
   \   0000000E   0x9701             STR      R7,[SP, #+4]
   \   00000010   0x4606             MOV      R6,R0
   \   00000012   0x468A             MOV      R10,R1
   \   00000014   0x4690             MOV      R8,R2
   \   00000016   0x4699             MOV      R9,R3
   \   00000018   0x9400             STR      R4,[SP, #+0]
   \   0000001A   0x.... 0x....      BL       emberAfAllowNetworkWriteAttributeCallback
     50            switch (extWritePermission){
   \   0000001E   0xB118             CBZ.N    R0,??emberAfWriteAttributeExternal_0
   \   00000020   0x2802             CMP      R0,#+2
   \   00000022   0xD003             BEQ.N    ??emberAfWriteAttributeExternal_1
   \   00000024   0xD302             BCC.N    ??emberAfWriteAttributeExternal_1
   \   00000026   0xE00D             B.N      ??emberAfWriteAttributeExternal_2
     51            case EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_DENY_WRITE:
     52              return EMBER_ZCL_STATUS_FAILURE;
   \                     ??emberAfWriteAttributeExternal_0: (+1)
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0xE00B             B.N      ??emberAfWriteAttributeExternal_2
     53            case EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_NORMAL:
     54            case EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_OF_READ_ONLY:
     55              return emAfWriteAttribute(endpoint,
     56                                          cluster,
     57                                          attributeID,
     58                                          mask,
     59                                          manufacturerCode,
     60                                          dataPtr,
     61                                          dataType,
     62                                          (extWritePermission
     63                                          == EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_OF_READ_ONLY),
     64                                          FALSE);
   \                     ??emberAfWriteAttributeExternal_1: (+1)
   \   0000002C   0xBF0C             ITE      EQ 
   \   0000002E   0x2001             MOVEQ    R0,#+1
   \   00000030   0x2000             MOVNE    R0,#+0
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x9104             STR      R1,[SP, #+16]
   \   00000036   0x9003             STR      R0,[SP, #+12]
   \   00000038   0x9502             STR      R5,[SP, #+8]
   \   0000003A   0x9701             STR      R7,[SP, #+4]
   \   0000003C   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_5: (+1)
   \   00000040   0x.... 0x....      BL       emAfWriteAttribute
     65            default:
     66              return (EmberAfStatus)extWritePermission;
   \                     ??emberAfWriteAttributeExternal_2: (+1)
   \   00000044   0xB006             ADD      SP,SP,#+24
   \   00000046   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
     67            }
     68          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \   00000000   0x9400             STR      R4,[SP, #+0]
   \   00000002   0x464B             MOV      R3,R9
   \   00000004   0x4642             MOV      R2,R8
   \   00000006   0x4651             MOV      R1,R10
   \   00000008   0x4630             MOV      R0,R6
   \   0000000A   0x4770             BX       LR
     69          
     70          //@deprecated use emberAfWriteServerAttribute or emberAfWriteClientAttribute

   \                                 In section .text, align 2, keep-with-next
     71          EmberAfStatus emberAfWriteAttribute(int8u endpoint,
     72                                              EmberAfClusterId cluster,
     73                                              EmberAfAttributeId attributeID,
     74                                              int8u mask,
     75                                              int8u* dataPtr,
     76                                              EmberAfAttributeType dataType)
     77          {
   \                     emberAfWriteAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
     78            return emAfWriteAttribute(endpoint,
     79                                      cluster,
     80                                      attributeID,
     81                                      mask,
     82                                      EMBER_AF_NULL_MANUFACTURER_CODE,
     83                                      dataPtr,
     84                                      dataType,
     85                                      TRUE,   // override read-only?
     86                                      FALSE); // just test?
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x9404             STR      R4,[SP, #+16]
   \   00000008   0x2401             MOVS     R4,#+1
   \   0000000A   0x9403             STR      R4,[SP, #+12]
   \   0000000C   0x9C09             LDR      R4,[SP, #+36]
   \   0000000E   0x9402             STR      R4,[SP, #+8]
   \   00000010   0x9C08             LDR      R4,[SP, #+32]
   \   00000012   0x9401             STR      R4,[SP, #+4]
   \   00000014   0x2400             MOVS     R4,#+0
   \   00000016   0x9400             STR      R4,[SP, #+0]
   \   00000018   0x....             B.N      ??Subroutine7_0
     87          }

   \                                 In section .text, align 2, keep-with-next
   \                     ??Subroutine7_0: (+1)
   \   00000000   0x.... 0x....      BL       emAfWriteAttribute
   \   00000004   0xB006             ADD      SP,SP,#+24
   \   00000006   0xBD10             POP      {R4,PC}          ;; return
     88          

   \                                 In section .text, align 2, keep-with-next
     89          EmberAfStatus emberAfWriteClientAttribute(int8u endpoint,
     90                                                    EmberAfClusterId cluster,
     91                                                    EmberAfAttributeId attributeID,
     92                                                    int8u* dataPtr,
     93                                                    EmberAfAttributeType dataType)
     94          {
   \                     emberAfWriteClientAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
     95            return emAfWriteAttribute(endpoint,
     96                                      cluster,
     97                                      attributeID,
     98                                      CLUSTER_MASK_CLIENT,
     99                                      EMBER_AF_NULL_MANUFACTURER_CODE,
    100                                      dataPtr,
    101                                      dataType,
    102                                      TRUE,   // override read-only?
    103                                      FALSE); // just test?
   \   00000004   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_3: (+1)
   \   00000008   0x2380             MOVS     R3,#+128
   \   0000000A   0x....             B.N      ??Subroutine7_0
    104          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x2400             MOVS     R4,#+0
   \   00000002   0x9404             STR      R4,[SP, #+16]
   \   00000004   0x9301             STR      R3,[SP, #+4]
   \   00000006   0x2401             MOVS     R4,#+1
   \   00000008   0x9403             STR      R4,[SP, #+12]
   \   0000000A   0x2300             MOVS     R3,#+0
   \   0000000C   0x9C08             LDR      R4,[SP, #+32]
   \   0000000E   0x9300             STR      R3,[SP, #+0]
   \   00000010   0x9402             STR      R4,[SP, #+8]
   \   00000012   0x4770             BX       LR
    105          

   \                                 In section .text, align 2, keep-with-next
    106          EmberAfStatus emberAfWriteServerAttribute(int8u endpoint,
    107                                                    EmberAfClusterId cluster,
    108                                                    EmberAfAttributeId attributeID,
    109                                                    int8u* dataPtr,
    110                                                    EmberAfAttributeType dataType)
    111          {
   \                     emberAfWriteServerAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    112            return emAfWriteAttribute(endpoint,
    113                                      cluster,
    114                                      attributeID,
    115                                      CLUSTER_MASK_SERVER,
    116                                      EMBER_AF_NULL_MANUFACTURER_CODE,
    117                                      dataPtr,
    118                                      dataType,
    119                                      TRUE,   // override read-only?
    120                                      FALSE); // just test?
   \   00000004   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_4: (+1)
   \   00000008   0x2340             MOVS     R3,#+64
   \   0000000A   0x....             B.N      ??Subroutine7_0
    121          }
    122          

   \                                 In section .text, align 2, keep-with-next
    123          EmberAfStatus emberAfWriteManufacturerSpecificClientAttribute(int8u endpoint,
    124                                                                        EmberAfClusterId cluster,
    125                                                                        EmberAfAttributeId attributeID,
    126                                                                        int16u manufacturerCode,
    127                                                                        int8u* dataPtr,
    128                                                                        EmberAfAttributeType dataType)
    129          {
   \                     emberAfWriteManufacturerSpecificClientAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    130            return emAfWriteAttribute(endpoint,
    131                                      cluster,
    132                                      attributeID,
    133                                      CLUSTER_MASK_CLIENT,
    134                                      manufacturerCode,
    135                                      dataPtr,
    136                                      dataType,
    137                                      TRUE,   // override read-only?
    138                                      FALSE); // just test?
   \   00000004   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_10: (+1)
   \   00000008   0x2380             MOVS     R3,#+128
   \   0000000A   0x....             B.N      ?Subroutine0
    139          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x9C09             LDR      R4,[SP, #+36]
   \   00000002   0x9402             STR      R4,[SP, #+8]
   \   00000004   0x9C08             LDR      R4,[SP, #+32]
   \   00000006   0x9401             STR      R4,[SP, #+4]
   \   00000008                      REQUIRE ??Subroutine7_0
   \   00000008                      ;; // Fall through to label ??Subroutine7_0

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \   00000000   0x2400             MOVS     R4,#+0
   \   00000002   0x9404             STR      R4,[SP, #+16]
   \   00000004   0x9300             STR      R3,[SP, #+0]
   \   00000006   0x2401             MOVS     R4,#+1
   \   00000008   0x9403             STR      R4,[SP, #+12]
   \   0000000A   0x4770             BX       LR
    140          

   \                                 In section .text, align 2, keep-with-next
    141          EmberAfStatus emberAfWriteManufacturerSpecificServerAttribute(int8u endpoint,
    142                                                                        EmberAfClusterId cluster,
    143                                                                        EmberAfAttributeId attributeID,
    144                                                                        int16u manufacturerCode,
    145                                                                        int8u* dataPtr,
    146                                                                        EmberAfAttributeType dataType)
    147          {
   \                     emberAfWriteManufacturerSpecificServerAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    148            return emAfWriteAttribute(endpoint,
    149                                      cluster,
    150                                      attributeID,
    151                                      CLUSTER_MASK_SERVER,
    152                                      manufacturerCode,
    153                                      dataPtr,
    154                                      dataType,
    155                                      TRUE,   // override read-only?
    156                                      FALSE); // just test?
   \   00000004   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_11: (+1)
   \   00000008   0x2340             MOVS     R3,#+64
   \   0000000A                      REQUIRE ?Subroutine0
   \   0000000A                      ;; // Fall through to label ?Subroutine0
    157          }
    158          
    159          

   \                                 In section .text, align 2, keep-with-next
    160          EmberAfStatus emberAfVerifyAttributeWrite(int8u endpoint,
    161                                                    EmberAfClusterId cluster,
    162                                                    EmberAfAttributeId attributeID,
    163                                                    int8u mask,
    164                                                    int16u manufacturerCode,
    165                                                    int8u* dataPtr,
    166                                                    EmberAfAttributeType dataType)
    167          {
   \                     emberAfVerifyAttributeWrite: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    168            return emAfWriteAttribute(endpoint,
    169                                      cluster,
    170                                      attributeID,
    171                                      mask,
    172                                      manufacturerCode,
    173                                      dataPtr, 
    174                                      dataType,
    175                                      FALSE, // override read-only?
    176                                      TRUE); // just test?
   \   00000004   0x2401             MOVS     R4,#+1
   \   00000006   0x9404             STR      R4,[SP, #+16]
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0x9403             STR      R4,[SP, #+12]
   \   0000000C   0x9C0A             LDR      R4,[SP, #+40]
   \   0000000E   0x9402             STR      R4,[SP, #+8]
   \   00000010   0x9C09             LDR      R4,[SP, #+36]
   \   00000012   0x9401             STR      R4,[SP, #+4]
   \   00000014   0x9C08             LDR      R4,[SP, #+32]
   \   00000016   0x9400             STR      R4,[SP, #+0]
   \   00000018   0x....             B.N      ??Subroutine7_0
    177          }
    178          

   \                                 In section .text, align 2, keep-with-next
    179          EmberAfStatus emberAfReadAttribute(int8u endpoint,
    180                                             EmberAfClusterId cluster,
    181                                             EmberAfAttributeId attributeID,
    182                                             int8u mask,
    183                                             int8u *dataPtr,
    184                                             int8u readLength,
    185                                             EmberAfAttributeType *dataType)
    186          {
   \                     emberAfReadAttribute: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    187            return emAfReadAttribute(endpoint,
    188                                     cluster,
    189                                     attributeID,
    190                                     mask,
    191                                     EMBER_AF_NULL_MANUFACTURER_CODE,
    192                                     dataPtr,
    193                                     readLength,
    194                                     dataType);
   \   00000002   0x9C08             LDR      R4,[SP, #+32]
   \   00000004   0x9403             STR      R4,[SP, #+12]
   \   00000006   0x9C07             LDR      R4,[SP, #+28]
   \   00000008   0x9402             STR      R4,[SP, #+8]
   \   0000000A   0x9C06             LDR      R4,[SP, #+24]
   \   0000000C   0x9401             STR      R4,[SP, #+4]
   \   0000000E   0x2400             MOVS     R4,#+0
   \   00000010   0x9400             STR      R4,[SP, #+0]
   \   00000012   0x....             B.N      ??Subroutine8_0
    195          }

   \                                 In section .text, align 2, keep-with-next
   \                     ??Subroutine8_0: (+1)
   \   00000000   0x.... 0x....      BL       emAfReadAttribute
   \   00000004   0xB004             ADD      SP,SP,#+16
   \   00000006   0xBD10             POP      {R4,PC}          ;; return
    196          
    197          

   \                                 In section .text, align 2, keep-with-next
    198          EmberAfStatus emberAfReadServerAttribute(int8u endpoint,
    199                                                   EmberAfClusterId cluster,
    200                                                   EmberAfAttributeId attributeID,
    201                                                   int8u* dataPtr,
    202                                                   int8u readLength)
    203          {
   \                     emberAfReadServerAttribute: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    204            return emAfReadAttribute(endpoint,
    205                                     cluster,
    206                                     attributeID,
    207                                     CLUSTER_MASK_SERVER,
    208                                     EMBER_AF_NULL_MANUFACTURER_CODE,
    209                                     dataPtr,
    210                                     readLength,
    211                                     NULL); 
   \   00000002   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_8: (+1)
   \   00000006   0x2340             MOVS     R3,#+64
   \   00000008   0x....             B.N      ??Subroutine8_0
    212          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \   00000000   0x2400             MOVS     R4,#+0
   \   00000002   0x9301             STR      R3,[SP, #+4]
   \   00000004   0x9403             STR      R4,[SP, #+12]
   \   00000006   0x2300             MOVS     R3,#+0
   \   00000008   0x9C06             LDR      R4,[SP, #+24]
   \   0000000A   0x9300             STR      R3,[SP, #+0]
   \   0000000C   0x9402             STR      R4,[SP, #+8]
   \   0000000E   0x4770             BX       LR
    213          

   \                                 In section .text, align 2, keep-with-next
    214          EmberAfStatus emberAfReadClientAttribute(int8u endpoint,
    215                                                   EmberAfClusterId cluster,
    216                                                   EmberAfAttributeId attributeID,
    217                                                   int8u* dataPtr,
    218                                                   int8u readLength)
    219          {
   \                     emberAfReadClientAttribute: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    220            return emAfReadAttribute(endpoint,
    221                                     cluster,
    222                                     attributeID,
    223                                     CLUSTER_MASK_CLIENT,
    224                                     EMBER_AF_NULL_MANUFACTURER_CODE,
    225                                     dataPtr,
    226                                     readLength,
    227                                     NULL); 
   \   00000002   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_9: (+1)
   \   00000006   0x2380             MOVS     R3,#+128
   \   00000008   0x....             B.N      ??Subroutine8_0
    228          }
    229          

   \                                 In section .text, align 2, keep-with-next
    230          EmberAfStatus emberAfReadManufacturerSpecificServerAttribute(int8u endpoint,
    231                                                                       EmberAfClusterId cluster,
    232                                                                       EmberAfAttributeId attributeID,
    233                                                                       int16u manufacturerCode,
    234                                                                       int8u* dataPtr,
    235                                                                       int8u readLength)
    236          {
   \                     emberAfReadManufacturerSpecificServerAttribute: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    237            return emAfReadAttribute(endpoint,
    238                                     cluster,
    239                                     attributeID,
    240                                     CLUSTER_MASK_SERVER,
    241                                     manufacturerCode,
    242                                     dataPtr,
    243                                     readLength,
    244                                     NULL);
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x9403             STR      R4,[SP, #+12]
   \   00000006   0x9300             STR      R3,[SP, #+0]
   \   00000008   0x2340             MOVS     R3,#+64
   \   0000000A   0x....             B.N      ?Subroutine1
    245          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x9C07             LDR      R4,[SP, #+28]
   \   00000002   0x9402             STR      R4,[SP, #+8]
   \   00000004   0x9C06             LDR      R4,[SP, #+24]
   \   00000006   0x9401             STR      R4,[SP, #+4]
   \   00000008                      REQUIRE ??Subroutine8_0
   \   00000008                      ;; // Fall through to label ??Subroutine8_0
    246          

   \                                 In section .text, align 2, keep-with-next
    247          EmberAfStatus emberAfReadManufacturerSpecificClientAttribute(int8u endpoint,
    248                                                                       EmberAfClusterId cluster,
    249                                                                       EmberAfAttributeId attributeID,
    250                                                                       int16u manufacturerCode,
    251                                                                       int8u* dataPtr,
    252                                                                       int8u readLength)
    253          {
   \                     emberAfReadManufacturerSpecificClientAttribute: (+1)
   \   00000000   0xB51F             PUSH     {R0-R4,LR}
    254            return emAfReadAttribute(endpoint,
    255                                     cluster,
    256                                     attributeID,
    257                                     CLUSTER_MASK_CLIENT,
    258                                     manufacturerCode,
    259                                     dataPtr,
    260                                     readLength,
    261                                     NULL);                                     
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x9403             STR      R4,[SP, #+12]
   \   00000006   0x9300             STR      R3,[SP, #+0]
   \   00000008   0x2380             MOVS     R3,#+128
   \   0000000A                      REQUIRE ?Subroutine1
   \   0000000A                      ;; // Fall through to label ?Subroutine1
    262          }
    263          

   \                                 In section .text, align 2, keep-with-next
    264          boolean emberAfReadSequentialAttributesAddToResponse(int8u endpoint,
    265                                                               EmberAfClusterId clusterId,
    266                                                               EmberAfAttributeId startAttributeId,
    267                                                               int8u mask,
    268                                                               int16u manufacturerCode,
    269                                                               int8u maxAttributeIds,
    270                                                               boolean includeAccessControl)
    271          {
   \                     emberAfReadSequentialAttributesAddToResponse: (+1)
   \   00000000   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   \   00000004   0x4693             MOV      R11,R2
   \   00000006   0x469A             MOV      R10,R3
    272            int16u i;
    273            int16u discovered = 0;
    274            int16u skipped = 0;
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0x4605             MOV      R5,R0
   \   0000000C   0x4688             MOV      R8,R1
   \   0000000E   0x2400             MOVS     R4,#+0
    275            int16u total = 0;
   \   00000010   0x46B1             MOV      R9,R6
    276          
    277            EmberAfCluster *cluster = emberAfFindCluster(endpoint, clusterId, mask);
   \   00000012   0x4652             MOV      R2,R10
   \   00000014   0x.... 0x....      BL       emberAfFindCluster
   \   00000018   0x0007             MOVS     R7,R0
    278          
    279            EmberAfAttributeSearchRecord record;
    280            record.endpoint = endpoint;
    281            record.clusterId = clusterId;
    282            record.clusterMask = mask;
    283            record.attributeId = startAttributeId;
    284            record.manufacturerCode = manufacturerCode;
   \   0000001A   0x980C             LDR      R0,[SP, #+48]
   \   0000001C   0xF88D 0x5000      STRB     R5,[SP, #+0]
   \   00000020   0xF8AD 0x8002      STRH     R8,[SP, #+2]
   \   00000024   0xF88D 0xA004      STRB     R10,[SP, #+4]
   \   00000028   0xF8AD 0xB006      STRH     R11,[SP, #+6]
   \   0000002C   0xF8AD 0x0008      STRH     R0,[SP, #+8]
    285          
    286            // If we don't have the cluster or it doesn't match the search, we're done.
    287            if (cluster == NULL || !emAfMatchCluster(cluster, &record)) {
   \   00000030   0xD046             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_0
   \   00000032   0xA900             ADD      R1,SP,#+0
   \   00000034   0x4638             MOV      R0,R7
   \   00000036   0x.... 0x....      BL       emAfMatchCluster
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD040             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_0
    288              return TRUE;
    289            }
    290          
    291            for (i = 0; i < cluster->attributeCount; i++) {
   \   0000003E   0xF8DD 0x8038      LDR      R8,[SP, #+56]
   \   00000042   0x46B2             MOV      R10,R6
   \   00000044   0xE006             B.N      ??emberAfReadSequentialAttributesAddToResponse_1
    292              EmberAfAttributeMetadata *metadata = &cluster->attributes[i];
    293          
    294              // If the cluster is not manufacturer-specific, an attribute is considered
    295              // only if its manufacturer code matches that of the command (which may be
    296              // unset).
    297              if (!emberAfClusterIsManufacturerSpecific(cluster)) {
    298                record.attributeId = metadata->attributeId;
    299                if (!emAfMatchAttribute(cluster, metadata, &record)) {
    300                  continue;
    301                }
    302              }
    303          
    304              if (metadata->attributeId < startAttributeId) {
    305                skipped++;
    306              } else if (discovered < maxAttributeIds) {
    307                emberAfPutInt16uInResp(metadata->attributeId);
    308                emberAfPutInt8uInResp(metadata->attributeType);
    309                if (includeAccessControl) {
    310                  // bit 0 : Readable <-- All our attributes are readable
    311                  // bit 1 : Writable <-- The only thing we track in the attribute metadata mask
    312                  // bit 2 : Reportable <-- All our attributes are reportable
    313                  emberAfPutInt8uInResp((metadata->mask & ATTRIBUTE_MASK_WRITABLE)
    314                                        ? 0x07
    315                                        : 0x05);
   \                     ??emberAfReadSequentialAttributesAddToResponse_2: (+1)
   \   00000046   0x.... 0x....      BL       emberAfPutInt8uInResp
    316                }
    317                discovered++;
   \                     ??emberAfReadSequentialAttributesAddToResponse_3: (+1)
   \   0000004A   0x1C64             ADDS     R4,R4,#+1
    318              }
    319              total++;
   \                     ??emberAfReadSequentialAttributesAddToResponse_4: (+1)
   \   0000004C   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??emberAfReadSequentialAttributesAddToResponse_5: (+1)
   \   00000050   0xF10A 0x0A01      ADD      R10,R10,#+1
   \                     ??emberAfReadSequentialAttributesAddToResponse_1: (+1)
   \   00000054   0x8938             LDRH     R0,[R7, #+8]
   \   00000056   0xFA1F 0xFA8A      UXTH     R10,R10
   \   0000005A   0x4582             CMP      R10,R0
   \   0000005C   0xD229             BCS.N    ??emberAfReadSequentialAttributesAddToResponse_6
   \   0000005E   0x6879             LDR      R1,[R7, #+4]
   \   00000060   0x200C             MOVS     R0,#+12
   \   00000062   0xFB00 0x150A      MLA      R5,R0,R10,R1
   \   00000066   0x8838             LDRH     R0,[R7, #+0]
   \   00000068   0xF5B0 0x4F7C      CMP      R0,#+64512
   \   0000006C   0xDA09             BGE.N    ??emberAfReadSequentialAttributesAddToResponse_7
   \   0000006E   0x8828             LDRH     R0,[R5, #+0]
   \   00000070   0xF8AD 0x0006      STRH     R0,[SP, #+6]
   \   00000074   0xAA00             ADD      R2,SP,#+0
   \   00000076   0x4629             MOV      R1,R5
   \   00000078   0x4638             MOV      R0,R7
   \   0000007A   0x.... 0x....      BL       emAfMatchAttribute
   \   0000007E   0x2800             CMP      R0,#+0
   \   00000080   0xD0E6             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_5
   \                     ??emberAfReadSequentialAttributesAddToResponse_7: (+1)
   \   00000082   0x8828             LDRH     R0,[R5, #+0]
   \   00000084   0x4558             CMP      R0,R11
   \   00000086   0xBF38             IT       CC 
   \   00000088   0x1C76             ADDCC    R6,R6,#+1
   \   0000008A   0xD3DF             BCC.N    ??emberAfReadSequentialAttributesAddToResponse_4
   \   0000008C   0xF89D 0x1034      LDRB     R1,[SP, #+52]
   \   00000090   0xB2A4             UXTH     R4,R4
   \   00000092   0x428C             CMP      R4,R1
   \   00000094   0xD2DA             BCS.N    ??emberAfReadSequentialAttributesAddToResponse_4
   \   00000096   0x.... 0x....      BL       emberAfPutInt16uInResp
   \   0000009A   0x78A8             LDRB     R0,[R5, #+2]
   \   0000009C   0x.... 0x....      BL       emberAfPutInt8uInResp
   \   000000A0   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000A4   0xD0D1             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_3
   \   000000A6   0x7928             LDRB     R0,[R5, #+4]
   \   000000A8   0x07C0             LSLS     R0,R0,#+31
   \   000000AA   0xBF4C             ITE      MI 
   \   000000AC   0x2007             MOVMI    R0,#+7
   \   000000AE   0x2005             MOVPL    R0,#+5
   \   000000B0   0xE7C9             B.N      ??emberAfReadSequentialAttributesAddToResponse_2
    320            }
    321          
    322            // We are finished if there are no more attributes to find, which means the
    323            // number of attributes discovered plus the number skipped equals the total
    324            // attributes in the cluster.  For manufacturer-specific clusters, the total
    325            // includes all attributes in the cluster.  For standard ZCL clusters, if the
    326            // the manufacturer code is set, the total is the number of attributes that
    327            // match the manufacturer code.  Otherwise, the total is the number of
    328            // standard ZCL attributes in the cluster.
    329            return (discovered + skipped == total);
   \                     ??emberAfReadSequentialAttributesAddToResponse_6: (+1)
   \   000000B2   0xB2A1             UXTH     R1,R4
   \   000000B4   0xB2B6             UXTH     R6,R6
   \   000000B6   0x1870             ADDS     R0,R6,R1
   \   000000B8   0xFA1F 0xF189      UXTH     R1,R9
   \   000000BC   0x4288             CMP      R0,R1
   \   000000BE   0xD101             BNE.N    ??emberAfReadSequentialAttributesAddToResponse_8
   \                     ??emberAfReadSequentialAttributesAddToResponse_0: (+1)
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0xE000             B.N      ??emberAfReadSequentialAttributesAddToResponse_9
   \                     ??emberAfReadSequentialAttributesAddToResponse_8: (+1)
   \   000000C4   0x2000             MOVS     R0,#+0
   \                     ??emberAfReadSequentialAttributesAddToResponse_9: (+1)
   \   000000C6   0xE8BD 0x8FFE      POP      {R1-R11,PC}      ;; return
    330          }
    331          
    332          static void emberAfAttributeDecodeAndPrintCluster(EmberAfClusterId cluster)
    333          {
    334          #if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_ATTRIBUTES)
    335            int16u index = emberAfFindClusterNameIndex(cluster);
    336            if (index != 0xFFFF) { 
    337              emberAfAttributesPrintln("(%p)", zclClusterNames[index].name);
    338            }
    339            emberAfAttributesFlush();
    340          #endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_ATTRIBUTES)
    341          }
    342          
    343          

   \                                 In section .text, align 2, keep-with-next
    344          void emberAfPrintAttributeTable(void) 
    345          {
   \                     emberAfPrintAttributeTable: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB08E             SUB      SP,SP,#+56
    346            int8u data[ATTRIBUTE_LARGEST];
    347            int8u endpointIndex, clusterIndex;
    348            int16u attributeIndex;
    349            EmberAfStatus status;
    350            int16u mfCode;
    351            for (endpointIndex = 0;
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0x.... 0x....      LDR.W    R8,??DataTable1
   \   0000000C   0xE000             B.N      ??emberAfPrintAttributeTable_0
    352                 endpointIndex < emberAfEndpointCount();
    353                 endpointIndex++) {
   \                     ??emberAfPrintAttributeTable_1: (+1)
   \   0000000E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??emberAfPrintAttributeTable_0: (+1)
   \   00000010   0x.... 0x....      BL       emberAfEndpointCount
   \   00000014   0xB2ED             UXTB     R5,R5
   \   00000016   0x4285             CMP      R5,R0
   \   00000018   0xD246             BCS.N    ??emberAfPrintAttributeTable_2
    354              EmberAfDefinedEndpoint *ep = &(emAfEndpoints[endpointIndex]);
   \   0000001A   0xEB08 0x1A05      ADD      R10,R8,R5, LSL #+4
    355              emberAfAttributesPrintln("ENDPOINT %x", ep->endpoint);
    356              emberAfAttributesPrintln("clus / side / attr / mfg  /type(len)/ rw / storage / data (raw)");
    357              emberAfAttributesFlush();
    358              for (clusterIndex = 0;
   \   0000001E   0x2700             MOVS     R7,#+0
   \   00000020   0xE000             B.N      ??emberAfPrintAttributeTable_3
    359                   clusterIndex < ep->endpointType->clusterCount;
    360                   clusterIndex++) {
   \                     ??emberAfPrintAttributeTable_4: (+1)
   \   00000022   0x1C7F             ADDS     R7,R7,#+1
   \                     ??emberAfPrintAttributeTable_3: (+1)
   \   00000024   0xF8DA 0x0008      LDR      R0,[R10, #+8]
   \   00000028   0x7901             LDRB     R1,[R0, #+4]
   \   0000002A   0xB2FF             UXTB     R7,R7
   \   0000002C   0x428F             CMP      R7,R1
   \   0000002E   0xD2EE             BCS.N    ??emberAfPrintAttributeTable_1
    361                EmberAfCluster *cluster = &(ep->endpointType->cluster[clusterIndex]);
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x2114             MOVS     R1,#+20
   \   00000034   0xFB01 0x0407      MLA      R4,R1,R7,R0
    362          
    363           
    364                for (attributeIndex = 0;
   \   00000038   0xF04F 0x0900      MOV      R9,#+0
   \   0000003C   0xE008             B.N      ??emberAfPrintAttributeTable_5
    365                     attributeIndex < cluster->attributeCount;
    366                     attributeIndex++) {
    367                  EmberAfAttributeMetadata *metaData = &(cluster->attributes[attributeIndex]);
    368          
    369                  // Depending on user config, this loop can take a very long time to
    370                  // run and watchdog reset will  kick in. As a workaround, we'll
    371                  // manually reset the watchdog.
    372                  halResetWatchdog();
    373          
    374                  emberAfAttributesPrint("%2x / %p / %2x / ",
    375                                         cluster->clusterId,
    376                                         (emberAfAttributeIsClient(metaData) ? "clnt" : "srvr"),
    377                                         metaData->attributeId);
    378                  mfCode = emAfGetManufacturerCodeForAttribute(cluster, metaData);
    379                  if (mfCode == EMBER_AF_NULL_MANUFACTURER_CODE) {
    380                    emberAfAttributesPrint("----");
    381                  } else {
    382                    emberAfAttributesPrint("%2x", mfCode);
    383                  }
    384                  emberAfAttributesPrint(" / %x (%x) / %p / %p / ",
    385                                         metaData->attributeType,
    386                                         emberAfAttributeSize(metaData),
    387                                         (emberAfAttributeIsReadOnly(metaData) ? "RO": "RW"),
    388                                         (emberAfAttributeIsTokenized(metaData)
    389                                          ? " token "
    390                                          : (emberAfAttributeIsExternal(metaData)
    391                                             ? "extern "
    392                                             : "  RAM  ")));
    393                  emberAfAttributesFlush();
    394                  status = emAfReadAttribute(ep->endpoint,
    395                                             cluster->clusterId,
    396                                             metaData->attributeId,
    397                                             (emberAfAttributeIsClient(metaData)
    398                                               ? CLUSTER_MASK_CLIENT
    399                                               : CLUSTER_MASK_SERVER),
    400                                             mfCode,
    401                                             data,
    402                                             ATTRIBUTE_LARGEST,
    403                                             NULL);
    404                  if (status == EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE) {
    405                    emberAfAttributesPrintln("Unsupported");
    406                  } else {
    407                    int16u length;
    408                    if (emberAfIsStringAttributeType(metaData->attributeType)) {
    409                      length = emberAfStringLength(data) + 1;
    410                    } else if (emberAfIsLongStringAttributeType(metaData->attributeType)) {
   \                     ??emberAfPrintAttributeTable_6: (+1)
   \   0000003E   0x78B0             LDRB     R0,[R6, #+2]
   \   00000040   0x.... 0x....      BL       emberAfIsLongStringAttributeType
   \   00000044   0xB110             CBZ.N    R0,??emberAfPrintAttributeTable_7
    411                      length = emberAfLongStringLength(data) + 2;
   \   00000046   0xA804             ADD      R0,SP,#+16
   \   00000048   0x.... 0x....      BL       emberAfLongStringLength
    412                    } else {
   \                     ??emberAfPrintAttributeTable_7: (+1)
   \   0000004C   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??emberAfPrintAttributeTable_5: (+1)
   \   00000050   0x8920             LDRH     R0,[R4, #+8]
   \   00000052   0xFA1F 0xF989      UXTH     R9,R9
   \   00000056   0x4581             CMP      R9,R0
   \   00000058   0xD2E3             BCS.N    ??emberAfPrintAttributeTable_4
   \   0000005A   0x6861             LDR      R1,[R4, #+4]
   \   0000005C   0x200C             MOVS     R0,#+12
   \   0000005E   0xFB00 0x1609      MLA      R6,R0,R9,R1
   \   00000062   0x.... 0x....      BL       halInternalResetWatchDog
   \   00000066   0x4631             MOV      R1,R6
   \   00000068   0x4620             MOV      R0,R4
   \   0000006A   0x.... 0x....      BL       emAfGetManufacturerCodeForAttribute
   \   0000006E   0x7931             LDRB     R1,[R6, #+4]
   \   00000070   0x0649             LSLS     R1,R1,#+25
   \   00000072   0xBF4C             ITE      MI 
   \   00000074   0x2380             MOVMI    R3,#+128
   \   00000076   0x2340             MOVPL    R3,#+64
   \   00000078   0x2100             MOVS     R1,#+0
   \   0000007A   0x9103             STR      R1,[SP, #+12]
   \   0000007C   0x9000             STR      R0,[SP, #+0]
   \   0000007E   0x2121             MOVS     R1,#+33
   \   00000080   0x9102             STR      R1,[SP, #+8]
   \   00000082   0xA904             ADD      R1,SP,#+16
   \   00000084   0x9101             STR      R1,[SP, #+4]
   \   00000086   0x8832             LDRH     R2,[R6, #+0]
   \   00000088   0x8821             LDRH     R1,[R4, #+0]
   \   0000008A   0xF89A 0x0000      LDRB     R0,[R10, #+0]
   \   0000008E   0x.... 0x....      BL       emAfReadAttribute
   \   00000092   0x2886             CMP      R0,#+134
   \   00000094   0xD0DA             BEQ.N    ??emberAfPrintAttributeTable_7
   \   00000096   0x78B0             LDRB     R0,[R6, #+2]
   \   00000098   0x.... 0x....      BL       emberAfIsStringAttributeType
   \   0000009C   0x2800             CMP      R0,#+0
   \   0000009E   0xD0CE             BEQ.N    ??emberAfPrintAttributeTable_6
   \   000000A0   0xA804             ADD      R0,SP,#+16
   \   000000A2   0x.... 0x....      BL       emberAfStringLength
   \   000000A6   0xE7D1             B.N      ??emberAfPrintAttributeTable_7
    413                      length = emberAfAttributeSize(metaData);
    414                    }
    415                    UNUSED_VAR(length);
    416                    emberAfAttributesPrintBuffer(data, length, TRUE);
    417                    emberAfAttributesFlush();
    418                    emberAfAttributeDecodeAndPrintCluster(cluster->clusterId);
    419                  }
    420                }
    421              }
    422              emberAfAttributesFlush();
    423            }
    424          }
   \                     ??emberAfPrintAttributeTable_2: (+1)
   \   000000A8   0xB00E             ADD      SP,SP,#+56
   \   000000AA   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    425          
    426          // given a clusterId and an attribute to read, this crafts the response
    427          // and places it in the response buffer. Response is one of two items:
    428          // 1) unsupported: [attrId:2] [status:1]
    429          // 2) supported:   [attrId:2] [status:1] [type:1] [data:n]
    430          //

   \                                 In section .text, align 2, keep-with-next
    431          void emberAfRetrieveAttributeAndCraftResponse(int8u endpoint,
    432                                                        EmberAfClusterId clusterId,
    433                                                        EmberAfAttributeId attrId,
    434                                                        int8u mask,
    435                                                        int16u manufacturerCode,
    436                                                        int16u readLength)
    437          {
   \                     emberAfRetrieveAttributeAndCraftResponse: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08E             SUB      SP,SP,#+56
   \   00000004   0x4615             MOV      R5,R2
   \   00000006   0x9C13             LDR      R4,[SP, #+76]
    438            EmberAfStatus status;
    439            int8u data[ATTRIBUTE_LARGEST];
    440            int8u dataType;
    441            int8u dataLen;
    442          
    443            // account for at least one byte of data
    444            if (readLength < 5) {
   \   00000008   0x2C05             CMP      R4,#+5
   \   0000000A   0xDB37             BLT.N    ??emberAfRetrieveAttributeAndCraftResponse_0
    445              return;
    446            }
    447          
    448            emberAfAttributesPrintln("OTA READ: ep:%x cid:%2x attid:%2x msk:%x mfcode:%2x", 
    449                                     endpoint, 
    450                                     clusterId, attrId, mask, manufacturerCode);
    451          
    452            // lookup the attribute in our table
    453            status = emAfReadAttribute(endpoint,
    454                                       clusterId,
    455                                       attrId,
    456                                       mask,
    457                                       manufacturerCode,
    458                                       data,
    459                                       ATTRIBUTE_LARGEST,
    460                                       &dataType);
   \   0000000C   0xAA04             ADD      R2,SP,#+16
   \   0000000E   0x9203             STR      R2,[SP, #+12]
   \   00000010   0x2221             MOVS     R2,#+33
   \   00000012   0x9202             STR      R2,[SP, #+8]
   \   00000014   0xAA05             ADD      R2,SP,#+20
   \   00000016   0x9201             STR      R2,[SP, #+4]
   \   00000018   0x9A12             LDR      R2,[SP, #+72]
   \   0000001A   0x9200             STR      R2,[SP, #+0]
   \   0000001C   0x462A             MOV      R2,R5
   \   0000001E   0x.... 0x....      BL       emAfReadAttribute
   \   00000022   0x0006             MOVS     R6,R0
    461            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \   00000024   0xD12C             BNE.N    ??emberAfRetrieveAttributeAndCraftResponse_1
    462              dataLen = (emberAfIsThisDataTypeAStringType(dataType)
    463                         ? emberAfStringLength(data) + 1
    464                         : emberAfGetDataSize(dataType));
   \   00000026   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   0000002A   0x.... 0x....      BL       emberAfIsThisDataTypeAStringType
   \   0000002E   0xB120             CBZ.N    R0,??emberAfRetrieveAttributeAndCraftResponse_2
   \   00000030   0xA805             ADD      R0,SP,#+20
   \   00000032   0x.... 0x....      BL       emberAfStringLength
   \   00000036   0x1C46             ADDS     R6,R0,#+1
   \   00000038   0xE004             B.N      ??emberAfRetrieveAttributeAndCraftResponse_3
   \                     ??emberAfRetrieveAttributeAndCraftResponse_2: (+1)
   \   0000003A   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   0000003E   0x.... 0x....      BL       emberAfGetDataSize
   \   00000042   0x4606             MOV      R6,R0
   \                     ??emberAfRetrieveAttributeAndCraftResponse_3: (+1)
   \   00000044   0xB2F6             UXTB     R6,R6
    465              if (readLength < (4 + dataLen)) { // Not enough space for attribute.
   \   00000046   0x1D30             ADDS     R0,R6,#+4
   \   00000048   0x4284             CMP      R4,R0
   \   0000004A   0xDB17             BLT.N    ??emberAfRetrieveAttributeAndCraftResponse_0
    466                return;
    467              }
    468            } else {
    469              emberAfPutInt16uInResp(attrId);
    470              emberAfPutInt8uInResp(status);
    471              emberAfAttributesPrintln("READ: clus %2x, attr %2x failed %x",
    472                                       clusterId,
    473                                       attrId,
    474                                       status);
    475              emberAfAttributesFlush();
    476              return;
    477            }
    478            
    479            // put attribute in least sig byte first
    480            emberAfPutInt16uInResp(attrId);
   \   0000004C   0x4628             MOV      R0,R5
   \   0000004E   0x.... 0x....      BL       emberAfPutInt16uInResp
    481          
    482            // attribute is found, so copy in the status and the data type 
    483            emberAfPutInt8uInResp(EMBER_ZCL_STATUS_SUCCESS);
   \   00000052   0x2000             MOVS     R0,#+0
   \   00000054   0x.... 0x....      BL       emberAfPutInt8uInResp
    484            emberAfPutInt8uInResp(dataType);
   \   00000058   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   0000005C   0x.... 0x....      BL       emberAfPutInt8uInResp
    485          
    486            if ((appResponseLength + dataLen) < EMBER_AF_RESPONSE_BUFFER_LEN) {
   \   00000060   0x....             LDR.N    R4,??DataTable1_1
   \   00000062   0x8820             LDRH     R0,[R4, #+0]
   \   00000064   0x1831             ADDS     R1,R6,R0
   \   00000066   0x2952             CMP      R1,#+82
   \   00000068   0xDA08             BGE.N    ??emberAfRetrieveAttributeAndCraftResponse_0
    487          #if (BIGENDIAN_CPU)     
    488              // strings go over the air as length byte and then in human
    489              // readable format. These should not be flipped. Other attributes
    490              // need to be flipped so they go little endian OTA
    491              if (isThisDataTypeSentLittleEndianOTA(dataType)) {
    492                int8u i;
    493                for (i = 0; i<dataLen; i++) {
    494                  appResponseData[appResponseLength + i] = data[dataLen - i - 1];
    495                }
    496              } else {
    497                MEMMOVE(&(appResponseData[appResponseLength]), data, dataLen);
    498              }
    499          #else //(BIGENDIAN_CPU)
    500              MEMMOVE(&(appResponseData[appResponseLength]), data, dataLen);
   \   0000006A   0x....             LDR.N    R3,??DataTable1_2
   \   0000006C   0x4632             MOV      R2,R6
   \   0000006E   0xA905             ADD      R1,SP,#+20
   \   00000070   0x18C0             ADDS     R0,R0,R3
   \   00000072   0x.... 0x....      BL       halCommonMemMove
    501          #endif //(BIGENDIAN_CPU)
    502              appResponseLength += dataLen;
   \   00000076   0x8820             LDRH     R0,[R4, #+0]
   \   00000078   0x1830             ADDS     R0,R6,R0
   \   0000007A   0x8020             STRH     R0,[R4, #+0]
    503            }
    504            
    505            emberAfAttributesPrintln("READ: clus %2x, attr %2x, dataLen: %x, OK",
    506                                     clusterId,
    507                                     attrId,
    508                                     dataLen);
    509            emberAfAttributesFlush();
    510          }
   \                     ??emberAfRetrieveAttributeAndCraftResponse_0: (+1)
   \   0000007C   0xB00E             ADD      SP,SP,#+56
   \   0000007E   0xBD70             POP      {R4-R6,PC}       ;; return
   \                     ??emberAfRetrieveAttributeAndCraftResponse_1: (+1)
   \   00000080   0x4628             MOV      R0,R5
   \   00000082   0x.... 0x....      BL       emberAfPutInt16uInResp
   \   00000086   0x4630             MOV      R0,R6
   \   00000088   0x.... 0x....      BL       emberAfPutInt8uInResp
   \   0000008C   0xE7F6             B.N      ??emberAfRetrieveAttributeAndCraftResponse_0
    511          
    512          // This function appends the attribute report fields for the given endpoint,
    513          // cluster, and attribute to the buffer starting at the index.  If there is
    514          // insufficient space in the buffer or an error occurs, buffer and bufIndex will
    515          // remain unchanged.  Otherwise, bufIndex will be incremented appropriately and
    516          // the fields will be written to the buffer.

   \                                 In section .text, align 2, keep-with-next
    517          EmberAfStatus emberAfAppendAttributeReportFields(int8u endpoint,
    518                                                           EmberAfClusterId clusterId,
    519                                                           EmberAfAttributeId attributeId,
    520                                                           int8u mask,
    521                                                           int8u *buffer,
    522                                                           int8u bufLen,
    523                                                           int8u *bufIndex)
    524          {
   \                     emberAfAppendAttributeReportFields: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
   \   00000004   0x4615             MOV      R5,R2
    525            EmberAfStatus status;
    526            EmberAfAttributeType type;
    527            int8u size;
    528            int8u data[ATTRIBUTE_LARGEST];
    529          
    530            status = emberAfReadAttribute(endpoint,
    531                                          clusterId,
    532                                          attributeId,
    533                                          mask,
    534                                          data,
    535                                          sizeof(data),
    536                                          &type);
   \   00000006   0xAA03             ADD      R2,SP,#+12
   \   00000008   0x9202             STR      R2,[SP, #+8]
   \   0000000A   0x2221             MOVS     R2,#+33
   \   0000000C   0x9201             STR      R2,[SP, #+4]
   \   0000000E   0xAA04             ADD      R2,SP,#+16
   \   00000010   0x9200             STR      R2,[SP, #+0]
   \   00000012   0x462A             MOV      R2,R5
   \   00000014   0x.... 0x....      BL       emberAfReadAttribute
   \   00000018   0x0004             MOVS     R4,R0
    537            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \   0000001A   0xD12E             BNE.N    ??emberAfAppendAttributeReportFields_0
    538              goto kickout;
    539            }
    540          
    541            size = (emberAfIsThisDataTypeAStringType(type)
    542                    ? emberAfStringLength(data) + 1
    543                    : emberAfGetDataSize(type));
   \   0000001C   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000020   0x.... 0x....      BL       emberAfIsThisDataTypeAStringType
   \   00000024   0xB120             CBZ.N    R0,??emberAfAppendAttributeReportFields_1
   \   00000026   0xA804             ADD      R0,SP,#+16
   \   00000028   0x.... 0x....      BL       emberAfStringLength
   \   0000002C   0x1C47             ADDS     R7,R0,#+1
   \   0000002E   0xE004             B.N      ??emberAfAppendAttributeReportFields_2
   \                     ??emberAfAppendAttributeReportFields_1: (+1)
   \   00000030   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \   00000034   0x.... 0x....      BL       emberAfGetDataSize
   \   00000038   0x4607             MOV      R7,R0
   \                     ??emberAfAppendAttributeReportFields_2: (+1)
   \   0000003A   0x9E14             LDR      R6,[SP, #+80]
    544            if (bufLen < *bufIndex + size + 3) {
   \   0000003C   0x9813             LDR      R0,[SP, #+76]
   \   0000003E   0x7831             LDRB     R1,[R6, #+0]
   \   00000040   0xB2FF             UXTB     R7,R7
   \   00000042   0x187B             ADDS     R3,R7,R1
   \   00000044   0x1CDB             ADDS     R3,R3,#+3
   \   00000046   0x4298             CMP      R0,R3
   \   00000048   0xBFB8             IT       LT 
    545              status = EMBER_ZCL_STATUS_INSUFFICIENT_SPACE;
   \   0000004A   0x2489             MOVLT    R4,#+137
    546              goto kickout;
   \   0000004C   0xDB15             BLT.N    ??emberAfAppendAttributeReportFields_0
    547            }
    548          
    549            buffer[(*bufIndex)++] = LOW_BYTE(attributeId);
   \   0000004E   0x9812             LDR      R0,[SP, #+72]
   \   00000050   0x540D             STRB     R5,[R1, R0]
    550            buffer[(*bufIndex)++] = HIGH_BYTE(attributeId);
   \   00000052   0x1C49             ADDS     R1,R1,#+1
   \   00000054   0xB2C9             UXTB     R1,R1
   \   00000056   0x0A2A             LSRS     R2,R5,#+8
   \   00000058   0x540A             STRB     R2,[R1, R0]
    551            buffer[(*bufIndex)++] = type;
   \   0000005A   0x1C49             ADDS     R1,R1,#+1
   \   0000005C   0x1C4B             ADDS     R3,R1,#+1
   \   0000005E   0x7033             STRB     R3,[R6, #+0]
   \   00000060   0xB2C9             UXTB     R1,R1
   \   00000062   0xF89D 0x200C      LDRB     R2,[SP, #+12]
   \   00000066   0x540A             STRB     R2,[R1, R0]
    552          #if (BIGENDIAN_CPU)
    553            if (isThisDataTypeSentLittleEndianOTA(type)) {
    554              emberReverseMemCopy(buffer + *bufIndex, data, size);
    555            } else {
    556              MEMMOVE(buffer + *bufIndex, data, size);
    557            }
    558          #else
    559            MEMMOVE(buffer + *bufIndex, data, size);
   \   00000068   0xB2DB             UXTB     R3,R3
   \   0000006A   0x463A             MOV      R2,R7
   \   0000006C   0xA904             ADD      R1,SP,#+16
   \   0000006E   0x1818             ADDS     R0,R3,R0
   \   00000070   0x.... 0x....      BL       halCommonMemMove
    560          #endif
    561            *bufIndex += size;
   \   00000074   0x7830             LDRB     R0,[R6, #+0]
   \   00000076   0x1838             ADDS     R0,R7,R0
   \   00000078   0x7030             STRB     R0,[R6, #+0]
    562          
    563          kickout:
    564            emberAfAttributesPrintln("REPORT: clus 0x%2x, attr 0x%2x: 0x%x",
    565                                     clusterId,
    566                                     attributeId,
    567                                     status);
    568            emberAfAttributesFlush();
    569          
    570            return status;
   \                     ??emberAfAppendAttributeReportFields_0: (+1)
   \   0000007A   0x4620             MOV      R0,R4
   \   0000007C   0xB00D             ADD      SP,SP,#+52
   \   0000007E   0xBDF0             POP      {R4-R7,PC}       ;; return
    571          }
    572          
    573          //------------------------------------------------------------------------------
    574          // Internal Functions
    575          
    576          // writes an attribute (identified by clusterID and attrID to the given value. 
    577          // this returns:
    578          // - EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE: if attribute isnt supported by the device (the
    579          //           device is not found in the attribute table)
    580          // - EMBER_ZCL_STATUS_INVALID_DATA_TYPE: if the data type passed in doesnt match the type
    581          //           stored in the attribute table
    582          // - EMBER_ZCL_STATUS_READ_ONLY: if the attribute isnt writable
    583          // - EMBER_ZCL_STATUS_INVALID_VALUE: if the value is set out of the allowable range for
    584          //           the attribute
    585          // - EMBER_ZCL_STATUS_SUCCESS: if the attribute was found and successfully written
    586          // 
    587          // if TRUE is passed in for overrideReadOnlyAndDataType then the data type is
    588          // not checked and the read-only flag is ignored. This mode is meant for 
    589          // testing or setting the initial value of the attribute on the device.
    590          //
    591          // if TRUE is passed for justTest, then the type is not written but all 
    592          // checks are done to see if the type could be written
    593          // reads the attribute specified, returns FALSE if the attribute is not in
    594          // the table or the data is too large, returns TRUE and writes to dataPtr
    595          // if the attribute is supported and the readLength specified is less than
    596          // the length of the data.

   \                                 In section .text, align 2, keep-with-next
    597          EmberAfStatus emAfWriteAttribute(int8u endpoint,
    598                                           EmberAfClusterId cluster,
    599                                           EmberAfAttributeId attributeID,
    600                                           int8u mask,
    601                                           int16u manufacturerCode,
    602                                           int8u *data,
    603                                           EmberAfAttributeType dataType,
    604                                           boolean overrideReadOnlyAndDataType,
    605                                           boolean justTest)
    606          {
   \                     emAfWriteAttribute: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB089             SUB      SP,SP,#+36
   \   00000006   0x4606             MOV      R6,R0
    607            EmberAfAttributeMetadata *metadata = NULL;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x4690             MOV      R8,R2
   \   0000000C   0x9004             STR      R0,[SP, #+16]
    608            EmberAfAttributeSearchRecord record;
    609            record.endpoint = endpoint;
    610            record.clusterId = cluster;
    611            record.clusterMask = mask;
    612            record.attributeId = attributeID;
    613            record.manufacturerCode = manufacturerCode;
    614            emAfReadOrWriteAttribute(&record,
    615                                     &metadata,
    616                                     NULL,   // buffer
    617                                     0,      // buffer size
    618                                     FALSE); // write?
   \   0000000E   0x9000             STR      R0,[SP, #+0]
   \   00000010   0x468A             MOV      R10,R1
   \   00000012   0x9C12             LDR      R4,[SP, #+72]
   \   00000014   0x4699             MOV      R9,R3
   \   00000016   0x4602             MOV      R2,R0
   \   00000018   0xF88D 0x6014      STRB     R6,[SP, #+20]
   \   0000001C   0xF8AD 0xA016      STRH     R10,[SP, #+22]
   \   00000020   0xF88D 0x9018      STRB     R9,[SP, #+24]
   \   00000024   0xF8AD 0x801A      STRH     R8,[SP, #+26]
   \   00000028   0xF8AD 0x401C      STRH     R4,[SP, #+28]
   \   0000002C   0x2300             MOVS     R3,#+0
   \   0000002E   0xA904             ADD      R1,SP,#+16
   \   00000030   0xA805             ADD      R0,SP,#+20
   \   00000032   0x.... 0x....      BL       emAfReadOrWriteAttribute
    619          
    620            // if we dont support that attribute
    621            if (metadata == NULL) {
   \   00000036   0x9804             LDR      R0,[SP, #+16]
   \   00000038   0xB908             CBNZ.N   R0,??emAfWriteAttribute_0
    622              emberAfAttributesPrintln("%pep %x clus %2x attr %2x not supported",
    623                                       "WRITE ERR: ",
    624                                       endpoint, 
    625                                       cluster, 
    626                                       attributeID);
    627              emberAfAttributesFlush();
    628              return EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE;
   \   0000003A   0x2086             MOVS     R0,#+134
   \   0000003C   0xE07B             B.N      ??emAfWriteAttribute_1
    629            }
   \                     ??emAfWriteAttribute_0: (+1)
   \   0000003E   0x9D14             LDR      R5,[SP, #+80]
    630          
    631            // if the data type specified by the caller is incorrect
    632            if (!(overrideReadOnlyAndDataType)) {
   \   00000040   0x9815             LDR      R0,[SP, #+84]
   \   00000042   0xB958             CBNZ.N   R0,??emAfWriteAttribute_2
    633              if (dataType != metadata->attributeType) {
   \   00000044   0x9804             LDR      R0,[SP, #+16]
   \   00000046   0x7880             LDRB     R0,[R0, #+2]
   \   00000048   0x4285             CMP      R5,R0
   \   0000004A   0xBF18             IT       NE 
    634                emberAfAttributesPrintln("%pinvalid data type", "WRITE ERR: ");
    635                emberAfAttributesFlush();
    636                return EMBER_ZCL_STATUS_INVALID_DATA_TYPE;
   \   0000004C   0x208D             MOVNE    R0,#+141
   \   0000004E   0xD172             BNE.N    ??emAfWriteAttribute_1
    637              }
    638              
    639              if (emberAfAttributeIsReadOnly(metadata)) {
   \   00000050   0x9804             LDR      R0,[SP, #+16]
   \   00000052   0x7900             LDRB     R0,[R0, #+4]
   \   00000054   0x07C0             LSLS     R0,R0,#+31
   \   00000056   0xBF58             IT       PL 
    640                emberAfAttributesPrintln("%pattr not writable", "WRITE ERR: ");
    641                emberAfAttributesFlush();
    642                return EMBER_ZCL_STATUS_READ_ONLY;
   \   00000058   0x2088             MOVPL    R0,#+136
   \   0000005A   0xD56C             BPL.N    ??emAfWriteAttribute_1
    643              }
    644            }
    645          
    646            // if the value the attribute is being set to is out of range
    647            // return EMBER_ZCL_STATUS_INVALID_VALUE
    648            if (metadata->mask & ATTRIBUTE_MASK_MIN_MAX) {
   \                     ??emAfWriteAttribute_2: (+1)
   \   0000005C   0x9804             LDR      R0,[SP, #+16]
   \   0000005E   0x9F13             LDR      R7,[SP, #+76]
   \   00000060   0x7900             LDRB     R0,[R0, #+4]
   \   00000062   0x0740             LSLS     R0,R0,#+29
   \   00000064   0xD528             BPL.N    ??emAfWriteAttribute_3
    649              EmberAfDefaultAttributeValue minv = metadata->defaultValue.ptrToMinMaxValue->minValue;
   \   00000066   0x9804             LDR      R0,[SP, #+16]
   \   00000068   0x6880             LDR      R0,[R0, #+8]
   \   0000006A   0x6840             LDR      R0,[R0, #+4]
   \   0000006C   0x9002             STR      R0,[SP, #+8]
    650              EmberAfDefaultAttributeValue maxv = metadata->defaultValue.ptrToMinMaxValue->maxValue;
   \   0000006E   0x9804             LDR      R0,[SP, #+16]
   \   00000070   0x6880             LDR      R0,[R0, #+8]
   \   00000072   0x6880             LDR      R0,[R0, #+8]
   \   00000074   0x9001             STR      R0,[SP, #+4]
    651              boolean isAttributeSigned = emberAfIsTypeSigned(metadata->attributeType);
   \   00000076   0x9804             LDR      R0,[SP, #+16]
   \   00000078   0x7880             LDRB     R0,[R0, #+2]
   \   0000007A   0x.... 0x....      BL       emberAfIsTypeSigned
   \   0000007E   0x4683             MOV      R11,R0
    652              int8u dataLen = emberAfAttributeSize(metadata);
   \   00000080   0x9804             LDR      R0,[SP, #+16]
   \   00000082   0x78C0             LDRB     R0,[R0, #+3]
   \   00000084   0xF88D 0x0000      STRB     R0,[SP, #+0]
    653              if (dataLen <= 2) {
   \   00000088   0x2803             CMP      R0,#+3
   \   0000008A   0x465B             MOV      R3,R11
   \   0000008C   0x4602             MOV      R2,R0
   \   0000008E   0x4639             MOV      R1,R7
   \   00000090   0xDA2B             BGE.N    ??emAfWriteAttribute_4
    654                int8s minR, maxR;
    655                int8u* minI = (int8u*)&(minv.defaultValue);
    656                int8u* maxI = (int8u*)&(maxv.defaultValue);
    657                //On big endian cpu with length 1 only the second byte counts
    658                #if (BIGENDIAN_CPU)
    659                  if (dataLen == 1) {
    660                    minI++;
    661                    maxI++;
    662                  }
    663                #endif //BIGENDIAN_CPU
    664                minR = emberAfCompareValues(minI, data, dataLen, isAttributeSigned);
   \   00000092   0xA802             ADD      R0,SP,#+8
   \   00000094   0x.... 0x....      BL       emberAfCompareValues
   \   00000098   0xF88D 0x0001      STRB     R0,[SP, #+1]
    665                maxR = emberAfCompareValues(maxI, data, dataLen, isAttributeSigned);
   \   0000009C   0x465B             MOV      R3,R11
   \   0000009E   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   000000A2   0x4639             MOV      R1,R7
   \   000000A4   0xA801             ADD      R0,SP,#+4
   \   000000A6   0x.... 0x....      BL       emberAfCompareValues
    666                if ((minR == 1) || (maxR == -1)) {
   \   000000AA   0xF99D 0x1001      LDRSB    R1,[SP, #+1]
   \   000000AE   0x2901             CMP      R1,#+1
   \   000000B0   0xBF18             IT       NE 
   \   000000B2   0xF110 0x0F01      CMNNE    R0,#+1
   \   000000B6   0xD027             BEQ.N    ??emAfWriteAttribute_5
    667                  return EMBER_ZCL_STATUS_INVALID_VALUE;
    668                }
    669              } else {
    670                if ((emberAfCompareValues(minv.ptrToDefaultValue, data, dataLen, isAttributeSigned) == 1) ||
    671                    (emberAfCompareValues(maxv.ptrToDefaultValue, data, dataLen, isAttributeSigned) == -1)) {
    672                  return EMBER_ZCL_STATUS_INVALID_VALUE;
    673                }
    674              }
    675            }
    676          
    677            // write the data unless this is only a test
    678            if (!justTest) {
   \                     ??emAfWriteAttribute_3: (+1)
   \   000000B8   0x9816             LDR      R0,[SP, #+88]
   \   000000BA   0x2800             CMP      R0,#+0
   \   000000BC   0xD13A             BNE.N    ??emAfWriteAttribute_6
    679              // Pre write attribute callback
    680              EmberAfStatus status
    681                = emberAfPreAttributeChangeCallback(endpoint,
    682                                                    cluster,
    683                                                    attributeID,
    684                                                    mask,
    685                                                    manufacturerCode,
    686                                                    dataType,
    687                                                    emberAfAttributeSize(metadata),
    688                                                    data);
   \   000000BE   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_0: (+1)
   \   000000C2   0x.... 0x....      BL       emberAfPreAttributeChangeCallback
    689              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \   000000C6   0x2800             CMP      R0,#+0
   \   000000C8   0xD135             BNE.N    ??emAfWriteAttribute_1
    690                return status;
    691              }
    692          
    693              status = emAfClusterPreAttributeChangedCallback(endpoint,
    694                                                              cluster,
    695                                                              attributeID,
    696                                                              mask,
    697                                                              manufacturerCode,
    698                                                              dataType,
    699                                                              emberAfAttributeSize(metadata),
    700                                                              data );
   \   000000CA   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_1: (+1)
   \   000000CE   0x.... 0x....      BL       emAfClusterPreAttributeChangedCallback
    701              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \   000000D2   0x2800             CMP      R0,#+0
   \   000000D4   0xD12F             BNE.N    ??emAfWriteAttribute_1
    702                return status;
    703              }
    704          
    705              // write the attribute
    706              status = emAfReadOrWriteAttribute(&record,
    707                                                NULL,    // metadata
    708                                                data,
    709                                                0,       // buffer size - unused
    710                                                TRUE);   // write?
   \   000000D6   0x2001             MOVS     R0,#+1
   \   000000D8   0x9000             STR      R0,[SP, #+0]
   \   000000DA   0x2300             MOVS     R3,#+0
   \   000000DC   0x463A             MOV      R2,R7
   \   000000DE   0x2100             MOVS     R1,#+0
   \   000000E0   0xA805             ADD      R0,SP,#+20
   \   000000E2   0x.... 0x....      BL       emAfReadOrWriteAttribute
    711          
    712              if (status != EMBER_ZCL_STATUS_SUCCESS){
   \   000000E6   0xB188             CBZ.N    R0,??emAfWriteAttribute_7
    713                  return status;
   \   000000E8   0xE025             B.N      ??emAfWriteAttribute_1
    714              }
   \                     ??emAfWriteAttribute_4: (+1)
   \   000000EA   0x9802             LDR      R0,[SP, #+8]
   \   000000EC   0x.... 0x....      BL       emberAfCompareValues
   \   000000F0   0x2801             CMP      R0,#+1
   \   000000F2   0xD009             BEQ.N    ??emAfWriteAttribute_5
   \   000000F4   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   000000F8   0x9801             LDR      R0,[SP, #+4]
   \   000000FA   0x465B             MOV      R3,R11
   \   000000FC   0x4639             MOV      R1,R7
   \   000000FE   0x.... 0x....      BL       emberAfCompareValues
   \   00000102   0xF110 0x0F01      CMN      R0,#+1
   \   00000106   0xD1D7             BNE.N    ??emAfWriteAttribute_3
   \                     ??emAfWriteAttribute_5: (+1)
   \   00000108   0x2087             MOVS     R0,#+135
   \   0000010A   0xE014             B.N      ??emAfWriteAttribute_1
    715          
    716              // Save the attribute to token if needed
    717              // Function itself will weed out tokens that are not tokenized.
    718              emAfSaveAttributeToToken(data, endpoint, cluster, metadata);
   \                     ??emAfWriteAttribute_7: (+1)
   \   0000010C   0x9B04             LDR      R3,[SP, #+16]
   \   0000010E   0x4652             MOV      R2,R10
   \   00000110   0x4631             MOV      R1,R6
   \   00000112   0x4638             MOV      R0,R7
   \   00000114   0x.... 0x....      BL       emAfSaveAttributeToToken
    719          
    720          
    721              emberAfReportingAttributeChangeCallback(endpoint,
    722                                                      cluster,
    723                                                      attributeID,
    724                                                      mask,
    725                                                      manufacturerCode,
    726                                                      dataType,
    727                                                      data);
   \   00000118   0x9702             STR      R7,[SP, #+8]
   \   0000011A   0x9501             STR      R5,[SP, #+4]
   \   0000011C   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_6: (+1)
   \   00000120   0x.... 0x....      BL       emberAfReportingAttributeChangeCallback
    728          
    729              // Post write attribute callback
    730              emberAfPostAttributeChangeCallback(endpoint,
    731                                                 cluster,
    732                                                 attributeID,
    733                                                 mask,
    734                                                 manufacturerCode,
    735                                                 dataType,
    736                                                 emberAfAttributeSize(metadata),
    737                                                 data);
   \   00000124   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_2: (+1)
   \   00000128   0x.... 0x....      BL       emberAfPostAttributeChangeCallback
    738          
    739              emAfClusterAttributeChangedCallback(endpoint,
    740                                                  cluster,
    741                                                  attributeID,
    742                                                  mask,
    743                                                  manufacturerCode);
   \   0000012C   0x.... 0x....      BL       ?Subroutine4
    744            } else {
   \                     ??CrossCallReturnLabel_7: (+1)
   \   00000130   0x.... 0x....      BL       emAfClusterAttributeChangedCallback
    745              // bug: 11618, we are not handling properly external attributes
    746              // in this case... We need to do something. We don't really
    747              // know if it will succeed.
    748              emberAfAttributesPrintln("WRITE: no write, just a test");
    749              emberAfAttributesFlush();
    750            }
    751          
    752            return EMBER_ZCL_STATUS_SUCCESS;
   \                     ??emAfWriteAttribute_6: (+1)
   \   00000134   0x2000             MOVS     R0,#+0
   \                     ??emAfWriteAttribute_1: (+1)
   \   00000136   0xB009             ADD      SP,SP,#+36
   \   00000138   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    753          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x9703             STR      R7,[SP, #+12]
   \   00000002   0x464B             MOV      R3,R9
   \   00000004   0x9804             LDR      R0,[SP, #+16]
   \   00000006   0x78C0             LDRB     R0,[R0, #+3]
   \   00000008   0x9002             STR      R0,[SP, #+8]
   \   0000000A   0x9501             STR      R5,[SP, #+4]
   \   0000000C   0x9400             STR      R4,[SP, #+0]
   \   0000000E   0x4642             MOV      R2,R8
   \   00000010   0x4651             MOV      R1,R10
   \   00000012   0x4630             MOV      R0,R6
   \   00000014   0x4770             BX       LR
    754          
    755          // If dataPtr is NULL, no data is copied to the caller.  
    756          // readLength should be 0 in that case.
    757          

   \                                 In section .text, align 2, keep-with-next
    758          EmberAfStatus emAfReadAttribute(int8u endpoint,
    759                                          EmberAfClusterId cluster,
    760                                          EmberAfAttributeId attributeID,
    761                                          int8u mask,
    762                                          int16u manufacturerCode,
    763                                          int8u *dataPtr,
    764                                          int16u readLength,
    765                                          EmberAfAttributeType *dataType)
    766          {
   \                     emAfReadAttribute: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    767            EmberAfAttributeMetadata *metadata = NULL;
   \   00000004   0x2400             MOVS     R4,#+0
    768            EmberAfAttributeSearchRecord record;
    769            EmberAfStatus status;
    770            record.endpoint = endpoint;
   \   00000006   0xF88D 0x0008      STRB     R0,[SP, #+8]
    771            record.clusterId = cluster;
    772            record.clusterMask = mask;
   \   0000000A   0xF88D 0x300C      STRB     R3,[SP, #+12]
   \   0000000E   0x9401             STR      R4,[SP, #+4]
   \   00000010   0xF8AD 0x100A      STRH     R1,[SP, #+10]
    773            record.attributeId = attributeID;
   \   00000014   0xF8AD 0x200E      STRH     R2,[SP, #+14]
    774            record.manufacturerCode = manufacturerCode;
    775            status = emAfReadOrWriteAttribute(&record,
    776                                              &metadata,
    777                                              dataPtr,
    778                                              readLength,
    779                                              FALSE); // write?
   \   00000018   0x9400             STR      R4,[SP, #+0]
   \   0000001A   0xA901             ADD      R1,SP,#+4
   \   0000001C   0x9808             LDR      R0,[SP, #+32]
   \   0000001E   0x9B0A             LDR      R3,[SP, #+40]
   \   00000020   0x9A09             LDR      R2,[SP, #+36]
   \   00000022   0xF8AD 0x0010      STRH     R0,[SP, #+16]
   \   00000026   0xA802             ADD      R0,SP,#+8
   \   00000028   0x.... 0x....      BL       emAfReadOrWriteAttribute
    780          
    781            if (status == EMBER_ZCL_STATUS_SUCCESS){
   \   0000002C   0xB920             CBNZ.N   R0,??emAfReadAttribute_0
   \   0000002E   0x990B             LDR      R1,[SP, #+44]
    782              // It worked!  If the user asked for the type, set it before returning.
    783              if (dataType != NULL) {
   \   00000030   0xB111             CBZ.N    R1,??emAfReadAttribute_0
    784                (*dataType) = metadata->attributeType;
   \   00000032   0x9A01             LDR      R2,[SP, #+4]
   \   00000034   0x7892             LDRB     R2,[R2, #+2]
   \   00000036   0x700A             STRB     R2,[R1, #+0]
    785              }
    786            } else { // failed, print debug info
    787              if (status == EMBER_ZCL_STATUS_INSUFFICIENT_SPACE){
    788                emberAfAttributesPrintln("READ: attribute size too large for caller");
    789                emberAfAttributesFlush();
    790              }
    791            }
    792          
    793            return status;
   \                     ??emAfReadAttribute_0: (+1)
   \   00000038   0xB006             ADD      SP,SP,#+24
   \   0000003A   0xBD10             POP      {R4,PC}          ;; return
    794          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     emAfEndpoints

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     appResponseLength

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     appResponseData

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   emAfReadAttribute
        32   -> emAfReadOrWriteAttribute
      72   emAfWriteAttribute
        72   -> emAfClusterAttributeChangedCallback
        72   -> emAfClusterPreAttributeChangedCallback
        72   -> emAfReadOrWriteAttribute
        72   -> emAfSaveAttributeToToken
        72   -> emberAfCompareValues
        72   -> emberAfIsTypeSigned
        72   -> emberAfPostAttributeChangeCallback
        72   -> emberAfPreAttributeChangeCallback
        72   -> emberAfReportingAttributeChangeCallback
      72   emberAfAppendAttributeReportFields
        72   -> emberAfGetDataSize
        72   -> emberAfIsThisDataTypeAStringType
        72   -> emberAfReadAttribute
        72   -> emberAfStringLength
        72   -> halCommonMemMove
      88   emberAfPrintAttributeTable
        88   -> emAfGetManufacturerCodeForAttribute
        88   -> emAfReadAttribute
        88   -> emberAfEndpointCount
        88   -> emberAfIsLongStringAttributeType
        88   -> emberAfIsStringAttributeType
        88   -> emberAfLongStringLength
        88   -> emberAfStringLength
        88   -> halInternalResetWatchDog
      24   emberAfReadAttribute
        24   -> emAfReadAttribute
      24   emberAfReadClientAttribute
        24   -> emAfReadAttribute
      24   emberAfReadManufacturerSpecificClientAttribute
        24   -> emAfReadAttribute
      24   emberAfReadManufacturerSpecificServerAttribute
        24   -> emAfReadAttribute
      48   emberAfReadSequentialAttributesAddToResponse
        48   -> emAfMatchAttribute
        48   -> emAfMatchCluster
        48   -> emberAfFindCluster
        48   -> emberAfPutInt16uInResp
        48   -> emberAfPutInt8uInResp
      24   emberAfReadServerAttribute
        24   -> emAfReadAttribute
      72   emberAfRetrieveAttributeAndCraftResponse
        72   -> emAfReadAttribute
        72   -> emberAfGetDataSize
        72   -> emberAfIsThisDataTypeAStringType
        72   -> emberAfPutInt16uInResp
        72   -> emberAfPutInt8uInResp
        72   -> emberAfStringLength
        72   -> halCommonMemMove
      32   emberAfVerifyAttributeWrite
        32   -> emAfWriteAttribute
      32   emberAfWriteAttribute
        32   -> emAfWriteAttribute
      56   emberAfWriteAttributeExternal
        56   -> emAfWriteAttribute
        56   -> emberAfAllowNetworkWriteAttributeCallback
      32   emberAfWriteClientAttribute
        32   -> emAfWriteAttribute
      32   emberAfWriteManufacturerSpecificClientAttribute
        32   -> emAfWriteAttribute
      32   emberAfWriteManufacturerSpecificServerAttribute
        32   -> emAfWriteAttribute
      32   emberAfWriteServerAttribute
        32   -> emAfWriteAttribute


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       8  ??Subroutine7_0
       8  ??Subroutine8_0
       8  ?Subroutine0
       8  ?Subroutine1
      22  ?Subroutine2
      20  ?Subroutine3
      12  ?Subroutine4
      16  ?Subroutine5
      12  ?Subroutine6
      60  emAfReadAttribute
     316  emAfWriteAttribute
     128  emberAfAppendAttributeReportFields
     174  emberAfPrintAttributeTable
      20  emberAfReadAttribute
      10  emberAfReadClientAttribute
      10  emberAfReadManufacturerSpecificClientAttribute
      12  emberAfReadManufacturerSpecificServerAttribute
     202  emberAfReadSequentialAttributesAddToResponse
      10  emberAfReadServerAttribute
     142  emberAfRetrieveAttributeAndCraftResponse
      26  emberAfVerifyAttributeWrite
      26  emberAfWriteAttribute
      74  emberAfWriteAttributeExternal
      12  emberAfWriteClientAttribute
      12  emberAfWriteManufacturerSpecificClientAttribute
      10  emberAfWriteManufacturerSpecificServerAttribute
      12  emberAfWriteServerAttribute

 
 1 382 bytes in section .text
 
 1 382 bytes of CODE memory

Errors: none
Warnings: none
