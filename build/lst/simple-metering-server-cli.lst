###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        31/Aug/2015  14:18:41
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\framework\plugin\simple-metering-server\simple-metering-server-cli.c
#    Command line =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\framework\plugin\simple-metering-server\simple-metering-server-cli.c
#        -D NULL_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM357 -D
#        PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/ZigbeeRoute/ZigbeeRoute_endpoint_config.h\""
#        -D "BOARD_HEADER=\"app\builder\ZigbeeRoute\ZigbeeRoute_board.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute_tokens.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "ZA_GENERATED_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute.h\"" -D
#        "__SOURCEFILE__=\"simple-metering-server-cli.c\"" -lC
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\lst\
#        --diag_suppress Pa050 -o
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\obj\ --debug
#        --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\framework\plugin\simple-metering-server\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\framework\include\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\util\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\stack\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\lst\simple-metering-server-cli.lst
#    Object file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\build\obj\simple-metering-server-cli.o
#
###############################################################################

E:\Zigbee\EmberZNet5.6.0-GA\app\framework\plugin\simple-metering-server\simple-metering-server-cli.c
      1          // *******************************************************************
      2          // * simple-metering-server-cli.c
      3          // *
      4          // *
      5          // * Copyright 2012 by Ember Corporation. All rights reserved.              *80*
      6          // *******************************************************************
      7          
      8          #include "app/framework/include/af.h"
      9          #include "app/util/serial/command-interpreter2.h"
     10          #include "simple-metering-test.h"
     11          #include "simple-metering-server.h"
     12          #if !defined(EMBER_AF_GENERATE_CLI)
     13          
     14          void emAfPluginSimpleMeteringServerCliPrint(void);
     15          void emAfPluginSimpleMeteringServerCliRate(void);
     16          void emAfPluginSimpleMeteringServerCliVariance(void);
     17          void emAfPluginSimpleMeteringServerCliAdjust(void);
     18          void emAfPluginSimpleMeteringServerCliOff(void);
     19          
     20          void emAfPluginSimpleMeteringServerCliElectric(void);
     21          void emAfPluginSimpleMeteringServerCliGas(void);
     22          
     23          #if defined(EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_ERRORS)
     24          void emAfPluginSimpleMeteringServerCliRandomError(void);
     25          void emAfPluginSimpleMeteringServerCliSetError(void);
     26          #endif //EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_ERRORS
     27          
     28          void emAfPluginSimpleMeteringServerCliProfiles(void);
     29          
     30          EmberCommandEntry emberAfPluginSimpleMeteringServerCommands[] = {
     31          #ifdef EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_ENABLE
     32            emberCommandEntryAction("print", emAfPluginSimpleMeteringServerCliPrint, "", ""),
     33            emberCommandEntryAction("rate", emAfPluginSimpleMeteringServerCliRate, "v", ""),
     34            emberCommandEntryAction("variance", emAfPluginSimpleMeteringServerCliVariance, "v", ""),
     35            emberCommandEntryAction("adjust", emAfPluginSimpleMeteringServerCliAdjust, "u", ""),
     36            emberCommandEntryAction("off", emAfPluginSimpleMeteringServerCliOff, "u", ""),
     37            emberCommandEntryAction("electric", emAfPluginSimpleMeteringServerCliElectric, "u", ""),
     38            emberCommandEntryAction("gas", emAfPluginSimpleMeteringServerCliGas, "u", ""),
     39          #ifdef EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_ERRORS
     40            emberCommandEntryAction("rnd_error", emAfPluginSimpleMeteringServerCliRandomError, "u", ""),
     41            emberCommandEntryAction("set_error", emAfPluginSimpleMeteringServerCliSetError, "uu", ""),
     42          #endif
     43            emberCommandEntryAction("profiles", emAfPluginSimpleMeteringServerCliProfiles, "u", ""),
     44          #endif //EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_ENABLE
     45            emberCommandEntryTerminator(),
     46          };
     47          
     48          #endif // EMBER_AF_GENERATE_CLI
     49          
     50          #ifdef EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_ENABLE
     51          static int8u getEndpointArgument(int8u index)
     52          {
     53            int8u endpoint = (int8u)emberUnsignedCommandArgument(index);
     54            return (endpoint == 0
     55                    ? emberAfPrimaryEndpointForCurrentNetworkIndex()
     56                    : endpoint);
     57          }
     58          
     59          // plugin simple-metering-server print
     60          void emAfPluginSimpleMeteringServerCliPrint(void) 
     61          {
     62            afTestMeterPrint();
     63          }
     64          
     65          // plugin simple-metering-server rate <int:2>
     66          void emAfPluginSimpleMeteringServerCliRate(void)
     67          {
     68            afTestMeterSetConsumptionRate((int16u)emberUnsignedCommandArgument(0),
     69                                          (int8u)emberUnsignedCommandArgument(1));
     70          }
     71          
     72          // plugin simple-metering-server variance <int:2>
     73          void emAfPluginSimpleMeteringServerCliVariance(void)
     74          {
     75            afTestMeterSetConsumptionVariance((int16u)emberUnsignedCommandArgument(0));
     76          }
     77          
     78          // plugin simple-metering-server adjust <endpoint:1>
     79          void emAfPluginSimpleMeteringServerCliAdjust(void)
     80          {
     81            afTestMeterAdjust(getEndpointArgument(0));
     82          }
     83          
     84          // plugin simple-metering-server off <endpoint: 1>
     85          void emAfPluginSimpleMeteringServerCliOff(void)
     86          {
     87            afTestMeterMode(getEndpointArgument(0), 0);
     88          }
     89          
     90          // plugin simple-metering-server electric <endpoint:1>
     91          void emAfPluginSimpleMeteringServerCliElectric(void)
     92          {
     93          #if (EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_TYPE == EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_ELECTRIC_METER)
     94            afTestMeterMode(getEndpointArgument(0), 1);
     95          #else
     96            emberAfCorePrintln("Not applicable for a non Electric Meter.");
     97          #endif
     98          }
     99          
    100          // plugin simple-metering-server gas <endpoint:1>
    101          void emAfPluginSimpleMeteringServerCliGas(void)
    102          {
    103          //#if (EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_TYPE == EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_GAS_METER)
    104            afTestMeterMode(getEndpointArgument(0), 2);
    105          // #else
    106          //   emberAfCorePrintln("Not applicable for a non Gas Meter.");
    107          // #endif
    108          }
    109          
    110          #ifdef EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_ERRORS
    111          // plugin simple-metering-server rnd_error <data:1>
    112          void emAfPluginSimpleMeteringServerCliRandomError(void)
    113          {
    114            // enables random error setting at each tick
    115            afTestMeterRandomError((int8u)emberUnsignedCommandArgument(0));  
    116          }
    117          
    118          // plugin simple-metering-server set_error <data:1> <endpoint:1>
    119          void emAfPluginSimpleMeteringServerCliSetError(void)
    120          {
    121            // sets error, in the process overriding random_error
    122            afTestMeterSetError(getEndpointArgument(1), 
    123                                (int8u)emberUnsignedCommandArgument(0));                           
    124          }
    125          #endif //EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_ERRORS
    126          
    127          // plugin simple-metering-server profiles <data:1>
    128          void emAfPluginSimpleMeteringServerCliProfiles(void)
    129          {
    130          #if (EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_PROFILES != 0)
    131            afTestMeterEnableProfiles((int8u)emberUnsignedCommandArgument(0));
    132          #else
    133            emberAfCorePrintln("Not applicable for 0 configured profiles.");
    134          #endif
    135          }
    136          #endif //EMBER_AF_PLUGIN_SIMPLE_METERING_SERVER_TEST_METER_ENABLE
    137          
    138          

   \                                 In section .text, align 2, keep-with-next
    139          void emAfPluginSimpleMeteringServerCliConfigureMirror(void)
    140          {
   \                     emAfPluginSimpleMeteringServerCliConfigureMirror: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
    141            EmberNodeId dstAddr = (EmberNodeId)emberUnsignedCommandArgument(0);
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   0000000C   0x4604             MOV      R4,R0
    142            int8u srcEndpoint =  (int8u)emberUnsignedCommandArgument(1);
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000014   0x4605             MOV      R5,R0
    143            int8u dstEndpoint =  (int8u)emberUnsignedCommandArgument(2);
   \   00000016   0x2002             MOVS     R0,#+2
   \   00000018   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   0000001C   0x4606             MOV      R6,R0
    144            int32u issuerId = (int32u)emberUnsignedCommandArgument(3);
   \   0000001E   0x2003             MOVS     R0,#+3
   \   00000020   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000024   0x4607             MOV      R7,R0
    145            int32u reportingInterval = (int32u)emberUnsignedCommandArgument(4);
   \   00000026   0x2004             MOVS     R0,#+4
   \   00000028   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   0000002C   0x4680             MOV      R8,R0
    146            int8u mirrorNotificationReporting = (int8u)emberUnsignedCommandArgument(5);
   \   0000002E   0x2005             MOVS     R0,#+5
   \   00000030   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000034   0x4681             MOV      R9,R0
    147            int8u notificationScheme = (int8u)emberUnsignedCommandArgument(6);
   \   00000036   0x2006             MOVS     R0,#+6
   \   00000038   0x.... 0x....      BL       emberUnsignedCommandArgument
    148          
    149            emberAfFillCommandSimpleMeteringClusterConfigureMirror(issuerId,
    150                                                                   reportingInterval,
    151                                                                   mirrorNotificationReporting,
    152                                                                   notificationScheme);
   \   0000003C   0xB2C0             UXTB     R0,R0
   \   0000003E   0x9003             STR      R0,[SP, #+12]
   \   00000040   0xFA5F 0xF089      UXTB     R0,R9
   \   00000044   0x9002             STR      R0,[SP, #+8]
   \   00000046   0xF8CD 0x8004      STR      R8,[SP, #+4]
   \   0000004A   0x9700             STR      R7,[SP, #+0]
   \   0000004C   0x2208             MOVS     R2,#+8
   \   0000004E   0x.... 0x....      ADR.W    R3,`?<Constant "wxuu">`
   \   00000052   0xF240 0x7102      MOVW     R1,#+1794
   \   00000056   0x2009             MOVS     R0,#+9
   \   00000058   0x.... 0x....      BL       emberAfFillExternalBuffer
    153            emberAfSetCommandEndpoints(srcEndpoint, dstEndpoint);
   \   0000005C   0xB2F1             UXTB     R1,R6
   \   0000005E   0xB2E8             UXTB     R0,R5
   \   00000060   0x.... 0x....      BL       emberAfSetCommandEndpoints
    154            emberAfSendCommandUnicast(EMBER_OUTGOING_DIRECT, dstAddr);
   \   00000064   0xB2A1             UXTH     R1,R4
   \   00000066   0xB005             ADD      SP,SP,#+20
   \   00000068   0xE8BD 0x43F0      POP      {R4-R9,LR}
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x.... 0x....      B.W      emberAfSendCommandUnicast
    155          
    156          }
    157          

   \                                 In section .text, align 2, keep-with-next
    158          void emAfPluginSimpleMeteringCliDisableFastPolling(void)
    159          {
   \                     emAfPluginSimpleMeteringCliDisableFastPolling: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    160            int8u toggleFastPolling = (int8u)emberUnsignedCommandArgument(0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       emberUnsignedCommandArgument
    161            emAfToggleFastPolling(toggleFastPolling);
   \   00000008   0xE8BD 0x4002      POP      {R1,LR}
   \   0000000C   0xB2C0             UXTB     R0,R0
   \   0000000E   0x.... 0x....      B.W      emAfToggleFastPolling
    162          }

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "wxuu">`:
   \   00000000   0x77 0x78          DC8 "wxuu"
   \              0x75 0x75    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    163          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   emAfPluginSimpleMeteringCliDisableFastPolling
         0   -> emAfToggleFastPolling
         8   -> emberUnsignedCommandArgument
      48   emAfPluginSimpleMeteringServerCliConfigureMirror
        48   -> emberAfFillExternalBuffer
         0   -> emberAfSendCommandUnicast
        48   -> emberAfSetCommandEndpoints
        48   -> emberUnsignedCommandArgument


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant "wxuu">
      18  emAfPluginSimpleMeteringCliDisableFastPolling
     114  emAfPluginSimpleMeteringServerCliConfigureMirror

 
 140 bytes in section .text
 
 140 bytes of CODE memory

Errors: none
Warnings: none
