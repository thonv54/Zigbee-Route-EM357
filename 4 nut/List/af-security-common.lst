###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Apr/2016  12:59:09
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\framework\security\af-security-common.c
#    Command line =  
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\framework\security\af-security-common.c"
#        -D SWITCH_4_BUTTON -D NULL_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D
#        CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/ZigbeeRoute/ZigbeeRoute_endpoint_config.h\""
#        -D "BOARD_HEADER=\"app\builder\ZigbeeRoute\ZigbeeRoute_board.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute_tokens.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "ZA_GENERATED_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute.h\"" -D
#        "__SOURCEFILE__=\"af-security-common.c\"" -lC "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\4
#        nut\List\" --diag_suppress Pa050 -o "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\4
#        nut\Obj\" --debug --endian=little --cpu=Cortex-M3
#        --no_path_in_file_macros --separate_cluster_for_initialized_variables
#        -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\framework\security\" -I
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\" -I
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\framework\include\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\util\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\stack\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\..\"
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\4
#        nut\List\af-security-common.lst
#    Object file  =  
#        D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\4
#        nut\Obj\af-security-common.o
#
###############################################################################

D:\Work Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\framework\security\af-security-common.c
      1          // *******************************************************************
      2          // * af-security-common.c
      3          // *
      4          // * Security code common to both the Trust Center and the normal node.
      5          // *
      6          // * Copyright 2009 by Ember Corporation. All rights reserved.              *80*
      7          // *******************************************************************
      8          
      9          #include "app/framework/include/af.h"
     10          #include "app/framework/security/af-security.h"
     11          #include "app/util/serial/command-interpreter2.h"
     12          #include "app/framework/cli/security-cli.h"
     13          
     14          //------------------------------------------------------------------------------

   \                                 In section .data, align 1
     15          boolean emberAfClearLinkKeyTableUponFormingOrJoining = TRUE;
   \                     emberAfClearLinkKeyTableUponFormingOrJoining:
   \   00000000   0x01               DC8 1
     16          

   \                                 In section .text, align 4, keep-with-next
     17          const EmberAfSecurityProfileData emAfSecurityProfileData[] = {
   \                     emAfSecurityProfileData:
   \   00000000   0x01 0x00          DC8 1, 0
   \   00000002   0x1B04 0x0010      DC16 6916, 16, 6404, 16
   \              0x1904 0x0010
   \   0000000A   0x01 0x01          DC8 1, 1, 90, 105, 103, 66, 101, 101, 65, 108, 108, 105, 97, 110, 99
   \              0x5A 0x69    
   \              0x67 0x42    
   \              0x65 0x65    
   \              0x41 0x6C    
   \              0x6C 0x69    
   \              0x61 0x6E    
   \              0x63         
   \   00000019   0x65 0x30          DC8 101, 48, 57
   \              0x39         
     18            #include "security-profile-data.h"
     19          };
     20          

   \                                 In section .text, align 4, keep-with-next
     21          static PGM EmberKeyData unSetKey = DUMMY_KEY;
   \                     unSetKey:
   \   00000000   0xFF 0xFF          DC8 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF         
   \   0000000D   0xFF 0xFF          DC8 255, 255, 255
   \              0xFF         
     22          
     23          // This routine sets the keys from values previously set on the CLI.
     24          // If none are set via the CLI, then the default keys for the security profile
     25          // are used.

   \                                 In section .text, align 2, keep-with-next
     26          static void getKeyFromCli(EmberKeyData* returnData, boolean linkKey)
     27          {
   \                     getKeyFromCli: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
     28            int8u* keyPtr = (linkKey
     29                             ? emberKeyContents(&cliPreconfiguredLinkKey)
     30                             : emberKeyContents(&cliNetworkKey));
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xBF14             ITE      NE 
   \   00000008   0x....             LDRNE.N  R5,??DataTable3
   \   0000000A   0x....             LDREQ.N  R5,??DataTable3_1
     31            if (0 != MEMPGMCOMPARE(keyPtr, 
     32                                   emberKeyContents(&unSetKey), 
     33                                   EMBER_ENCRYPTION_KEY_SIZE)) {
   \   0000000C   0x2210             MOVS     R2,#+16
   \   0000000E   0x.... 0x....      ADR.W    R1,unSetKey
   \   00000012   0x4628             MOV      R0,R5
   \   00000014   0x.... 0x....      BL       halCommonMemPGMCompare
   \   00000018   0xB130             CBZ.N    R0,??getKeyFromCli_0
     34              MEMMOVE(emberKeyContents(returnData), keyPtr, EMBER_ENCRYPTION_KEY_SIZE);
   \   0000001A   0x4629             MOV      R1,R5
   \   0000001C   0x4620             MOV      R0,R4
   \   0000001E   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   00000022   0x2210             MOVS     R2,#+16
   \   00000024   0x.... 0x....      B.W      halCommonMemMove
     35            }
     36          }
   \                     ??getKeyFromCli_0: (+1)
   \   00000028   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     37          

   \                                 In section .text, align 2, keep-with-next
     38          void getLinkKeyFromCli(EmberKeyData* returnData)
     39          {
     40            getKeyFromCli(returnData, TRUE);
   \                     getLinkKeyFromCli: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0x....             B.N      getKeyFromCli
     41          }
     42          

   \                                 In section .text, align 2, keep-with-next
     43          void getNetworkKeyFromCli(EmberKeyData* returnData)
     44          {
     45            getKeyFromCli(returnData, FALSE);
   \                     getNetworkKeyFromCli: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x....             B.N      getKeyFromCli
     46          }
     47          

   \                                 In section .text, align 2, keep-with-next
     48          void emAfClearLinkKeyTable(void) {
     49          #if EMBER_KEY_TABLE_SIZE
     50            if (emberAfClearLinkKeyTableUponFormingOrJoining) {
     51              emberClearKeyTable();
     52            }
     53            emberAfClearLinkKeyTableUponFormingOrJoining = TRUE;
     54          #endif
     55          }
   \                     emAfClearLinkKeyTable: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     56          

   \                                 In section .text, align 2, keep-with-next
     57          const EmberAfSecurityProfileData *emAfGetCurrentSecurityProfileData(void)
     58          {
     59            int8u i;
     60            for (i = 0; i < COUNTOF(emAfSecurityProfileData); i++) {
   \                     emAfGetCurrentSecurityProfileData: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable3_2
   \   00000002   0x6800             LDR      R0,[R0, #+0]
     61              if (emAfProIsCurrentNetwork()
     62                  && (emAfCurrentZigbeeProNetwork->securityProfile
     63                      == emAfSecurityProfileData[i].securityProfile)) {
   \   00000004   0xB128             CBZ.N    R0,??emAfGetCurrentSecurityProfileData_0
   \   00000006   0x7840             LDRB     R0,[R0, #+1]
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD102             BNE.N    ??emAfGetCurrentSecurityProfileData_0
     64                return &emAfSecurityProfileData[i];
   \   0000000C   0x.... 0x....      ADR.W    R0,emAfSecurityProfileData
   \   00000010   0x4770             BX       LR
     65              }
     66            }
     67            return NULL;
   \                     ??emAfGetCurrentSecurityProfileData_0: (+1)
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x4770             BX       LR               ;; return
     68          }
     69          

   \                                 In section .text, align 2, keep-with-next
     70          boolean emberAfIsCurrentSecurityProfileSmartEnergy(void)
     71          {
     72          #ifdef EMBER_AF_HAS_SECURITY_PROFILE_SE
     73            return (emAfProIsCurrentNetwork()
     74                    && ((emAfCurrentZigbeeProNetwork->securityProfile
     75                         == EMBER_AF_SECURITY_PROFILE_SE_TEST)
     76                        || (emAfCurrentZigbeeProNetwork->securityProfile
     77                            == EMBER_AF_SECURITY_PROFILE_SE_FULL)));
     78          #else
     79            return FALSE;
   \                     emberAfIsCurrentSecurityProfileSmartEnergy: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
     80          #endif
     81          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     cliPreconfiguredLinkKey

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     cliNetworkKey

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     emAfCurrentZigbeeProNetwork

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   emAfClearLinkKeyTable
       0   emAfGetCurrentSecurityProfileData
       0   emberAfIsCurrentSecurityProfileSmartEnergy
      16   getKeyFromCli
         0   -> halCommonMemMove
        16   -> halCommonMemPGMCompare
       0   getLinkKeyFromCli
         0   -> getKeyFromCli
       0   getNetworkKeyFromCli
         0   -> getKeyFromCli


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       2  emAfClearLinkKeyTable
      22  emAfGetCurrentSecurityProfileData
      28  emAfSecurityProfileData
       1  emberAfClearLinkKeyTableUponFormingOrJoining
       4  emberAfIsCurrentSecurityProfileSmartEnergy
      42  getKeyFromCli
       4  getLinkKeyFromCli
       4  getNetworkKeyFromCli
      16  unSetKey

 
   1 byte  in section .data
 134 bytes in section .text
 
 134 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
