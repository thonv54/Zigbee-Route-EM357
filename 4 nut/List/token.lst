###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Apr/2016  12:59:52
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\hal\micro\cortexm3\token.c
#    Command line =  
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\hal\micro\cortexm3\token.c" -D
#        SWITCH_4_BUTTON -D NULL_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D
#        CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/ZigbeeRoute/ZigbeeRoute_endpoint_config.h\""
#        -D "BOARD_HEADER=\"app\builder\ZigbeeRoute\ZigbeeRoute_board.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute_tokens.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "ZA_GENERATED_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute.h\"" -D
#        "__SOURCEFILE__=\"token.c\"" -lC "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\4
#        nut\List\" --diag_suppress Pa050 -o "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\4
#        nut\Obj\" --debug --endian=little --cpu=Cortex-M3
#        --no_path_in_file_macros --separate_cluster_for_initialized_variables
#        -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\Work Space\Silabs\Zigbee\EmberZNet5.6.0-GA\hal\micro\cortexm3\" -I
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\" -I
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\framework\include\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\util\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\stack\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\..\"
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\4
#        nut\List\token.lst
#    Object file  =  
#        D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\4
#        nut\Obj\token.o
#
###############################################################################

D:\Work Space\Silabs\Zigbee\EmberZNet5.6.0-GA\hal\micro\cortexm3\token.c
      1          /** @file hal/micro/cortexm3/token.c
      2           * @brief Token implementation for the Cortex-M3/EM3XX chip.
      3           * See token.h for details.
      4           *
      5           * <!-- Copyright 2014 Silicon Laboratories, Inc.                        *80*-->
      6           */
      7          #include PLATFORM_HEADER
      8          
      9          #include "stack/include/ember.h"
     10          #include "stack/include/error.h"
     11          #include "hal/hal.h"
     12          #include "app/util/serial/serial.h"
     13          #include "hal/micro/sim-eeprom.h"
     14          
     15          #ifndef SER232
     16            #define SER232 0
     17          #endif
     18          
     19          //prints debug data from the token access functions
     20          #define TOKENDBG(x)
     21          //#define TOKENDBG(x) x
     22          
     23          boolean tokensActive = FALSE;
     24          
     25          
     26          
     27          
     28          
     29          
     30          
     31          
     32          
     33          
     34          

   \                                 In section .text, align 2, keep-with-next
     35          EmberStatus halStackInitTokens(void)
     36          {
   \                     halStackInitTokens: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
     37            #if !defined(BOOTLOADER) && !defined(EMBER_TEST)
     38              tokTypeMfgFibVersion tokMfg;
     39              EmberStatus status=EMBER_ERR_FATAL;
     40              tokTypeStackNvdataVersion tokStack;
     41              boolean mfgTokenVersionValid = FALSE;
     42              tokTypeMfgFibVersion validMfgTokens[] = VALID_MFG_TOKEN_VERSIONS;
   \   00000002   0x.... 0x....      ADR.W    R1,`?<Constant {510, 765}>`
     43            #endif
     44            tokensActive = TRUE;
   \   00000006   0x.... 0x....      LDR.W    R5,??DataTable7
   \   0000000A   0x680A             LDR      R2,[R1, #0]
   \   0000000C   0xB083             SUB      SP,SP,#+12
   \   0000000E   0xA801             ADD      R0,SP,#+4
   \   00000010   0x2400             MOVS     R4,#+0
   \   00000012   0x6002             STR      R2,[R0, #+0]
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x7028             STRB     R0,[R5, #+0]
     45          
     46          
     47          
     48          
     49          
     50          
     51          
     52          
     53          
     54          
     55          
     56          
     57          
     58          
     59          
     60          
     61          
     62          
     63          
     64          
     65          
     66          
     67          
     68          
     69          
     70          
     71          
     72            if(halInternalSimEeInit()!=EMBER_SUCCESS) {
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       halInternalSimEeStartup
   \   0000001E   0xB130             CBZ.N    R0,??halStackInitTokens_0
     73              TOKENDBG(emberSerialPrintf(SER232,"halInternalSimEeInit Attempt 1 fail\r\n");)
     74              if(halInternalSimEeInit()!=EMBER_SUCCESS) {
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       halInternalSimEeStartup
   \   00000026   0xB110             CBZ.N    R0,??halStackInitTokens_0
     75                TOKENDBG(emberSerialPrintf(SER232,"halInternalSimEeInit Attempt 2 fail\r\n");)
     76                tokensActive = FALSE;
   \   00000028   0x702C             STRB     R4,[R5, #+0]
     77                return EMBER_SIM_EEPROM_INIT_2_FAILED;
   \   0000002A   0x2049             MOVS     R0,#+73
   \   0000002C   0xBD3E             POP      {R1-R5,PC}
     78              }
     79              TOKENDBG(} else {emberSerialPrintf(SER232,"halInternalSimEeInit Successful\r\n");)
     80            }
     81          
     82            // TODO: remove emulator reference.
     83            #if !defined(BOOTLOADER) && !defined(EMBER_TEST) && !defined(EMBER_EMU_TEST)
     84              halCommonGetToken(&tokMfg, TOKEN_MFG_FIB_VERSION);
   \                     ??halStackInitTokens_0: (+1)
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   00000032   0x8801             LDRH     R1,[R0, #+0]
   \   00000034   0x2302             MOVS     R3,#+2
   \   00000036   0x227F             MOVS     R2,#+127
   \   00000038   0xF10D 0x0002      ADD      R0,SP,#+2
   \   0000003C   0x.... 0x....      BL       halInternalGetTokenData
     85              halCommonGetToken(&tokStack, TOKEN_STACK_NVDATA_VERSION);
   \   00000040   0x2302             MOVS     R3,#+2
   \   00000042   0x227F             MOVS     R2,#+127
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0xA800             ADD      R0,SP,#+0
   \   00000048   0x.... 0x....      BL       halInternalGetTokenData
     86              
     87              // See if this manufacturing token version matches any known valid version
     88              {
     89                int32u i;
     90                for(i = 0; i < (sizeof(validMfgTokens)/sizeof(*validMfgTokens)); i++) {
   \   0000004C   0x4620             MOV      R0,R4
     91                  if(validMfgTokens[i] == tokMfg) {
   \                     ??halStackInitTokens_1: (+1)
   \   0000004E   0xA901             ADD      R1,SP,#+4
   \   00000050   0xF8BD 0x2002      LDRH     R2,[SP, #+2]
   \   00000054   0xF831 0x1010      LDRH     R1,[R1, R0, LSL #+1]
   \   00000058   0x4291             CMP      R1,R2
   \   0000005A   0xBF08             IT       EQ 
     92                    mfgTokenVersionValid = TRUE;
   \   0000005C   0x2401             MOVEQ    R4,#+1
     93                  }
     94                }
   \   0000005E   0x1C40             ADDS     R0,R0,#+1
   \   00000060   0x2802             CMP      R0,#+2
   \   00000062   0xD3F4             BCC.N    ??halStackInitTokens_1
     95              }
     96          
     97              if (!mfgTokenVersionValid || CURRENT_STACK_TOKEN_VERSION != tokStack) {
   \   00000064   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000068   0xB124             CBZ.N    R4,??halStackInitTokens_2
   \   0000006A   0xF5B0 0x7F7F      CMP      R0,#+1020
   \   0000006E   0xD107             BNE.N    ??halStackInitTokens_3
     98                if(!mfgTokenVersionValid && (CURRENT_STACK_TOKEN_VERSION != tokStack)) {
     99                  status = EMBER_EEPROM_MFG_STACK_VERSION_MISMATCH;
    100                } else if(!mfgTokenVersionValid) {
    101                  status = EMBER_EEPROM_MFG_VERSION_MISMATCH;
    102                } else if(CURRENT_STACK_TOKEN_VERSION != tokStack) {
    103                  status = EMBER_EEPROM_STACK_VERSION_MISMATCH;
    104                }
    105                #if defined(DEBUG)
    106                  if(!mfgTokenVersionValid) {
    107                    //Even is we're a debug image, a bad manufacturing token version
    108                    //is a fatal error, so return the error status.
    109                    tokensActive = FALSE;
    110                    return status;
    111                  }
    112                  if (CURRENT_STACK_TOKEN_VERSION != tokStack) {
    113                    //Debug images with a bad stack token version should attempt to
    114                    //fix the SimEE before continuing on.
    115                    TOKENDBG(emberSerialPrintf(SER232,"Stack Version mismatch, reloading\r\n");)
    116                    halInternalSimEeRepair(TRUE);
    117                    if(halInternalSimEeInit()!=EMBER_SUCCESS) {
    118                      TOKENDBG(emberSerialPrintf(SER232,"halInternalSimEeInit Attempt 3 fail\r\n");)
    119                      tokensActive = FALSE;
    120                      return EMBER_SIM_EEPROM_INIT_3_FAILED;
    121                    }
    122                  }
    123                #else //  node release image
    124                  TOKENDBG(emberSerialPrintf(SER232,"EEPROM_x_VERSION_MISMATCH (%d)\r\n",status);)
    125                  tokensActive = FALSE;
    126                  #if defined(PLATFORMTEST) || defined(LEVEL_ONE_TEST)
    127                    tokensActive = TRUE;  //Keep tokens active for test code.
    128                  #endif //defined(PLATFORMTEST)
    129                  return status;
    130                #endif
    131              }
    132            #endif //!defined(BOOTLOADER) && !defined(EMBER_TEST) && !defined(EMBER_EMU_TEST)
    133          
    134            TOKENDBG(emberSerialPrintf(SER232,"TOKENS ACTIVE\r\n");)
    135            return EMBER_SUCCESS;
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0xBD3E             POP      {R1-R5,PC}       ;; return
   \                     ??halStackInitTokens_2: (+1)
   \   00000074   0xF5B0 0x7F7F      CMP      R0,#+1020
   \   00000078   0xBF0C             ITE      EQ 
   \   0000007A   0x2006             MOVEQ    R0,#+6
   \   0000007C   0x2004             MOVNE    R0,#+4
   \   0000007E   0xE000             B.N      ??halStackInitTokens_4
   \                     ??halStackInitTokens_3: (+1)
   \   00000080   0x2007             MOVS     R0,#+7
   \                     ??halStackInitTokens_4: (+1)
   \   00000082   0x2100             MOVS     R1,#+0
   \   00000084   0x7029             STRB     R1,[R5, #+0]
   \   00000086   0xBD3E             POP      {R1-R5,PC}
    136          }
    137          
    138          

   \                                 In section .text, align 2, keep-with-next
    139          void halInternalGetTokenData(void *data, int16u token, int8u index, int8u len)
    140          {
   \                     halInternalGetTokenData: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    141            if(token < 256) {
   \   00000002   0x29FF             CMP      R1,#+255
   \   00000004   0xDC08             BGT.N    ??halInternalGetTokenData_0
    142              //the token ID is within the SimEEPROM's range, route to the SimEEPROM
    143              if(tokensActive) {
   \   00000006   0x.... 0x....      LDR.W    R4,??DataTable7
   \   0000000A   0x7824             LDRB     R4,[R4, #+0]
   \   0000000C   0xB144             CBZ.N    R4,??halInternalGetTokenData_1
    144                halInternalSimEeGetData(data, token, index, len);
   \   0000000E   0xE8BD 0x4010      POP      {R4,LR}
   \   00000012   0xB2C9             UXTB     R1,R1
   \   00000014   0x.... 0x....      B.W      halInternalSimEeGetData
    145              } else {
    146                TOKENDBG(emberSerialPrintf(SER232, "getIdxToken supressed.\r\n");)
    147              }
    148            } else {
    149              #ifdef EMBER_TEST
    150                assert(FALSE);
    151              #else //EMBER_TEST
    152                halInternalGetMfgTokenData(data,token,index,len);
   \                     ??halInternalGetTokenData_0: (+1)
   \   00000018   0xE8BD 0x4010      POP      {R4,LR}
   \   0000001C   0x.... 0x....      B.W      halInternalGetMfgTokenData
    153              #endif //EMBER_TEST
    154            }
    155          }
   \                     ??halInternalGetTokenData_1: (+1)
   \   00000020   0xBD10             POP      {R4,PC}          ;; return
    156          
    157          

   \                                 In section .text, align 2, keep-with-next
    158          void halInternalGetIdxTokenPtr(void *ptr, int16u ID, int8u index, int8u len)
    159          {
   \                     halInternalGetIdxTokenPtr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    160            if(ID < 256) {
   \   00000002   0x29FF             CMP      R1,#+255
   \   00000004   0xDC08             BGT.N    ??halInternalGetIdxTokenPtr_0
    161              //the ID is within the SimEEPROM's range, route to the SimEEPROM
    162              if(tokensActive) {
   \   00000006   0x.... 0x....      LDR.W    R4,??DataTable7
   \   0000000A   0x7824             LDRB     R4,[R4, #+0]
   \   0000000C   0xB16C             CBZ.N    R4,??halInternalGetIdxTokenPtr_1
    163                halInternalSimEeGetPtr(ptr, ID, index, len);
   \   0000000E   0xE8BD 0x4010      POP      {R4,LR}
   \   00000012   0xB2C9             UXTB     R1,R1
   \   00000014   0x.... 0x....      B.W      halInternalSimEeGetPtr
    164              } else {
    165                TOKENDBG(emberSerialPrintf(SER232, "getIdxToken supressed.\r\n");)
    166              }
    167            } else {
    168              #ifdef EMBER_TEST
    169                assert(FALSE);
    170              #else //EMBER_TEST
    171                int32u *ptrOut = (int32u *)ptr;
    172                int32u realAddress;
    173          
    174                //0x7F is a non-indexed token.  Remap to 0 for the address calculation
    175                index = (index==0x7F) ? 0 : index;
   \                     ??halInternalGetIdxTokenPtr_0: (+1)
   \   00000018   0x2A7F             CMP      R2,#+127
   \   0000001A   0xBF08             IT       EQ 
   \   0000001C   0x2200             MOVEQ    R2,#+0
    176          
    177                realAddress = (DATA_BIG_INFO_BASE|ID) + (len*index);
    178          
    179                *ptrOut = realAddress;
   \   0000001E   0x.... 0x....      LDR.W    R4,??DataTable7_2  ;; 0x8040000
   \   00000022   0x4321             ORRS     R1,R4,R1
   \   00000024   0xFB02 0x1103      MLA      R1,R2,R3,R1
   \   00000028   0x6001             STR      R1,[R0, #+0]
    180              #endif //EMBER_TEST
    181            }
    182          }
   \                     ??halInternalGetIdxTokenPtr_1: (+1)
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 1
   \                     tokensActive:
   \   00000000                      DS8 1
    183          
    184          
    185          boolean simEeSetDataActiveSemaphore = FALSE;
   \                     simEeSetDataActiveSemaphore:
   \   00000001                      DS8 1

   \                                 In section .text, align 2, keep-with-next
    186          void halInternalSetTokenData(int16u token, int8u index, void *data, int8u len)
    187          {
   \                     halInternalSetTokenData: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4605             MOV      R5,R0
   \   00000006   0x460E             MOV      R6,R1
   \   00000008   0x4617             MOV      R7,R2
   \   0000000A   0x4698             MOV      R8,R3
    188            if(token < 256) {
   \   0000000C   0x.... 0x....      ADR.W    R0,`?<Constant "token.c">`
   \   00000010   0x2DFF             CMP      R5,#+255
   \   00000012   0xDC13             BGT.N    ??halInternalSetTokenData_0
    189              //the token ID is within the SimEEPROM's range, route to the SimEEPROM
    190              if(tokensActive) {
   \   00000014   0x.... 0x....      LDR.W    R4,??DataTable7
   \   00000018   0x7821             LDRB     R1,[R4, #+0]
   \   0000001A   0xB1A1             CBZ.N    R1,??halInternalSetTokenData_1
    191                //You cannot interrupt SetData with another SetData!
    192                assert(!simEeSetDataActiveSemaphore);
   \   0000001C   0x7861             LDRB     R1,[R4, #+1]
   \   0000001E   0xB111             CBZ.N    R1,??halInternalSetTokenData_2
   \   00000020   0x21C0             MOVS     R1,#+192
   \   00000022   0x.... 0x....      BL       halInternalAssertFailed
    193                simEeSetDataActiveSemaphore = TRUE;
   \                     ??halInternalSetTokenData_2: (+1)
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x7060             STRB     R0,[R4, #+1]
    194                halInternalSimEeSetData(token, data, index, len);
   \   0000002A   0x4643             MOV      R3,R8
   \   0000002C   0x4632             MOV      R2,R6
   \   0000002E   0x4639             MOV      R1,R7
   \   00000030   0xB2E8             UXTB     R0,R5
   \   00000032   0x.... 0x....      BL       halInternalSimEeSetData
    195                simEeSetDataActiveSemaphore = FALSE;
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x7060             STRB     R0,[R4, #+1]
   \   0000003A   0xE004             B.N      ??halInternalSetTokenData_1
    196              } else {
    197                TOKENDBG(emberSerialPrintf(SER232, "setIdxToken supressed.\r\n");)
    198              }
    199            } else {
    200              //The Information Blocks can only be written by an external tool!
    201              //Something is making a set token call on a manufacturing token, and that
    202              //is not allowed!
    203              assert(0);
   \                     ??halInternalSetTokenData_0: (+1)
   \   0000003C   0x21CB             MOVS     R1,#+203
   \   0000003E   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000042   0x.... 0x....      B.W      halInternalAssertFailed
    204            }
    205          }
   \                     ??halInternalSetTokenData_1: (+1)
   \   00000046   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    206          
    207          

   \                                 In section .text, align 2, keep-with-next
    208          void halInternalIncrementCounterToken(int8u token)
    209          {
    210            if(tokensActive) {
   \                     halInternalIncrementCounterToken: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000004   0x7809             LDRB     R1,[R1, #+0]
   \   00000006   0x2900             CMP      R1,#+0
   \   00000008   0xBF18             IT       NE 
    211              halInternalSimEeIncrementCounter(token);
   \   0000000A   0x.... 0x....      BNE.W    halInternalSimEeIncrementCounter
    212            } else {
    213              TOKENDBG(emberSerialPrintf(SER232, "IncrementCounter supressed.\r\n");)
    214            }
    215          }
   \   0000000E   0x4770             BX       LR               ;; return
    216          
    217          
    218          #ifndef EMBER_TEST
    219          
    220          // The following interfaces are admittedly code space hogs but serve
    221          // as glue interfaces to link creator codes to tokens for test code.
    222          

   \                                 In section .text, align 2, keep-with-next
    223          int16u getTokenAddress(int16u creator)
    224          {
    225            #define DEFINETOKENS
    226            switch (creator) {
   \                     getTokenAddress: (+1)
   \   00000000   0xF248 0x7123      MOVW     R1,#+34595
   \   00000004   0x1A40             SUBS     R0,R0,R1
   \   00000006   0xF000 0x818F      BEQ.W    ??getTokenAddress_0
   \   0000000A   0x1E40             SUBS     R0,R0,#+1
   \   0000000C   0xF000 0x818E      BEQ.W    ??getTokenAddress_1
   \   00000010   0x1E40             SUBS     R0,R0,#+1
   \   00000012   0xF000 0x818D      BEQ.W    ??getTokenAddress_2
   \   00000016   0xF642 0x01DB      MOVW     R1,#+10459
   \   0000001A   0x1A40             SUBS     R0,R0,R1
   \   0000001C   0xF000 0x8172      BEQ.W    ??getTokenAddress_3
   \   00000020   0x1E40             SUBS     R0,R0,#+1
   \   00000022   0xF000 0x8171      BEQ.W    ??getTokenAddress_4
   \   00000026   0x1E40             SUBS     R0,R0,#+1
   \   00000028   0xF000 0x8170      BEQ.W    ??getTokenAddress_5
   \   0000002C   0x1E40             SUBS     R0,R0,#+1
   \   0000002E   0xF000 0x816F      BEQ.W    ??getTokenAddress_6
   \   00000032   0x1E40             SUBS     R0,R0,#+1
   \   00000034   0xF000 0x816E      BEQ.W    ??getTokenAddress_7
   \   00000038   0x1E40             SUBS     R0,R0,#+1
   \   0000003A   0xF000 0x816D      BEQ.W    ??getTokenAddress_8
   \   0000003E   0x1E40             SUBS     R0,R0,#+1
   \   00000040   0xF000 0x816C      BEQ.W    ??getTokenAddress_9
   \   00000044   0x1E40             SUBS     R0,R0,#+1
   \   00000046   0xF000 0x816B      BEQ.W    ??getTokenAddress_10
   \   0000004A   0x1E40             SUBS     R0,R0,#+1
   \   0000004C   0xF000 0x816A      BEQ.W    ??getTokenAddress_11
   \   00000050   0xF240 0x214B      MOVW     R1,#+587
   \   00000054   0x1A40             SUBS     R0,R0,R1
   \   00000056   0xF000 0x810C      BEQ.W    ??getTokenAddress_12
   \   0000005A   0x1E40             SUBS     R0,R0,#+1
   \   0000005C   0xF000 0x8105      BEQ.W    ??getTokenAddress_13
   \   00000060   0xF44F 0x7178      MOV      R1,#+992
   \   00000064   0x1A40             SUBS     R0,R0,R1
   \   00000066   0xF000 0x8110      BEQ.W    ??getTokenAddress_14
   \   0000006A   0xF640 0x310F      MOVW     R1,#+2831
   \   0000006E   0x1A40             SUBS     R0,R0,R1
   \   00000070   0xF000 0x80F5      BEQ.W    ??getTokenAddress_15
   \   00000074   0xF44F 0x7184      MOV      R1,#+264
   \   00000078   0x1A40             SUBS     R0,R0,R1
   \   0000007A   0xF000 0x80EC      BEQ.W    ??getTokenAddress_16
   \   0000007E   0x1EC0             SUBS     R0,R0,#+3
   \   00000080   0xF000 0x80E3      BEQ.W    ??getTokenAddress_17
   \   00000084   0x38F4             SUBS     R0,R0,#+244
   \   00000086   0xF000 0x80EC      BEQ.W    ??getTokenAddress_18
   \   0000008A   0x1E40             SUBS     R0,R0,#+1
   \   0000008C   0xF000 0x80F5      BEQ.W    ??getTokenAddress_19
   \   00000090   0x1E40             SUBS     R0,R0,#+1
   \   00000092   0xF000 0x80B4      BEQ.W    ??getTokenAddress_20
   \   00000096   0x1E40             SUBS     R0,R0,#+1
   \   00000098   0xF000 0x80F5      BEQ.W    ??getTokenAddress_21
   \   0000009C   0x3811             SUBS     R0,R0,#+17
   \   0000009E   0xF000 0x80CE      BEQ.W    ??getTokenAddress_22
   \   000000A2   0xF44F 0x71FF      MOV      R1,#+510
   \   000000A6   0x1A40             SUBS     R0,R0,R1
   \   000000A8   0xF000 0x80EB      BEQ.W    ??getTokenAddress_23
   \   000000AC   0xF240 0x31EF      MOVW     R1,#+1007
   \   000000B0   0x1A40             SUBS     R0,R0,R1
   \   000000B2   0xF000 0x80D8      BEQ.W    ??getTokenAddress_24
   \   000000B6   0x1E40             SUBS     R0,R0,#+1
   \   000000B8   0xF000 0x80C9      BEQ.W    ??getTokenAddress_25
   \   000000BC   0xF240 0x410F      MOVW     R1,#+1039
   \   000000C0   0x1A40             SUBS     R0,R0,R1
   \   000000C2   0xF000 0x80CA      BEQ.W    ??getTokenAddress_26
   \   000000C6   0xF44F 0x713C      MOV      R1,#+752
   \   000000CA   0x1A40             SUBS     R0,R0,R1
   \   000000CC   0xF000 0x80C1      BEQ.W    ??getTokenAddress_27
   \   000000D0   0xF240 0x2102      MOVW     R1,#+514
   \   000000D4   0x1A40             SUBS     R0,R0,R1
   \   000000D6   0xF000 0x80F1      BEQ.W    ??getTokenAddress_28
   \   000000DA   0x38FD             SUBS     R0,R0,#+253
   \   000000DC   0xF000 0x80CF      BEQ.W    ??getTokenAddress_29
   \   000000E0   0x1E40             SUBS     R0,R0,#+1
   \   000000E2   0xF000 0x80C8      BEQ.W    ??getTokenAddress_30
   \   000000E6   0x1EC0             SUBS     R0,R0,#+3
   \   000000E8   0xF000 0x80C1      BEQ.W    ??getTokenAddress_31
   \   000000EC   0xF640 0x51DD      MOVW     R1,#+3549
   \   000000F0   0x1A40             SUBS     R0,R0,R1
   \   000000F2   0xF000 0x80CD      BEQ.W    ??getTokenAddress_32
   \   000000F6   0x1E40             SUBS     R0,R0,#+1
   \   000000F8   0xF000 0x80D8      BEQ.W    ??getTokenAddress_33
   \   000000FC   0x1E40             SUBS     R0,R0,#+1
   \   000000FE   0xF000 0x80D7      BEQ.W    ??getTokenAddress_34
   \   00000102   0x1E40             SUBS     R0,R0,#+1
   \   00000104   0xF000 0x80D6      BEQ.W    ??getTokenAddress_35
   \   00000108   0x1E40             SUBS     R0,R0,#+1
   \   0000010A   0xF000 0x80D5      BEQ.W    ??getTokenAddress_36
   \   0000010E   0x383B             SUBS     R0,R0,#+59
   \   00000110   0xF000 0x80C6      BEQ.W    ??getTokenAddress_37
   \   00000114   0x38AE             SUBS     R0,R0,#+174
   \   00000116   0xF000 0x80D3      BEQ.W    ??getTokenAddress_38
   \   0000011A   0x1E40             SUBS     R0,R0,#+1
   \   0000011C   0xF000 0x80D2      BEQ.W    ??getTokenAddress_39
   \   00000120   0x1E40             SUBS     R0,R0,#+1
   \   00000122   0xF000 0x80D1      BEQ.W    ??getTokenAddress_40
   \   00000126   0x1E40             SUBS     R0,R0,#+1
   \   00000128   0xF000 0x80D0      BEQ.W    ??getTokenAddress_41
   \   0000012C   0x1E40             SUBS     R0,R0,#+1
   \   0000012E   0xF000 0x80CF      BEQ.W    ??getTokenAddress_42
   \   00000132   0x1E40             SUBS     R0,R0,#+1
   \   00000134   0xF000 0x80CE      BEQ.W    ??getTokenAddress_43
   \   00000138   0x380B             SUBS     R0,R0,#+11
   \   0000013A   0xF000 0x80CD      BEQ.W    ??getTokenAddress_44
   \   0000013E   0x1E40             SUBS     R0,R0,#+1
   \   00000140   0xF000 0x80CC      BEQ.W    ??getTokenAddress_45
   \   00000144   0x382F             SUBS     R0,R0,#+47
   \   00000146   0xF000 0x80D9      BEQ.W    ??getTokenAddress_46
   \   0000014A   0x1E40             SUBS     R0,R0,#+1
   \   0000014C   0xF000 0x80D8      BEQ.W    ??getTokenAddress_47
   \   00000150   0x3812             SUBS     R0,R0,#+18
   \   00000152   0xF000 0x80A1      BEQ.W    ??getTokenAddress_48
   \   00000156   0x3811             SUBS     R0,R0,#+17
   \   00000158   0xF000 0x80C2      BEQ.W    ??getTokenAddress_49
   \   0000015C   0x38D1             SUBS     R0,R0,#+209
   \   0000015E   0xD070             BEQ.N    ??getTokenAddress_50
   \   00000160   0x382A             SUBS     R0,R0,#+42
   \   00000162   0xD06A             BEQ.N    ??getTokenAddress_51
   \   00000164   0x38E7             SUBS     R0,R0,#+231
   \   00000166   0xF000 0x80BF      BEQ.W    ??getTokenAddress_52
   \   0000016A   0x381F             SUBS     R0,R0,#+31
   \   0000016C   0xF000 0x8092      BEQ.W    ??getTokenAddress_53
   \   00000170   0x388B             SUBS     R0,R0,#+139
   \   00000172   0xF000 0x80BB      BEQ.W    ??getTokenAddress_54
   \   00000176   0x1E40             SUBS     R0,R0,#+1
   \   00000178   0xF000 0x80BC      BEQ.W    ??getTokenAddress_55
   \   0000017C   0x1E40             SUBS     R0,R0,#+1
   \   0000017E   0xF000 0x80BB      BEQ.W    ??getTokenAddress_56
   \   00000182   0x1E40             SUBS     R0,R0,#+1
   \   00000184   0xF000 0x80B4      BEQ.W    ??getTokenAddress_57
   \   00000188   0x3842             SUBS     R0,R0,#+66
   \   0000018A   0xD03E             BEQ.N    ??getTokenAddress_58
   \   0000018C   0x381E             SUBS     R0,R0,#+30
   \   0000018E   0xF000 0x8085      BEQ.W    ??getTokenAddress_59
   \   00000192   0xF44F 0x7180      MOV      R1,#+256
   \   00000196   0x1A40             SUBS     R0,R0,R1
   \   00000198   0xD04B             BEQ.N    ??getTokenAddress_60
   \   0000019A   0x380C             SUBS     R0,R0,#+12
   \   0000019C   0xD04B             BEQ.N    ??getTokenAddress_61
   \   0000019E   0xF240 0x510A      MOVW     R1,#+1290
   \   000001A2   0x1A40             SUBS     R0,R0,R1
   \   000001A4   0xF000 0x807E      BEQ.W    ??getTokenAddress_62
   \   000001A8   0xF44F 0x71FD      MOV      R1,#+506
   \   000001AC   0x1A40             SUBS     R0,R0,R1
   \   000001AE   0xD04A             BEQ.N    ??getTokenAddress_63
   \   000001B0   0x38F1             SUBS     R0,R0,#+241
   \   000001B2   0xD079             BEQ.N    ??getTokenAddress_64
   \   000001B4   0xF44F 0x7100      MOV      R1,#+512
   \   000001B8   0x1A40             SUBS     R0,R0,R1
   \   000001BA   0xD022             BEQ.N    ??getTokenAddress_65
   \   000001BC   0xF44F 0x7104      MOV      R1,#+528
   \   000001C0   0x1A40             SUBS     R0,R0,R1
   \   000001C2   0xD02A             BEQ.N    ??getTokenAddress_66
   \   000001C4   0x1E80             SUBS     R0,R0,#+2
   \   000001C6   0xD02A             BEQ.N    ??getTokenAddress_67
   \   000001C8   0xF44F 0x71E6      MOV      R1,#+460
   \   000001CC   0x1A40             SUBS     R0,R0,R1
   \   000001CE   0xD020             BEQ.N    ??getTokenAddress_68
   \   000001D0   0x3820             SUBS     R0,R0,#+32
   \   000001D2   0xD020             BEQ.N    ??getTokenAddress_69
   \   000001D4   0x1E40             SUBS     R0,R0,#+1
   \   000001D6   0xD026             BEQ.N    ??getTokenAddress_70
   \   000001D8   0x1E40             SUBS     R0,R0,#+1
   \   000001DA   0xD014             BEQ.N    ??getTokenAddress_71
   \   000001DC   0x380A             SUBS     R0,R0,#+10
   \   000001DE   0xD016             BEQ.N    ??getTokenAddress_72
   \   000001E0   0x1F80             SUBS     R0,R0,#+6
   \   000001E2   0xD022             BEQ.N    ??getTokenAddress_73
   \   000001E4   0xF240 0x2102      MOVW     R1,#+514
   \   000001E8   0x1A40             SUBS     R0,R0,R1
   \   000001EA   0xD01A             BEQ.N    ??getTokenAddress_74
   \   000001EC   0xF640 0x018B      MOVW     R1,#+2187
   \   000001F0   0x1A40             SUBS     R0,R0,R1
   \   000001F2   0xD04C             BEQ.N    ??getTokenAddress_75
   \   000001F4   0x3808             SUBS     R0,R0,#+8
   \   000001F6   0xD01A             BEQ.N    ??getTokenAddress_76
   \   000001F8   0x1F00             SUBS     R0,R0,#+4
   \   000001FA   0xD073             BEQ.N    ??getTokenAddress_77
   \   000001FC   0xE09A             B.N      ??getTokenAddress_78
    227              #define TOKEN_MFG TOKEN_DEF
    228              #define TOKEN_DEF(name,creator,iscnt,isidx,type,arraysize,...) \
    229                case creator: return TOKEN_##name;
    230              #include "hal/micro/cortexm3/token-manufacturing.h"
   \                     ??getTokenAddress_20: (+1)
   \   000001FE   0x....             LDR.N    R0,??DataTable7_3
   \   00000200   0xE044             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_65: (+1)
   \   00000202   0x....             LDR.N    R0,??DataTable7_4
   \   00000204   0xE042             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_71: (+1)
   \   00000206   0x....             LDR.N    R0,??DataTable7_5
   \   00000208   0xE040             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_58: (+1)
   \   0000020A   0x....             LDR.N    R0,??DataTable7_6
   \   0000020C   0xE03E             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_72: (+1)
   \   0000020E   0x....             LDR.N    R0,??DataTable7_7
   \   00000210   0xE03C             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_68: (+1)
   \   00000212   0x....             LDR.N    R0,??DataTable7_8
   \   00000214   0xE03A             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_69: (+1)
   \   00000216   0x....             LDR.N    R0,??DataTable7_9
   \   00000218   0xE038             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_66: (+1)
   \   0000021A   0x....             LDR.N    R0,??DataTable7_10
   \   0000021C   0xE036             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_67: (+1)
   \   0000021E   0x....             LDR.N    R0,??DataTable7_11
   \   00000220   0xE034             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_74: (+1)
   \   00000222   0x....             LDR.N    R0,??DataTable7_12
   \   00000224   0xE032             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_70: (+1)
   \   00000226   0x....             LDR.N    R0,??DataTable7_13
   \   00000228   0xE030             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_73: (+1)
   \   0000022A   0x....             LDR.N    R0,??DataTable7_14
   \   0000022C   0xE02E             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_76: (+1)
   \   0000022E   0x....             LDR.N    R0,??DataTable7_1
   \   00000230   0xE02C             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_60: (+1)
   \   00000232   0x....             LDR.N    R0,??DataTable7_15
   \   00000234   0xE02A             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_61: (+1)
   \   00000236   0x....             LDR.N    R0,??DataTable7_16
   \   00000238   0xE028             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_51: (+1)
   \   0000023A   0x....             LDR.N    R0,??DataTable7_17
   \   0000023C   0xE026             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_22: (+1)
   \   0000023E   0x....             LDR.N    R0,??DataTable7_18
   \   00000240   0xE024             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_50: (+1)
   \   00000242   0x....             LDR.N    R0,??DataTable7_19
   \   00000244   0xE022             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_63: (+1)
   \   00000246   0x....             LDR.N    R0,??DataTable7_20
   \   00000248   0xE020             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_17: (+1)
   \   0000024A   0x....             LDR.N    R0,??DataTable7_21
   \   0000024C   0xE01E             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_25: (+1)
   \   0000024E   0x....             LDR.N    R0,??DataTable7_22
   \   00000250   0xE01C             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_27: (+1)
   \   00000252   0x....             LDR.N    R0,??DataTable7_23
   \   00000254   0xE01A             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_16: (+1)
   \   00000256   0x....             LDR.N    R0,??DataTable7_24
   \   00000258   0xE018             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_26: (+1)
   \   0000025A   0x....             LDR.N    R0,??DataTable7_25
   \   0000025C   0xE016             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_15: (+1)
   \   0000025E   0x....             LDR.N    R0,??DataTable7_26
   \   00000260   0xE014             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_18: (+1)
   \   00000262   0x....             LDR.N    R0,??DataTable7_27
   \   00000264   0xE012             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_24: (+1)
   \   00000266   0x....             LDR.N    R0,??DataTable7_28
   \   00000268   0xE010             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_13: (+1)
   \   0000026A   0x....             LDR.N    R0,??DataTable7_29
   \   0000026C   0xE00E             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_31: (+1)
   \   0000026E   0x....             LDR.N    R0,??DataTable7_30
   \   00000270   0xE00C             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_12: (+1)
   \   00000272   0x....             LDR.N    R0,??DataTable7_31
   \   00000274   0xE00A             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_30: (+1)
   \   00000276   0x....             LDR.N    R0,??DataTable7_32
   \   00000278   0xE008             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_19: (+1)
   \   0000027A   0x....             LDR.N    R0,??DataTable7_33
   \   0000027C   0xE006             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_29: (+1)
   \   0000027E   0x....             LDR.N    R0,??DataTable7_34
   \   00000280   0xE004             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_23: (+1)
   \   00000282   0x....             LDR.N    R0,??DataTable7_35
   \   00000284   0xE002             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_21: (+1)
   \   00000286   0x....             LDR.N    R0,??DataTable7_36
   \   00000288   0xE000             B.N      ??getTokenAddress_79
   \                     ??getTokenAddress_14: (+1)
   \   0000028A   0x....             LDR.N    R0,??DataTable7_37
   \                     ??getTokenAddress_79: (+1)
   \   0000028C   0x8800             LDRH     R0,[R0, #+0]
   \                     ??getTokenAddress_75: (+1)
   \   0000028E   0x4770             BX       LR
    231              #include "stack/config/token-stack.h"
   \                     ??getTokenAddress_32: (+1)
   \   00000290   0x2001             MOVS     R0,#+1
   \   00000292   0x4770             BX       LR
   \                     ??getTokenAddress_53: (+1)
   \   00000294   0x2002             MOVS     R0,#+2
   \   00000296   0x4770             BX       LR
   \                     ??getTokenAddress_48: (+1)
   \   00000298   0x2003             MOVS     R0,#+3
   \   0000029A   0x4770             BX       LR
   \                     ??getTokenAddress_59: (+1)
   \   0000029C   0x2004             MOVS     R0,#+4
   \   0000029E   0x4770             BX       LR
   \                     ??getTokenAddress_37: (+1)
   \   000002A0   0x2005             MOVS     R0,#+5
   \   000002A2   0x4770             BX       LR
   \                     ??getTokenAddress_62: (+1)
   \   000002A4   0x2006             MOVS     R0,#+6
   \   000002A6   0x4770             BX       LR
   \                     ??getTokenAddress_64: (+1)
   \   000002A8   0x2007             MOVS     R0,#+7
   \   000002AA   0x4770             BX       LR
   \                     ??getTokenAddress_33: (+1)
   \   000002AC   0x2008             MOVS     R0,#+8
   \   000002AE   0x4770             BX       LR
   \                     ??getTokenAddress_34: (+1)
   \   000002B0   0x2009             MOVS     R0,#+9
   \   000002B2   0x4770             BX       LR
   \                     ??getTokenAddress_35: (+1)
   \   000002B4   0x200A             MOVS     R0,#+10
   \   000002B6   0x4770             BX       LR
   \                     ??getTokenAddress_36: (+1)
   \   000002B8   0x200B             MOVS     R0,#+11
   \   000002BA   0x4770             BX       LR
   \                     ??getTokenAddress_28: (+1)
   \   000002BC   0x200C             MOVS     R0,#+12
   \   000002BE   0x4770             BX       LR
   \                     ??getTokenAddress_38: (+1)
   \   000002C0   0x200D             MOVS     R0,#+13
   \   000002C2   0x4770             BX       LR
   \                     ??getTokenAddress_39: (+1)
   \   000002C4   0x200E             MOVS     R0,#+14
   \   000002C6   0x4770             BX       LR
   \                     ??getTokenAddress_40: (+1)
   \   000002C8   0x200F             MOVS     R0,#+15
   \   000002CA   0x4770             BX       LR
   \                     ??getTokenAddress_41: (+1)
   \   000002CC   0x2010             MOVS     R0,#+16
   \   000002CE   0x4770             BX       LR
   \                     ??getTokenAddress_42: (+1)
   \   000002D0   0x2011             MOVS     R0,#+17
   \   000002D2   0x4770             BX       LR
   \                     ??getTokenAddress_43: (+1)
   \   000002D4   0x2012             MOVS     R0,#+18
   \   000002D6   0x4770             BX       LR
   \                     ??getTokenAddress_44: (+1)
   \   000002D8   0x2013             MOVS     R0,#+19
   \   000002DA   0x4770             BX       LR
   \                     ??getTokenAddress_45: (+1)
   \   000002DC   0x2014             MOVS     R0,#+20
   \   000002DE   0x4770             BX       LR
   \                     ??getTokenAddress_49: (+1)
   \   000002E0   0x2015             MOVS     R0,#+21
   \   000002E2   0x4770             BX       LR
   \                     ??getTokenAddress_77: (+1)
   \   000002E4   0x2016             MOVS     R0,#+22
   \   000002E6   0x4770             BX       LR
   \                     ??getTokenAddress_52: (+1)
   \   000002E8   0x2017             MOVS     R0,#+23
   \   000002EA   0x4770             BX       LR
   \                     ??getTokenAddress_54: (+1)
   \   000002EC   0x2018             MOVS     R0,#+24
   \   000002EE   0x4770             BX       LR
   \                     ??getTokenAddress_57: (+1)
   \   000002F0   0x2019             MOVS     R0,#+25
   \   000002F2   0x4770             BX       LR
   \                     ??getTokenAddress_55: (+1)
   \   000002F4   0x201A             MOVS     R0,#+26
   \   000002F6   0x4770             BX       LR
   \                     ??getTokenAddress_56: (+1)
   \   000002F8   0x201B             MOVS     R0,#+27
   \   000002FA   0x4770             BX       LR
   \                     ??getTokenAddress_46: (+1)
   \   000002FC   0x201C             MOVS     R0,#+28
   \   000002FE   0x4770             BX       LR
   \                     ??getTokenAddress_47: (+1)
   \   00000300   0x201D             MOVS     R0,#+29
   \   00000302   0x4770             BX       LR
   \                     ??getTokenAddress_3: (+1)
   \   00000304   0x201E             MOVS     R0,#+30
   \   00000306   0x4770             BX       LR
   \                     ??getTokenAddress_4: (+1)
   \   00000308   0x201F             MOVS     R0,#+31
   \   0000030A   0x4770             BX       LR
   \                     ??getTokenAddress_5: (+1)
   \   0000030C   0x2020             MOVS     R0,#+32
   \   0000030E   0x4770             BX       LR
   \                     ??getTokenAddress_6: (+1)
   \   00000310   0x2021             MOVS     R0,#+33
   \   00000312   0x4770             BX       LR
   \                     ??getTokenAddress_7: (+1)
   \   00000314   0x2022             MOVS     R0,#+34
   \   00000316   0x4770             BX       LR
   \                     ??getTokenAddress_8: (+1)
   \   00000318   0x2023             MOVS     R0,#+35
   \   0000031A   0x4770             BX       LR
   \                     ??getTokenAddress_9: (+1)
   \   0000031C   0x2024             MOVS     R0,#+36
   \   0000031E   0x4770             BX       LR
   \                     ??getTokenAddress_10: (+1)
   \   00000320   0x2025             MOVS     R0,#+37
   \   00000322   0x4770             BX       LR
   \                     ??getTokenAddress_11: (+1)
   \   00000324   0x2026             MOVS     R0,#+38
   \   00000326   0x4770             BX       LR
   \                     ??getTokenAddress_0: (+1)
   \   00000328   0x2027             MOVS     R0,#+39
   \   0000032A   0x4770             BX       LR
   \                     ??getTokenAddress_1: (+1)
   \   0000032C   0x2028             MOVS     R0,#+40
   \   0000032E   0x4770             BX       LR
   \                     ??getTokenAddress_2: (+1)
   \   00000330   0x2029             MOVS     R0,#+41
   \   00000332   0x4770             BX       LR
    232              #undef TOKEN_MFG
    233              #undef TOKEN_DEF
    234            default: {
    235            }
    236            };
    237            #undef DEFINETOKENS
    238            return INVALID_EE_ADDRESS;
   \                     ??getTokenAddress_78: (+1)
   \   00000334   0xF64F 0x70FF      MOVW     R0,#+65535
   \                     ??getTokenAddress_80: (+1)
   \   00000338   0x4770             BX       LR               ;; return
    239          }
    240          

   \                                 In section .text, align 2, keep-with-next
    241          int8u getTokenSize(int16u creator)
    242          {
    243            #define DEFINETOKENS
    244            switch (creator) {
   \                     getTokenSize: (+1)
   \   00000000   0xF248 0x7123      MOVW     R1,#+34595
   \   00000004   0x1A40             SUBS     R0,R0,R1
   \   00000006   0xD00F             BEQ.N    ??getTokenSize_0
   \   00000008   0x1E40             SUBS     R0,R0,#+1
   \   0000000A   0xF000 0x80E0      BEQ.W    ??getTokenSize_1
   \   0000000E   0x1E40             SUBS     R0,R0,#+1
   \   00000010   0xF000 0x80DF      BEQ.W    ??getTokenSize_2
   \   00000014   0xF642 0x01DB      MOVW     R1,#+10459
   \   00000018   0x1A40             SUBS     R0,R0,R1
   \   0000001A   0xD005             BEQ.N    ??getTokenSize_0
   \   0000001C   0x1E40             SUBS     R0,R0,#+1
   \   0000001E   0x2801             CMP      R0,#+1
   \   00000020   0xF240 0x80D1      BLS.W    ??getTokenSize_3
   \   00000024   0x1E80             SUBS     R0,R0,#+2
   \   00000026   0x2805             CMP      R0,#+5
   \                     ??getTokenSize_0: (+1)
   \   00000028   0xF240 0x80CF      BLS.W    ??getTokenSize_4
   \   0000002C   0xF44F 0x7114      MOV      R1,#+592
   \   00000030   0x1A40             SUBS     R0,R0,R1
   \   00000032   0x2801             CMP      R0,#+1
   \   00000034   0xF240 0x80B5      BLS.W    ??getTokenSize_5
   \   00000038   0xF240 0x31E1      MOVW     R1,#+993
   \   0000003C   0x1A40             SUBS     R0,R0,R1
   \   0000003E   0xD038             BEQ.N    ??getTokenSize_6
   \   00000040   0xF640 0x310F      MOVW     R1,#+2831
   \   00000044   0x1A40             SUBS     R0,R0,R1
   \   00000046   0xD038             BEQ.N    ??getTokenSize_7
   \   00000048   0xF44F 0x7184      MOV      R1,#+264
   \   0000004C   0x1A40             SUBS     R0,R0,R1
   \   0000004E   0xD03A             BEQ.N    ??getTokenSize_8
   \   00000050   0x1EC0             SUBS     R0,R0,#+3
   \   00000052   0xD038             BEQ.N    ??getTokenSize_8
   \   00000054   0x38F4             SUBS     R0,R0,#+244
   \   00000056   0xD054             BEQ.N    ??getTokenSize_9
   \   00000058   0x1E40             SUBS     R0,R0,#+1
   \   0000005A   0xD02E             BEQ.N    ??getTokenSize_7
   \   0000005C   0x1E40             SUBS     R0,R0,#+1
   \   0000005E   0xF000 0x8090      BEQ.W    ??getTokenSize_10
   \   00000062   0x1E40             SUBS     R0,R0,#+1
   \   00000064   0xF000 0x8091      BEQ.W    ??getTokenSize_11
   \   00000068   0x3811             SUBS     R0,R0,#+17
   \   0000006A   0xD026             BEQ.N    ??getTokenSize_7
   \   0000006C   0xF44F 0x71FF      MOV      R1,#+510
   \   00000070   0x1A40             SUBS     R0,R0,R1
   \   00000072   0xD064             BEQ.N    ??getTokenSize_12
   \   00000074   0xF240 0x31EF      MOVW     R1,#+1007
   \   00000078   0x1A40             SUBS     R0,R0,R1
   \   0000007A   0xD06A             BEQ.N    ??getTokenSize_13
   \   0000007C   0x1E40             SUBS     R0,R0,#+1
   \   0000007E   0xD01C             BEQ.N    ??getTokenSize_7
   \   00000080   0xF240 0x410F      MOVW     R1,#+1039
   \   00000084   0x1A40             SUBS     R0,R0,R1
   \   00000086   0xD014             BEQ.N    ??getTokenSize_6
   \   00000088   0xF44F 0x713C      MOV      R1,#+752
   \   0000008C   0x1A40             SUBS     R0,R0,R1
   \   0000008E   0xD014             BEQ.N    ??getTokenSize_7
   \   00000090   0xF240 0x2102      MOVW     R1,#+514
   \   00000094   0x1A40             SUBS     R0,R0,R1
   \   00000096   0xD008             BEQ.N    ??getTokenSize_14
   \   00000098   0x38FD             SUBS     R0,R0,#+253
   \   0000009A   0xD014             BEQ.N    ??getTokenSize_8
   \   0000009C   0x1E40             SUBS     R0,R0,#+1
   \   0000009E   0xD00C             BEQ.N    ??getTokenSize_7
   \   000000A0   0x1EC0             SUBS     R0,R0,#+3
   \   000000A2   0xD00A             BEQ.N    ??getTokenSize_7
   \   000000A4   0xF640 0x51DD      MOVW     R1,#+3549
   \   000000A8   0x1A40             SUBS     R0,R0,R1
   \                     ??getTokenSize_14: (+1)
   \   000000AA   0xD078             BEQ.N    ??getTokenSize_15
   \   000000AC   0x1E40             SUBS     R0,R0,#+1
   \   000000AE   0xD070             BEQ.N    ??getTokenSize_16
   \   000000B0   0x1E40             SUBS     R0,R0,#+1
   \                     ??getTokenSize_6: (+1)
   \   000000B2   0xD070             BEQ.N    ??getTokenSize_17
   \   000000B4   0x1E40             SUBS     R0,R0,#+1
   \   000000B6   0xD070             BEQ.N    ??getTokenSize_18
   \   000000B8   0x1E40             SUBS     R0,R0,#+1
   \                     ??getTokenSize_7: (+1)
   \   000000BA   0xD072             BEQ.N    ??getTokenSize_5
   \   000000BC   0x383B             SUBS     R0,R0,#+59
   \   000000BE   0xD070             BEQ.N    ??getTokenSize_5
   \   000000C0   0x38AE             SUBS     R0,R0,#+174
   \   000000C2   0xD064             BEQ.N    ??getTokenSize_19
   \   000000C4   0x1E40             SUBS     R0,R0,#+1
   \                     ??getTokenSize_8: (+1)
   \   000000C6   0xD076             BEQ.N    ??getTokenSize_20
   \   000000C8   0x1E40             SUBS     R0,R0,#+1
   \   000000CA   0xD060             BEQ.N    ??getTokenSize_19
   \   000000CC   0x1E40             SUBS     R0,R0,#+1
   \   000000CE   0xD060             BEQ.N    ??getTokenSize_16
   \   000000D0   0x1E40             SUBS     R0,R0,#+1
   \   000000D2   0xD060             BEQ.N    ??getTokenSize_17
   \   000000D4   0x1E40             SUBS     R0,R0,#+1
   \   000000D6   0xD060             BEQ.N    ??getTokenSize_18
   \   000000D8   0x380B             SUBS     R0,R0,#+11
   \   000000DA   0xD060             BEQ.N    ??getTokenSize_15
   \   000000DC   0x1E40             SUBS     R0,R0,#+1
   \   000000DE   0xD060             BEQ.N    ??getTokenSize_5
   \   000000E0   0x382F             SUBS     R0,R0,#+47
   \   000000E2   0xD06C             BEQ.N    ??getTokenSize_21
   \   000000E4   0x1E40             SUBS     R0,R0,#+1
   \   000000E6   0xD06C             BEQ.N    ??getTokenSize_22
   \   000000E8   0x3812             SUBS     R0,R0,#+18
   \   000000EA   0xD058             BEQ.N    ??getTokenSize_15
   \   000000EC   0x3811             SUBS     R0,R0,#+17
   \   000000EE   0xD05A             BEQ.N    ??getTokenSize_23
   \   000000F0   0x38D1             SUBS     R0,R0,#+209
   \   000000F2   0xD050             BEQ.N    ??getTokenSize_17
   \   000000F4   0x382A             SUBS     R0,R0,#+42
   \   000000F6   0xD05E             BEQ.N    ??getTokenSize_20
   \   000000F8   0x38E7             SUBS     R0,R0,#+231
   \   000000FA   0xD058             BEQ.N    ??getTokenSize_24
   \   000000FC   0x381F             SUBS     R0,R0,#+31
   \   000000FE   0xD046             BEQ.N    ??getTokenSize_19
   \   00000100   0x388B             SUBS     R0,R0,#+139
   \                     ??getTokenSize_9: (+1)
   \   00000102   0xD056             BEQ.N    ??getTokenSize_25
   \   00000104   0x1E40             SUBS     R0,R0,#+1
   \   00000106   0xD056             BEQ.N    ??getTokenSize_20
   \   00000108   0x1E40             SUBS     R0,R0,#+1
   \   0000010A   0xD056             BEQ.N    ??getTokenSize_26
   \   0000010C   0x1E40             SUBS     R0,R0,#+1
   \   0000010E   0xD05C             BEQ.N    ??getTokenSize_4
   \   00000110   0x3842             SUBS     R0,R0,#+66
   \   00000112   0xD040             BEQ.N    ??getTokenSize_17
   \   00000114   0x381E             SUBS     R0,R0,#+30
   \   00000116   0xD042             BEQ.N    ??getTokenSize_15
   \   00000118   0xF44F 0x7180      MOV      R1,#+256
   \   0000011C   0x1A40             SUBS     R0,R0,R1
   \   0000011E   0xD040             BEQ.N    ??getTokenSize_5
   \   00000120   0x380C             SUBS     R0,R0,#+12
   \   00000122   0xD038             BEQ.N    ??getTokenSize_17
   \   00000124   0xF240 0x510A      MOVW     R1,#+1290
   \   00000128   0x1A40             SUBS     R0,R0,R1
   \   0000012A   0xD030             BEQ.N    ??getTokenSize_19
   \   0000012C   0xF44F 0x71FD      MOV      R1,#+506
   \   00000130   0x1A40             SUBS     R0,R0,R1
   \   00000132   0xD040             BEQ.N    ??getTokenSize_20
   \   00000134   0x38F1             SUBS     R0,R0,#+241
   \   00000136   0xD03E             BEQ.N    ??getTokenSize_20
   \   00000138   0xF44F 0x7100      MOV      R1,#+512
   \   0000013C   0x1A40             SUBS     R0,R0,R1
   \                     ??getTokenSize_12: (+1)
   \   0000013E   0xD022             BEQ.N    ??getTokenSize_27
   \   00000140   0xF44F 0x7104      MOV      R1,#+528
   \   00000144   0x1A40             SUBS     R0,R0,R1
   \   00000146   0xD02C             BEQ.N    ??getTokenSize_5
   \   00000148   0x1E80             SUBS     R0,R0,#+2
   \   0000014A   0xD02A             BEQ.N    ??getTokenSize_5
   \   0000014C   0xF44F 0x71E6      MOV      R1,#+460
   \   00000150   0x1A40             SUBS     R0,R0,R1
   \                     ??getTokenSize_13: (+1)
   \   00000152   0xD03E             BEQ.N    ??getTokenSize_2
   \   00000154   0x3820             SUBS     R0,R0,#+32
   \   00000156   0xD020             BEQ.N    ??getTokenSize_18
   \   00000158   0x1E40             SUBS     R0,R0,#+1
   \   0000015A   0xD022             BEQ.N    ??getTokenSize_5
   \   0000015C   0x1E40             SUBS     R0,R0,#+1
   \   0000015E   0xD012             BEQ.N    ??getTokenSize_27
   \   00000160   0x380A             SUBS     R0,R0,#+10
   \   00000162   0xD036             BEQ.N    ??getTokenSize_2
   \   00000164   0x1F80             SUBS     R0,R0,#+6
   \   00000166   0xD01C             BEQ.N    ??getTokenSize_5
   \   00000168   0xF240 0x2102      MOVW     R1,#+514
   \   0000016C   0x1A40             SUBS     R0,R0,R1
   \   0000016E   0xD018             BEQ.N    ??getTokenSize_5
   \   00000170   0xF640 0x018B      MOVW     R1,#+2187
   \   00000174   0x1A40             SUBS     R0,R0,R1
   \   00000176   0xD014             BEQ.N    ??getTokenSize_5
   \   00000178   0x3808             SUBS     R0,R0,#+8
   \   0000017A   0xD012             BEQ.N    ??getTokenSize_5
   \   0000017C   0x1F00             SUBS     R0,R0,#+4
   \   0000017E   0xD014             BEQ.N    ??getTokenSize_28
   \   00000180   0xE029             B.N      ??getTokenSize_29
    245              #define TOKEN_MFG TOKEN_DEF
    246              #define TOKEN_DEF(name,creator,iscnt,isidx,type,arraysize,...) \
    247                case creator: return sizeof(type);
    248              #include "hal/micro/cortexm3/token-manufacturing.h"
   \                     ??getTokenSize_10: (+1)
   \   00000182   0x2018             MOVS     R0,#+24
   \   00000184   0x4770             BX       LR
   \                     ??getTokenSize_27: (+1)
   \   00000186   0x2006             MOVS     R0,#+6
   \   00000188   0x4770             BX       LR
   \                     ??getTokenSize_11: (+1)
   \   0000018A   0x2094             MOVS     R0,#+148
   \   0000018C   0x4770             BX       LR
    249              #include "stack/config/token-stack.h"
   \                     ??getTokenSize_19: (+1)
   \   0000018E   0x2011             MOVS     R0,#+17
   \   00000190   0x4770             BX       LR
   \                     ??getTokenSize_16: (+1)
   \   00000192   0x201A             MOVS     R0,#+26
   \   00000194   0x4770             BX       LR
   \                     ??getTokenSize_17: (+1)
   \   00000196   0x2008             MOVS     R0,#+8
   \   00000198   0x4770             BX       LR
   \                     ??getTokenSize_18: (+1)
   \   0000019A   0x200A             MOVS     R0,#+10
   \   0000019C   0x4770             BX       LR
   \                     ??getTokenSize_15: (+1)
   \   0000019E   0x2004             MOVS     R0,#+4
   \   000001A0   0x4770             BX       LR
   \                     ??getTokenSize_5: (+1)
   \   000001A2   0x2002             MOVS     R0,#+2
   \   000001A4   0x4770             BX       LR
   \                     ??getTokenSize_23: (+1)
   \   000001A6   0x200D             MOVS     R0,#+13
   \   000001A8   0x4770             BX       LR
   \                     ??getTokenSize_28: (+1)
   \   000001AA   0x200B             MOVS     R0,#+11
   \   000001AC   0x4770             BX       LR
   \                     ??getTokenSize_24: (+1)
   \   000001AE   0x2019             MOVS     R0,#+25
   \   000001B0   0x4770             BX       LR
   \                     ??getTokenSize_25: (+1)
   \   000001B2   0x205C             MOVS     R0,#+92
   \   000001B4   0x4770             BX       LR
   \                     ??getTokenSize_20: (+1)
   \   000001B6   0x2010             MOVS     R0,#+16
   \   000001B8   0x4770             BX       LR
   \                     ??getTokenSize_26: (+1)
   \   000001BA   0x2028             MOVS     R0,#+40
   \   000001BC   0x4770             BX       LR
   \                     ??getTokenSize_21: (+1)
   \   000001BE   0x2012             MOVS     R0,#+18
   \   000001C0   0x4770             BX       LR
   \                     ??getTokenSize_22: (+1)
   \   000001C2   0x202A             MOVS     R0,#+42
   \   000001C4   0x4770             BX       LR
   \                     ??getTokenSize_3: (+1)
   \   000001C6   0x2021             MOVS     R0,#+33
   \   000001C8   0x4770             BX       LR
   \                     ??getTokenSize_4: (+1)
   \   000001CA   0x2001             MOVS     R0,#+1
   \   000001CC   0x4770             BX       LR
   \                     ??getTokenSize_1: (+1)
   \   000001CE   0x200C             MOVS     R0,#+12
   \   000001D0   0x4770             BX       LR
   \                     ??getTokenSize_2: (+1)
   \   000001D2   0x2014             MOVS     R0,#+20
   \   000001D4   0x4770             BX       LR
    250              #undef TOKEN_MFG
    251              #undef TOKEN_DEF
    252            default: {
    253            }
    254            };
    255            #undef DEFINETOKENS
    256            return 0;
   \                     ??getTokenSize_29: (+1)
   \   000001D6   0x2000             MOVS     R0,#+0
   \   000001D8   0x4770             BX       LR               ;; return
    257          }
    258          

   \                                 In section .text, align 2, keep-with-next
    259          int8u getTokenArraySize(int16u creator)
    260          {
    261            #define DEFINETOKENS
    262            switch (creator) {
   \                     getTokenArraySize: (+1)
   \   00000000   0xF248 0x7123      MOVW     R1,#+34595
   \   00000004   0x1A40             SUBS     R0,R0,R1
   \   00000006   0xD01A             BEQ.N    ??getTokenArraySize_0
   \   00000008   0x1E40             SUBS     R0,R0,#+1
   \   0000000A   0xF000 0x8094      BEQ.W    ??getTokenArraySize_1
   \   0000000E   0x1E40             SUBS     R0,R0,#+1
   \   00000010   0xD010             BEQ.N    ??getTokenArraySize_2
   \   00000012   0xF642 0x01DB      MOVW     R1,#+10459
   \   00000016   0x1A40             SUBS     R0,R0,R1
   \   00000018   0x2808             CMP      R0,#+8
   \   0000001A   0xBF82             ITTT     HI 
   \   0000001C   0xF240 0x2153      MOVWHI   R1,#+595
   \   00000020   0x1A40             SUBHI    R0,R0,R1
   \   00000022   0x2801             CMPHI    R0,#+1
   \   00000024   0xD910             BLS.N    ??getTokenArraySize_3
   \   00000026   0xF240 0x31E1      MOVW     R1,#+993
   \   0000002A   0x1A40             SUBS     R0,R0,R1
   \   0000002C   0xD007             BEQ.N    ??getTokenArraySize_0
   \   0000002E   0xF640 0x310F      MOVW     R1,#+2831
   \   00000032   0x1A40             SUBS     R0,R0,R1
   \                     ??getTokenArraySize_2: (+1)
   \   00000034   0xF000 0x8081      BEQ.W    ??getTokenArraySize_4
   \   00000038   0xF44F 0x7184      MOV      R1,#+264
   \   0000003C   0x1A40             SUBS     R0,R0,R1
   \                     ??getTokenArraySize_0: (+1)
   \   0000003E   0xD078             BEQ.N    ??getTokenArraySize_5
   \   00000040   0x1EC0             SUBS     R0,R0,#+3
   \   00000042   0xD076             BEQ.N    ??getTokenArraySize_5
   \   00000044   0x38F4             SUBS     R0,R0,#+244
   \   00000046   0x2803             CMP      R0,#+3
   \                     ??getTokenArraySize_3: (+1)
   \   00000048   0xD973             BLS.N    ??getTokenArraySize_5
   \   0000004A   0x3814             SUBS     R0,R0,#+20
   \   0000004C   0xD071             BEQ.N    ??getTokenArraySize_5
   \   0000004E   0xF44F 0x71FF      MOV      R1,#+510
   \   00000052   0x1A40             SUBS     R0,R0,R1
   \   00000054   0xD06D             BEQ.N    ??getTokenArraySize_5
   \   00000056   0xF240 0x31EF      MOVW     R1,#+1007
   \   0000005A   0x1A40             SUBS     R0,R0,R1
   \   0000005C   0x2801             CMP      R0,#+1
   \   0000005E   0xD968             BLS.N    ??getTokenArraySize_5
   \   00000060   0xF44F 0x6182      MOV      R1,#+1040
   \   00000064   0x1A40             SUBS     R0,R0,R1
   \   00000066   0xD064             BEQ.N    ??getTokenArraySize_5
   \   00000068   0xF44F 0x713C      MOV      R1,#+752
   \   0000006C   0x1A40             SUBS     R0,R0,R1
   \   0000006E   0xD060             BEQ.N    ??getTokenArraySize_5
   \   00000070   0xF240 0x2102      MOVW     R1,#+514
   \   00000074   0x1A40             SUBS     R0,R0,R1
   \   00000076   0xD056             BEQ.N    ??getTokenArraySize_6
   \   00000078   0x38FD             SUBS     R0,R0,#+253
   \   0000007A   0x2801             CMP      R0,#+1
   \   0000007C   0xD959             BLS.N    ??getTokenArraySize_5
   \   0000007E   0x1F00             SUBS     R0,R0,#+4
   \   00000080   0xD057             BEQ.N    ??getTokenArraySize_5
   \   00000082   0xF640 0x51DD      MOVW     R1,#+3549
   \   00000086   0x1A40             SUBS     R0,R0,R1
   \   00000088   0x2804             CMP      R0,#+4
   \   0000008A   0xD952             BLS.N    ??getTokenArraySize_5
   \   0000008C   0x383F             SUBS     R0,R0,#+63
   \   0000008E   0xD050             BEQ.N    ??getTokenArraySize_5
   \   00000090   0x38BE             SUBS     R0,R0,#+190
   \   00000092   0xD04E             BEQ.N    ??getTokenArraySize_5
   \   00000094   0x3830             SUBS     R0,R0,#+48
   \   00000096   0xD04C             BEQ.N    ??getTokenArraySize_5
   \   00000098   0x3813             SUBS     R0,R0,#+19
   \   0000009A   0xD04A             BEQ.N    ??getTokenArraySize_5
   \   0000009C   0x3811             SUBS     R0,R0,#+17
   \   0000009E   0xD044             BEQ.N    ??getTokenArraySize_7
   \   000000A0   0x38D1             SUBS     R0,R0,#+209
   \   000000A2   0xD046             BEQ.N    ??getTokenArraySize_5
   \   000000A4   0x382A             SUBS     R0,R0,#+42
   \   000000A6   0xD044             BEQ.N    ??getTokenArraySize_5
   \   000000A8   0xF44F 0x7183      MOV      R1,#+262
   \   000000AC   0x1A40             SUBS     R0,R0,R1
   \   000000AE   0xD040             BEQ.N    ??getTokenArraySize_5
   \   000000B0   0x388C             SUBS     R0,R0,#+140
   \   000000B2   0x2801             CMP      R0,#+1
   \   000000B4   0xD93D             BLS.N    ??getTokenArraySize_5
   \   000000B6   0x1E80             SUBS     R0,R0,#+2
   \   000000B8   0xD039             BEQ.N    ??getTokenArraySize_8
   \   000000BA   0x3842             SUBS     R0,R0,#+66
   \   000000BC   0xD039             BEQ.N    ??getTokenArraySize_5
   \   000000BE   0x381E             SUBS     R0,R0,#+30
   \   000000C0   0xD037             BEQ.N    ??getTokenArraySize_5
   \   000000C2   0xF44F 0x7180      MOV      R1,#+256
   \   000000C6   0x1A40             SUBS     R0,R0,R1
   \   000000C8   0xD033             BEQ.N    ??getTokenArraySize_5
   \   000000CA   0x380C             SUBS     R0,R0,#+12
   \   000000CC   0xD031             BEQ.N    ??getTokenArraySize_5
   \   000000CE   0xF240 0x510A      MOVW     R1,#+1290
   \   000000D2   0x1A40             SUBS     R0,R0,R1
   \   000000D4   0xD02D             BEQ.N    ??getTokenArraySize_5
   \   000000D6   0xF44F 0x71FD      MOV      R1,#+506
   \   000000DA   0x1A40             SUBS     R0,R0,R1
   \   000000DC   0xD029             BEQ.N    ??getTokenArraySize_5
   \   000000DE   0x38F1             SUBS     R0,R0,#+241
   \   000000E0   0xD027             BEQ.N    ??getTokenArraySize_5
   \   000000E2   0xF44F 0x7100      MOV      R1,#+512
   \   000000E6   0x1A40             SUBS     R0,R0,R1
   \   000000E8   0xD023             BEQ.N    ??getTokenArraySize_5
   \   000000EA   0xF44F 0x7104      MOV      R1,#+528
   \   000000EE   0x1A40             SUBS     R0,R0,R1
   \   000000F0   0xD01F             BEQ.N    ??getTokenArraySize_5
   \   000000F2   0x1E80             SUBS     R0,R0,#+2
   \   000000F4   0xD01D             BEQ.N    ??getTokenArraySize_5
   \   000000F6   0xF44F 0x71E6      MOV      R1,#+460
   \   000000FA   0x1A40             SUBS     R0,R0,R1
   \   000000FC   0xD019             BEQ.N    ??getTokenArraySize_5
   \   000000FE   0x3820             SUBS     R0,R0,#+32
   \   00000100   0x2802             CMP      R0,#+2
   \   00000102   0xD916             BLS.N    ??getTokenArraySize_5
   \   00000104   0x380C             SUBS     R0,R0,#+12
   \   00000106   0xD014             BEQ.N    ??getTokenArraySize_5
   \   00000108   0x1F80             SUBS     R0,R0,#+6
   \   0000010A   0xD012             BEQ.N    ??getTokenArraySize_5
   \   0000010C   0xF240 0x2102      MOVW     R1,#+514
   \   00000110   0x1A40             SUBS     R0,R0,R1
   \   00000112   0xD00E             BEQ.N    ??getTokenArraySize_5
   \   00000114   0xF640 0x018B      MOVW     R1,#+2187
   \   00000118   0x1A40             SUBS     R0,R0,R1
   \   0000011A   0xD00A             BEQ.N    ??getTokenArraySize_5
   \   0000011C   0x3808             SUBS     R0,R0,#+8
   \   0000011E   0xD008             BEQ.N    ??getTokenArraySize_5
   \   00000120   0x1F00             SUBS     R0,R0,#+4
   \   00000122   0xD004             BEQ.N    ??getTokenArraySize_8
   \   00000124   0xE00B             B.N      ??getTokenArraySize_9
    263              #define TOKEN_MFG TOKEN_DEF
    264              #define TOKEN_DEF(name,creator,iscnt,isidx,type,arraysize,...) \
    265                case creator: return arraysize;
    266              #include "hal/micro/cortexm3/token-manufacturing.h"
    267              #include "stack/config/token-stack.h"
   \                     ??getTokenArraySize_6: (+1)
   \   00000126   0x2010             MOVS     R0,#+16
   \   00000128   0x4770             BX       LR
   \                     ??getTokenArraySize_7: (+1)
   \   0000012A   0x200A             MOVS     R0,#+10
   \   0000012C   0x4770             BX       LR
   \                     ??getTokenArraySize_8: (+1)
   \   0000012E   0x2006             MOVS     R0,#+6
   \   00000130   0x4770             BX       LR
   \                     ??getTokenArraySize_5: (+1)
   \   00000132   0x2001             MOVS     R0,#+1
   \   00000134   0x4770             BX       LR
   \                     ??getTokenArraySize_1: (+1)
   \   00000136   0x2005             MOVS     R0,#+5
   \   00000138   0x4770             BX       LR
   \                     ??getTokenArraySize_4: (+1)
   \   0000013A   0x2014             MOVS     R0,#+20
   \   0000013C   0x4770             BX       LR
    268              #undef TOKEN_MFG
    269              #undef TOKEN_DEF
    270            default: {
    271            }
    272            };
    273            #undef DEFINETOKENS
    274            return 0;
   \                     ??getTokenArraySize_9: (+1)
   \   0000013E   0x2000             MOVS     R0,#+0
   \   00000140   0x4770             BX       LR               ;; return
    275          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     tokensActive

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     TOKEN_MFG_FIB_VERSION

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x08040000         DC32     0x8040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     TOKEN_MFG_CHIP_DATA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     TOKEN_MFG_PART_DATA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     TOKEN_MFG_TESTER_DATA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     TOKEN_MFG_EMBER_EUI_64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     TOKEN_MFG_ANALOG_TRIM_NORMAL

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   0x........         DC32     TOKEN_MFG_ANALOG_TRIM_BOOST

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   0x........         DC32     TOKEN_MFG_ANALOG_TRIM_BOTH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   0x........         DC32     TOKEN_MFG_REG_TRIM

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   0x........         DC32     TOKEN_MFG_1V8_REG_VOLTAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   0x........         DC32     TOKEN_MFG_VREF_VOLTAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \   00000000   0x........         DC32     TOKEN_MFG_TEMP_CAL

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \   00000000   0x........         DC32     TOKEN_MFG_TEST_TEMP

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \   00000000   0x........         DC32     TOKEN_MFG_FIB_CHECKSUM

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \   00000000   0x........         DC32     TOKEN_MFG_FIB_OBS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \   00000000   0x........         DC32     TOKEN_MFG_CIB_OBS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \   00000000   0x........         DC32     TOKEN_MFG_CUSTOM_VERSION

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_19:
   \   00000000   0x........         DC32     TOKEN_MFG_CUSTOM_EUI_64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_20:
   \   00000000   0x........         DC32     TOKEN_MFG_STRING

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_21:
   \   00000000   0x........         DC32     TOKEN_MFG_BOARD_NAME

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_22:
   \   00000000   0x........         DC32     TOKEN_MFG_MANUF_ID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_23:
   \   00000000   0x........         DC32     TOKEN_MFG_PHY_CONFIG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_24:
   \   00000000   0x........         DC32     TOKEN_MFG_BOOTLOAD_AES_KEY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_25:
   \   00000000   0x........         DC32     TOKEN_MFG_EZSP_STORAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_26:
   \   00000000   0x........         DC32     TOKEN_MFG_ASH_CONFIG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_27:
   \   00000000   0x........         DC32     TOKEN_MFG_CBKE_DATA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_28:
   \   00000000   0x........         DC32     TOKEN_MFG_INSTALLATION_CODE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_29:
   \   00000000   0x........         DC32     TOKEN_MFG_OSC24M_BIAS_TRIM

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_30:
   \   00000000   0x........         DC32     TOKEN_MFG_SYNTH_FREQ_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_31:
   \   00000000   0x........         DC32     TOKEN_MFG_OSC24M_SETTLE_DELAY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_32:
   \   00000000   0x........         DC32     TOKEN_MFG_SECURITY_CONFIG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_33:
   \   00000000   0x........         DC32     TOKEN_MFG_CCA_THRESHOLD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_34:
   \   00000000   0x........         DC32     TOKEN_MFG_SECURE_BOOTLOADER_KEY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_35:
   \   00000000   0x........         DC32     TOKEN_MFG_ETHERNET_ADDRESS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_36:
   \   00000000   0x........         DC32     TOKEN_MFG_CBKE_283K1_DATA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_37:
   \   00000000   0x........         DC32     TOKEN_MFG_EUI_64

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant {510, 765}>`:
   \   00000000   0x01FE 0x02FD      DC16 510, 765

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "token.c">`:
   \   00000000   0x74 0x6F          DC8 "token.c"
   \              0x6B 0x65    
   \              0x6E 0x2E    
   \              0x63 0x00    
    276          
    277          #endif //EMBER_TEST
    278          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   getTokenAddress
       0   getTokenArraySize
       0   getTokenSize
       8   halInternalGetIdxTokenPtr
         0   -> halInternalSimEeGetPtr
       8   halInternalGetTokenData
         0   -> halInternalGetMfgTokenData
         0   -> halInternalSimEeGetData
       0   halInternalIncrementCounterToken
         0   -> halInternalSimEeIncrementCounter
      24   halInternalSetTokenData
         0   -> halInternalAssertFailed
        24   -> halInternalAssertFailed
        24   -> halInternalSimEeSetData
      24   halStackInitTokens
        24   -> halInternalGetTokenData
        24   -> halInternalSimEeStartup


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant "token.c">
       4  ?<Constant {510, 765}>
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_19
       4  ??DataTable7_2
       4  ??DataTable7_20
       4  ??DataTable7_21
       4  ??DataTable7_22
       4  ??DataTable7_23
       4  ??DataTable7_24
       4  ??DataTable7_25
       4  ??DataTable7_26
       4  ??DataTable7_27
       4  ??DataTable7_28
       4  ??DataTable7_29
       4  ??DataTable7_3
       4  ??DataTable7_30
       4  ??DataTable7_31
       4  ??DataTable7_32
       4  ??DataTable7_33
       4  ??DataTable7_34
       4  ??DataTable7_35
       4  ??DataTable7_36
       4  ??DataTable7_37
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
     826  getTokenAddress
     322  getTokenArraySize
     474  getTokenSize
      44  halInternalGetIdxTokenPtr
      34  halInternalGetTokenData
      16  halInternalIncrementCounterToken
      74  halInternalSetTokenData
     136  halStackInitTokens
       2  tokensActive
          simEeSetDataActiveSemaphore

 
     2 bytes in section .bss
 2 090 bytes in section .text
 
 2 090 bytes of CODE memory
     2 bytes of DATA memory

Errors: none
Warnings: none
