###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        22/Oct/2015  09:33:34
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\framework\plugin-soc\idle-sleep\idle-sleep.c
#    Command line =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\framework\plugin-soc\idle-sleep\idle-sleep.c
#        -D DIMMER -D NULL_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D
#        CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/ZigbeeRoute/ZigbeeRoute_endpoint_config.h\""
#        -D "BOARD_HEADER=\"app\builder\ZigbeeRoute\ZigbeeRoute_board.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute_tokens.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "ZA_GENERATED_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute.h\"" -D
#        "__SOURCEFILE__=\"idle-sleep.c\"" -lC
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\dim\List\
#        --diag_suppress Pa050 -o
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\dim\Obj\ --debug
#        --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\framework\plugin-soc\idle-sleep\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\ -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\framework\include\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\util\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\stack\
#        -I E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\
#        -I
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\dim\List\idle-sleep.lst
#    Object file  =  
#        E:\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\dim\Obj\idle-sleep.o
#
###############################################################################

E:\Zigbee\EmberZNet5.6.0-GA\app\framework\plugin-soc\idle-sleep\idle-sleep.c
      1          // Copyright 2013 Silicon Laboratories, Inc.
      2          
      3          #include "app/framework/include/af.h"
      4          #include "app/framework/util/af-event.h"
      5          #include "idle-sleep.h"
      6          
      7          #ifdef EZSP_HOST
      8            #define MAX_SLEEP_VALUE_MS MAX_TIMER_MILLISECONDS_HOST
      9          #else
     10            #define MAX_SLEEP_VALUE_MS 0xFFFFFFFFUL
     11          #endif
     12          
     13          #ifdef EMBER_AF_PLUGIN_IDLE_SLEEP_STAY_AWAKE_WHEN_NOT_JOINED
     14            #define STAY_AWAKE_WHEN_NOT_JOINED_DEFAULT TRUE
     15          #else
     16            #define STAY_AWAKE_WHEN_NOT_JOINED_DEFAULT FALSE
     17          #endif

   \                                 In section .data, align 1
     18          boolean emAfStayAwakeWhenNotJoined = STAY_AWAKE_WHEN_NOT_JOINED_DEFAULT;
   \                     emAfStayAwakeWhenNotJoined:
   \   00000000   0x01               DC8 1
     19          

   \                                 In section .bss, align 1
     20          boolean emAfForceEndDeviceToStayAwake = FALSE;
   \                     emAfForceEndDeviceToStayAwake:
   \   00000000                      DS8 1
     21          
     22          // NO PRINTFS.  This may be called in ISR context.

   \                                 In section .text, align 2, keep-with-next
     23          void emberAfForceEndDeviceToStayAwake(boolean stayAwake)
     24          {
     25            emAfForceEndDeviceToStayAwake = stayAwake;
   \                     emberAfForceEndDeviceToStayAwake: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable4
   \   00000002   0x7008             STRB     R0,[R1, #+0]
     26          }
   \   00000004   0x4770             BX       LR               ;; return
     27          
     28          #ifdef EMBER_AF_PLUGIN_IDLE_SLEEP_USE_BUTTONS
     29          void emberAfHalButtonIsrCallback(int8u button, int8u state)
     30          {
     31            if (state == BUTTON_PRESSED) {
     32              emberAfForceEndDeviceToStayAwake(button == BUTTON0);
     33            }
     34          }
     35          #endif
     36          
     37          #ifdef EMBER_TEST
     38            extern boolean doingSerialTx[];
     39            #define simulatorDoingSerialTx(port) doingSerialTx[port]
     40          #else
     41            #define simulatorDoingSerialTx(port) FALSE
     42          #endif
     43          

   \                                 In section .text, align 2, keep-with-next
     44          boolean emAfOkToIdleOrSleep(void)
     45          {
   \                     emAfOkToIdleOrSleep: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     46            int8u i;
     47          
     48            if (emAfForceEndDeviceToStayAwake) {
   \   00000002   0x....             LDR.N    R0,??DataTable4
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xBB30             CBNZ.N   R0,??emAfOkToIdleOrSleep_0
     49              return FALSE;
     50            }
     51          
     52            if (emAfStayAwakeWhenNotJoined) {
   \   00000008   0x....             LDR.N    R0,??DataTable4_1
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0xB160             CBZ.N    R0,??emAfOkToIdleOrSleep_1
     53              boolean awake = FALSE;
   \   0000000E   0x2400             MOVS     R4,#+0
     54              for (i = 0; !awake && i < EMBER_SUPPORTED_NETWORKS; i++) {
     55                if (emberAfPushNetworkIndex(i) == EMBER_SUCCESS) {
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       emberAfPushNetworkIndex
   \   00000016   0xB938             CBNZ.N   R0,??emAfOkToIdleOrSleep_1
     56                  awake = (emberAfNetworkState() != EMBER_JOINED_NETWORK);
   \   00000018   0x.... 0x....      BL       emberAfNetworkState
   \   0000001C   0x2802             CMP      R0,#+2
   \   0000001E   0xBF18             IT       NE 
   \   00000020   0x2401             MOVNE    R4,#+1
     57                  emberAfPopNetworkIndex();
   \   00000022   0x.... 0x....      BL       emberAfPopNetworkIndex
     58                }
     59              }
     60              if (awake) {
   \   00000026   0xB9B4             CBNZ.N   R4,??emAfOkToIdleOrSleep_0
     61                return FALSE;
     62              }
     63            }
     64          
     65          #ifdef EM_NUM_SERIAL_PORTS
     66            for (i = 0; i < EM_NUM_SERIAL_PORTS; i++) {
   \                     ??emAfOkToIdleOrSleep_1: (+1)
   \   00000028   0x2400             MOVS     R4,#+0
     67              if (!emberSerialUnused(i)
     68                  && (emberSerialReadAvailable(i) != 0
     69                      || emberSerialWriteUsed(i) != 0
     70                      || simulatorDoingSerialTx(i))) {
   \                     ??emAfOkToIdleOrSleep_2: (+1)
   \   0000002A   0x4620             MOV      R0,R4
   \   0000002C   0x.... 0x....      BL       emberSerialUnused
   \   00000030   0xB938             CBNZ.N   R0,??emAfOkToIdleOrSleep_3
   \   00000032   0x4620             MOV      R0,R4
   \   00000034   0x.... 0x....      BL       emberSerialReadAvailable
   \   00000038   0xB968             CBNZ.N   R0,??emAfOkToIdleOrSleep_0
   \   0000003A   0x4620             MOV      R0,R4
   \   0000003C   0x.... 0x....      BL       emberSerialWriteUsed
   \   00000040   0xB948             CBNZ.N   R0,??emAfOkToIdleOrSleep_0
     71                return FALSE;
     72              }
     73            }
   \                     ??emAfOkToIdleOrSleep_3: (+1)
   \   00000042   0x1C64             ADDS     R4,R4,#+1
   \   00000044   0xB2E4             UXTB     R4,R4
   \   00000046   0x2C04             CMP      R4,#+4
   \   00000048   0xDBEF             BLT.N    ??emAfOkToIdleOrSleep_2
     74          #else
     75            if (!emberSerialUnused(APP_SERIAL)
     76                && (emberSerialReadAvailable(APP_SERIAL) != 0
     77                    || emberSerialWriteUsed(APP_SERIAL) != 0
     78                    || simulatorDoingSerialTx(APP_SERIAL))) {
     79              return FALSE;
     80            }
     81          #endif
     82          
     83            return (emberAfGetCurrentSleepControlCallback() != EMBER_AF_STAY_AWAKE);
   \   0000004A   0x.... 0x....      BL       emberAfGetCurrentSleepControlCallback
   \   0000004E   0x2802             CMP      R0,#+2
   \   00000050   0xD001             BEQ.N    ??emAfOkToIdleOrSleep_0
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0xBD10             POP      {R4,PC}
   \                     ??emAfOkToIdleOrSleep_0: (+1)
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0xBD10             POP      {R4,PC}          ;; return
     84          }
     85          
     86          

   \                                 In section .bss, align 1
     87          static EmberAfEventSleepControl defaultSleepControl = EMBER_AF_OK_TO_SLEEP;
   \                     defaultSleepControl:
   \   00000000                      DS8 1
     88          

   \                                 In section .text, align 2, keep-with-next
     89          EmberAfEventSleepControl emberAfGetCurrentSleepControlCallback(void)
     90          {
   \                     emberAfGetCurrentSleepControlCallback: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     91            EmberAfEventSleepControl sleepControl = defaultSleepControl;
   \   00000002   0x....             LDR.N    R0,??DataTable4_2
     92          #ifdef EMBER_AF_GENERATED_EVENT_CONTEXT
     93            int8u i;
     94            for (i = 0; i < emAfAppEventContextLength; i++) {
   \   00000004   0x....             LDR.N    R2,??DataTable4_3
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0xE00B             B.N      ??emberAfGetCurrentSleepControlCallback_0
     95              EmberAfEventContext *context = &emAfAppEventContext[i];
   \                     ??emberAfGetCurrentSleepControlCallback_1: (+1)
   \   0000000C   0xB2C9             UXTB     R1,R1
   \   0000000E   0x230C             MOVS     R3,#+12
   \   00000010   0xFB03 0x2301      MLA      R3,R3,R1,R2
     96              if (emberEventControlGetActive(*context->eventControl)
     97                  && sleepControl < context->sleepControl) {
   \   00000014   0x689C             LDR      R4,[R3, #+8]
   \   00000016   0x7824             LDRB     R4,[R4, #+0]
   \   00000018   0xB11C             CBZ.N    R4,??emberAfGetCurrentSleepControlCallback_2
   \   0000001A   0x799C             LDRB     R4,[R3, #+6]
   \   0000001C   0x42A0             CMP      R0,R4
   \   0000001E   0xBF38             IT       CC 
   \   00000020   0x4620             MOVCC    R0,R4
     98                sleepControl = context->sleepControl;
     99              }
    100            }
   \                     ??emberAfGetCurrentSleepControlCallback_2: (+1)
   \   00000022   0x1C49             ADDS     R1,R1,#+1
   \                     ??emberAfGetCurrentSleepControlCallback_0: (+1)
   \   00000024   0x....             LDR.N    R4,??DataTable4_4
   \   00000026   0x8824             LDRH     R4,[R4, #+0]
   \   00000028   0xB2CB             UXTB     R3,R1
   \   0000002A   0x42A3             CMP      R3,R4
   \   0000002C   0xD3EE             BCC.N    ??emberAfGetCurrentSleepControlCallback_1
    101          #endif
    102            return sleepControl;
   \   0000002E   0xBD10             POP      {R4,PC}          ;; return
    103          }
    104          

   \                                 In section .text, align 2, keep-with-next
    105          EmberAfEventSleepControl emberAfGetDefaultSleepControlCallback(void)
    106          {
    107            return defaultSleepControl;
   \                     emberAfGetDefaultSleepControlCallback: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_2
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x4770             BX       LR               ;; return
    108          }
    109          

   \                                 In section .text, align 2, keep-with-next
    110          void emberAfSetDefaultSleepControlCallback(EmberAfEventSleepControl sleepControl)
    111          {
    112            defaultSleepControl = sleepControl;
   \                     emberAfSetDefaultSleepControlCallback: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable4_2
   \   00000002   0x7008             STRB     R0,[R1, #+0]
    113          }
   \   00000004   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     emAfForceEndDeviceToStayAwake

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     emAfStayAwakeWhenNotJoined

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     defaultSleepControl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     emAfAppEventContext

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     emAfAppEventContextLength

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   emAfOkToIdleOrSleep
         8   -> emberAfGetCurrentSleepControlCallback
         8   -> emberAfNetworkState
         8   -> emberAfPopNetworkIndex
         8   -> emberAfPushNetworkIndex
         8   -> emberSerialReadAvailable
         8   -> emberSerialUnused
         8   -> emberSerialWriteUsed
       0   emberAfForceEndDeviceToStayAwake
       8   emberAfGetCurrentSleepControlCallback
       0   emberAfGetDefaultSleepControlCallback
       0   emberAfSetDefaultSleepControlCallback


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       1  defaultSleepControl
       1  emAfForceEndDeviceToStayAwake
      90  emAfOkToIdleOrSleep
       1  emAfStayAwakeWhenNotJoined
       6  emberAfForceEndDeviceToStayAwake
      48  emberAfGetCurrentSleepControlCallback
       6  emberAfGetDefaultSleepControlCallback
       6  emberAfSetDefaultSleepControlCallback

 
   2 bytes in section .bss
   1 byte  in section .data
 176 bytes in section .text
 
 176 bytes of CODE memory
   3 bytes of DATA memory

Errors: none
Warnings: none
