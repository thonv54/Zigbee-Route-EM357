###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        18/Apr/2016  13:02:00
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\ZigbeeRoute_callbacks.c
#    Command line =  
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\ZigbeeRoute_callbacks.c"
#        -D SWITCH_1_BUTTON -D NULL_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D
#        CORTEXM3_EM357 -D PHY_EM3XX -D
#        "APPLICATION_TOKEN_HEADER=\"app/framework/util/tokens.h\"" -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"app/builder/ZigbeeRoute/ZigbeeRoute_endpoint_config.h\""
#        -D "BOARD_HEADER=\"app\builder\ZigbeeRoute\ZigbeeRoute_board.h\"" -D
#        "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute_tokens.h\""
#        -D "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "ZA_GENERATED_HEADER=\"app/builder/ZigbeeRoute/ZigbeeRoute.h\"" -D
#        "__SOURCEFILE__=\"ZigbeeRoute_callbacks.c\"" -lC "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\1
#        nut\List\" --diag_suppress Pa050 -o "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\1
#        nut\Obj\" --debug --endian=little --cpu=Cortex-M3
#        --no_path_in_file_macros --separate_cluster_for_initialized_variables
#        -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\" -I
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\" -I
#        "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\framework\include\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\app\util\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\stack\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\"
#        -I "D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\..\..\..\hal\..\"
#        -Ohz --use_c++_inline
#    List file    =  
#        D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\1
#        nut\List\ZigbeeRoute_callbacks.lst
#    Object file  =  
#        D:\Work
#        Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\1
#        nut\Obj\ZigbeeRoute_callbacks.o
#
###############################################################################

D:\Work Space\Silabs\Zigbee\EmberZNet5.6.0-GA\app\builder\ZigbeeRoute\ZigbeeRoute_callbacks.c
      1          //
      2          
      3          // This callback file is created for your convenience. You may add application
      4          // code to this file. If you regenerate this file over a previous version, the
      5          // previous version will be overwritten and any code you have added will be
      6          // lost.
      7          
      8          #include "app/framework/include/af.h"
      9          #include "task.h"
     10          #include "ButtonExe.h"
     11          #include "UART_task.h"
     12          #include "app/util/zigbee-framework/zigbee-device-common.h"
     13          
     14          

   \                                 In section .bss, align 1
     15          int8u StartUpFlag = 0;
   \                     StartUpFlag:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
     16          int8u HcDefaultEP = 0x01;
   \                     HcDefaultEP:
   \   00000000   0x01               DC8 1
     17          
     18          //------------------Khai bao bien--------------------//
     19          
     20          
     21          //-----------------Xu li ham con----------------------//
     22          
     23          
     24           //---------------------Call Back Funtion------------------------------//
     25          
     26          
     27          
     28          
     29          
     30          
     31          //-------------------On/off Cluster Server Attribute Changed------------//
     32          
     33          /** @brief On/off Cluster Server Attribute Changed
     34           *
     35           * Server Attribute Changed
     36           *
     37           * @param endpoint Endpoint that is being initialized  Ver.: always
     38           * @param attributeId Attribute that changed  Ver.: always
     39           */

   \                                 In section .text, align 2, keep-with-next
     40          void emberAfOnOffClusterServerAttributeChangedCallback(int8u endpoint,
     41          								EmberAfAttributeId attributeId) {
     42          
     43          }
   \                     emberAfOnOffClusterServerAttributeChangedCallback: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     44          //-----------------End On/off Cluster Server Attribute Changed-----------------//
     45          
     46          /** @brief Basic Cluster Reset To Factory Defaults
     47           *
     48           *
     49           */

   \                                 In section .text, align 2, keep-with-next
     50          boolean emberAfBasicClusterResetToFactoryDefaultsCallback(void)
     51          {
     52            return FALSE;
   \                     emberAfBasicClusterResetToFactoryDefaultsCallback: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
     53          }
     54          /** @brief Pre ZDO Message Received
     55           *
     56           * This function passes the application an incoming ZDO message and gives the
     57           * appictation the opportunity to handle it. By default, this callback returns
     58           * FALSE indicating that the incoming ZDO message has not been handled and
     59           * should be handled by the Application Framework.
     60           *
     61           * @param emberNodeId   Ver.: always
     62           * @param apsFrame   Ver.: always
     63           * @param message   Ver.: always
     64           * @param length   Ver.: always
     65           */

   \                                 In section .text, align 2, keep-with-next
     66          boolean emberAfPreZDOMessageReceivedCallback(EmberNodeId emberNodeId,
     67                                                       EmberApsFrame* apsFrame,
     68                                                       int8u* message,
     69                                                       int16u length)
     70          {
   \                     emberAfPreZDOMessageReceivedCallback: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
     71          	if (apsFrame->clusterId == ACTIVE_ENDPOINTS_RESPONSE) {
   \   00000002   0x8848             LDRH     R0,[R1, #+2]
   \   00000004   0xF248 0x0105      MOVW     R1,#+32773
   \   00000008   0x4614             MOV      R4,R2
   \   0000000A   0x4288             CMP      R0,R1
   \   0000000C   0xD10F             BNE.N    ??emberAfPreZDOMessageReceivedCallback_0
     72          
     73             		int8u NumberOfEndPoint;
     74          		NumberOfEndPoint = message[4];
   \   0000000E   0x7925             LDRB     R5,[R4, #+4]
     75          		int8u i;
     76          		for(i=0;i<NumberOfEndPoint;i++){
   \   00000010   0x2600             MOVS     R6,#+0
   \   00000012   0xE007             B.N      ??emberAfPreZDOMessageReceivedCallback_1
     77          			emberSimpleDescriptorRequest(0x0000,
     78                                                   message[5+i],
     79                                                   EMBER_AF_DEFAULT_APS_OPTIONS | 0x0040);
   \                     ??emberAfPreZDOMessageReceivedCallback_2: (+1)
   \   00000014   0x1930             ADDS     R0,R6,R4
   \   00000016   0xF44F 0x528A      MOV      R2,#+4416
   \   0000001A   0x7941             LDRB     R1,[R0, #+5]
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x.... 0x....      BL       emberSimpleDescriptorRequest
     80          		}
   \   00000022   0x1C76             ADDS     R6,R6,#+1
   \                     ??emberAfPreZDOMessageReceivedCallback_1: (+1)
   \   00000024   0xB2F6             UXTB     R6,R6
   \   00000026   0x42AE             CMP      R6,R5
   \   00000028   0xDBF4             BLT.N    ??emberAfPreZDOMessageReceivedCallback_2
     81          
     82          		return TRUE;
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0xBD70             POP      {R4-R6,PC}
     83          	}
     84          	else if(apsFrame->clusterId == SIMPLE_DESCRIPTOR_RESPONSE){
   \                     ??emberAfPreZDOMessageReceivedCallback_0: (+1)
   \   0000002E   0xF248 0x0104      MOVW     R1,#+32772
   \   00000032   0x4288             CMP      R0,R1
   \   00000034   0xBF01             ITTTT    EQ 
     85          		int8u HcEndPoint;
     86          		int16u HcApplicationProfileId;
     87          		int16u HcApplicationDeviceId;
                 		       ^
Warning[Pe550]: variable "HcApplicationDeviceId" was set but never used
     88          		HcEndPoint = message[5];
     89          		HcApplicationProfileId = (message[7]<<8) | message[6];
     90          		HcApplicationDeviceId  = (message[9]<<8) | message[8];
     91          		if (HcApplicationProfileId == HA_PROFILE_ID){
   \   00000036   0x79E0             LDRBEQ   R0,[R4, #+7]
   \   00000038   0x79A1             LDRBEQ   R1,[R4, #+6]
   \   0000003A   0xEA41 0x2000      ORREQ    R0,R1,R0, LSL #+8
   \   0000003E   0xF5B0 0x7F82      CMPEQ    R0,#+260
   \   00000042   0xD102             BNE.N    ??emberAfPreZDOMessageReceivedCallback_3
     92          			HcDefaultEP =   HcEndPoint;
   \   00000044   0x7960             LDRB     R0,[R4, #+5]
   \   00000046   0x....             LDR.N    R1,??DataTable0
   \   00000048   0x7008             STRB     R0,[R1, #+0]
     93          //			emberAfFillCommandGlobalClientToServerReadAttributes(ZCL_BASIC_CLUSTER_ID,
     94          //                                                             ZCL_MANUFACTURER_NAME_ATTRIBUTE_ID,
     95          //                                                             32);
     96          //			emberAfSetCommandEndpoints(1,HcEndPoint);
     97          //			emberAfSendCommandUnicast(EMBER_OUTGOING_DIRECT, 0x0000);
     98          		}
     99          	}
    100          	return FALSE;
   \                     ??emberAfPreZDOMessageReceivedCallback_3: (+1)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0xBD70             POP      {R4-R6,PC}       ;; return
    101          
    102          }

   \                                 In section .text, align 2, keep-with-next
    103          void GetHcActiveEndPoint(void){
    104          	emberActiveEndpointsRequest(0x000,EMBER_AF_DEFAULT_APS_OPTIONS | 0x0040);
   \                     GetHcActiveEndPoint: (+1)
   \   00000000   0xF44F 0x528A      MOV      R2,#+4416
   \   00000004   0x2105             MOVS     R1,#+5
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      B.W      emberSendZigDevRequestTarget
    105          }
    106          
    107          
    108          /** @brief Main Init
    109           *
    110           * This function is called from the application's main function. It gives the
    111           * application a chance to do any initialization required at system startup. Any
    112           * code that you would normally put into the top of the application's main()
    113           * routine should be put into this function.
    114                  Note: No callback in the
    115           * Application Framework is associated with resource cleanup. If you are
    116           * implementing your application on a Unix host where resource cleanup is a
    117           * consideration, we expect that you will use the standard Posix system calls,
    118           * including the use of atexit() and handlers for signals such as SIGTERM,
    119           * SIGINT, SIGCHLD, SIGPIPE and so on. If you use the signal() function to
    120           * register your signal handler, please mind the returned value which may be an
    121           * Application Framework function. If the return value is non-null, please make
    122           * sure that you call the returned function from your handler to avoid negating
    123           * the resource cleanup of the Application Framework itself.
    124           *
    125           */

   \                                 In section .text, align 2, keep-with-next
    126          void emberAfMainInitCallback(void)
    127          {
   \                     emberAfMainInitCallback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    128          	CallButtonDetectTask();
   \   00000002   0x.... 0x....      BL       CallButtonDetectTask
    129          	//always send and check MC ready after reset
    130          	UartSendCheckMcReady();
   \   00000006   0xE8BD 0x4001      POP      {R0,LR}
   \   0000000A   0x.... 0x....      B.W      UartSendCheckMcReady
    131          
    132          }
    133          
    134          
    135          /** @brief Main Tick
    136           *
    137           * Whenever main application tick is called, this callback will be called at the
    138           * end of the main tick execution.
    139           */
    140          
    141          
    142          

   \                                 In section .text, align 2, keep-with-next
    143          void emberAfMainTickCallback(void)
    144          {
   \                     emberAfMainTickCallback: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    145          		UartScanCommand();
   \   00000002   0x.... 0x....      BL       UartScanCommand
    146          		UartSendCommand();
   \   00000006   0x.... 0x....      BL       UartSendCommand
    147          		TaskRun();
   \   0000000A   0xE8BD 0x4001      POP      {R0,LR}
   \   0000000E   0x.... 0x....      B.W      TaskRun
    148          
    149          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     HcDefaultEP

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   GetHcActiveEndPoint
         0   -> emberSendZigDevRequestTarget
       0   emberAfBasicClusterResetToFactoryDefaultsCallback
       8   emberAfMainInitCallback
         8   -> CallButtonDetectTask
         0   -> UartSendCheckMcReady
       8   emberAfMainTickCallback
         0   -> TaskRun
         8   -> UartScanCommand
         8   -> UartSendCommand
       0   emberAfOnOffClusterServerAttributeChangedCallback
      16   emberAfPreZDOMessageReceivedCallback
        16   -> emberSimpleDescriptorRequest


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
      12  GetHcActiveEndPoint
       1  HcDefaultEP
       1  StartUpFlag
       4  emberAfBasicClusterResetToFactoryDefaultsCallback
      14  emberAfMainInitCallback
      18  emberAfMainTickCallback
       2  emberAfOnOffClusterServerAttributeChangedCallback
      78  emberAfPreZDOMessageReceivedCallback

 
   1 byte  in section .bss
   1 byte  in section .data
 132 bytes in section .text
 
 132 bytes of CODE memory
   2 bytes of DATA memory

Errors: none
Warnings: 1
